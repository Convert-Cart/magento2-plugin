Folder Structure
--------------------------------------------------
/
    tagger.sh
    concatenated.txt
    README.md
    composer.json
    registration.php
Helper/
    Data.php
Logger/
    Logger.php
    Handler.php
Api/
    SyncRepositoryInterface.php
    PluginInfoInterface.php
    Data/
        PluginInfoInterface.php
        SyncInterface.php
.git/
    packed-refs
    FETCH_HEAD
    ORIG_HEAD
    index
    config
    description
    HEAD
    COMMIT_EDITMSG
    info/
        exclude
    logs/
        HEAD
        refs/
            heads/
                master
                sample_fix
            remotes/
                origin/
                    master
                    fixing_return_schema
                    return_fix
                    updating_pluginInterface
                    logs_added
                    updating_plugininfo
                    sample_fix
                    adding_logs
                    plugin_fix
                    plugin_update
                    updating_return
                    HEAD
                    test_return_feature
                    updating_di_file
                    fixing_return
    refs/
        heads/
            master
            sample_fix
        tags/
            1.0.11
        remotes/
            origin/
                master
                fixing_return_schema
                return_fix
                updating_pluginInterface
                logs_added
                updating_plugininfo
                sample_fix
                adding_logs
                plugin_fix
                plugin_update
                updating_return
                HEAD
                test_return_feature
                updating_di_file
                fixing_return
    objects/
        0c/
            9888a1f823ced623adbc372c2c4a3ed635d057
        07/
            fb08ebaf186e9496c7db3862349622542a4572
            b1886dcc2f7d81b23433b60ba361893aa1738b
        a7/
            fafba0520173b68d2345e8370102c9d3714a47
            bbc65ec4ff7930d749b6522cd2234e937a434e
        f6/
            cb77a83f806e1f386bb397aa5fd86f824d54d3
            fd78779fcbaaabe079a30ec9c87d403884b6be
        31/
            568a1cd143bdbfea1b703cd601b59184eaef35
            6b14afe1a4f31cd97d552dbf7707ad19e2e362
        ee/
            f3c1e6eea89b46f71d6e1176f47d99af5be638
        info/
        22/
            4aa4a906b282c41929b186ddf9349b398aae7d
            7c2662aae26d0e53f4caa51576373fe7276b43
        ff/
            b33a81023a52af38bcc94653e8f1f2b2409ecd
            bc7080096fe1aaa338d710132c60dfb79b5d7c
            3f9b35a90c401af357557159f1c2783bd67577
            52bbb8fda0cafe81d68fbbd3df99d3b31d8a11
        96/
            8b4926972eed222657ad666c32f7cb93223e4e
            e57135eced175660779dabd43f6b3b821e163b
            61083d65a5690d5abb5812f53d51f5eed9efd1
        1b/
            b9826f054457c54fe7354876152ffad806f154
            9893f8fb6334c5a9dddcfd33d20767b5fe1860
        ba/
            82cb3ed45c0b13bf0bae8c1321846dac80ba3e
        e4/
            7e9b6bf279042d011129bbdd54b632f9ad5414
        d8/
            86e5bb6c84165e71308e609e49adbf33a6045b
            5f1a3757e543aaa0a63016cbb80c4752e3620d
            cad03c0fcea876a411fd805ad69d6409a6e51e
        20/
            880014d708974d4a207c56bab6c025f8a4957e
        e0/
            711c503c8c5fed7fb501b096e92c9af4a1f53d
        c7/
            c2b84b19f4bfbe71d5dc44533cae580cf9689a
            451c6bc63ce9ecde9dfef061fefc7ce836b03c
        64/
            400b6b353aafd6349de153a99b80d57b9e9e7f
        33/
            57f43f1cd301ee7d8807b49a56985113da1874
            4bba386c8a9409df807a3d09e778fa5b27f87b
            7e46ffa5a4ab1f8ee103651706eea6a68333ff
        26/
            69adbfec1fb52ce1f2001d96ebcafb85c5a163
        34/
            f6dad690d74926791a8652a9bad62706dafaf5
        6c/
            407870911d5f5b6cd37957d9148b27088cbdef
        9d/
            03d3cb16eed7650e39c85c1abf20ff48084e7d
        1f/
            7da02879d53ef8aa8f936e0ba911627190a28e
            ca3a2a384b879c558bbf8c9ff6e2b108e06065
            72cb6a3599f8e7b54155ddafc14518f245de88
        5b/
            aa37c0f39ec0f3489281a04cd811f020f1cebc
        2d/
            b9b786e59139bbcbefb4f138bdef4ebb9ee466
        68/
            fe3072cfda606ff1e951f1ea70d82657d9172e
        2c/
            34cbd0f8fa043292187b7d36368a055b6fa407
            ed1965ff1973e733713056de7231e1d7430ee0
        01/
            3a3d085c74dfbc826dd958d0446dc1bc963890
        8d/
            c77440a2e3b0331c80f901a8b8094eac3806ad
        49/
            0cf12ad156a55583784b63bf9e90c739375b47
        5a/
            6c9463086df1e0a244b9d7d6f871b359f0ea37
        8a/
            9a7da1de98f8d22ee2c9fe30af40fa37e7a1e5
        c1/
            5124cb52a6b939fb6e93a6efe2acedbbadcb23
        3c/
            8186bf352cdd9670d24c0c4c2e717228469b16
            abc411b075b1fcabce77974ad10d601e274362
        9f/
            f8ee8ffa635b72953afb5fe85ea0a9f04a2334
        66/
            d8839acf7296c0c259f13936c71a4e1f3a9cf6
            e56c848c1f313607115d267a051e674e2d69ce
        b3/
            3b672312cc478c76acd361177eaf4ed070b1b4
        44/
            bdf704c6ee047d4c12dcf03f96d0b62174192d
            67a87c8a8ef020bec29fe7751e86600be76724
        95/
            715e64898d78128e05533f86756e03e44ce035
        ed/
            7c5a37343de4973db57d58e70353f078b76d2c
        4a/
            459db3056f757696b9983efdbf29807026b799
        eb/
            3853596eebebf8cba04f8e33ebbe71f952b90e
        5e/
            b1f8fbe54be0ccc41881d6824a892f38518ded
            d1508301b18c5856c3f99536923206e3225931
        9a/
            2d90a5247be294b0ae2cb212a476a9d880c8e1
        74/
            769e3e4e42248c400ac434221b0bd5340a7564
        86/
            2c56fbfa70a0e29a592b271f3d49774bb361c9
        pack/
            pack-347a28f2df20f9d4904ef3ad57747a5166679806.pack
            pack-347a28f2df20f9d4904ef3ad57747a5166679806.rev
            pack-347a28f2df20f9d4904ef3ad57747a5166679806.idx
        ae/
            01e6999c56c4664004ef3b72319928666e6dd8
            65e0b83169634977834c4a41f98a3489a21f35
        7a/
            8f773a67ac51ca93b819934c4f81fdb2f809cd
        19/
            009e16240c79b65d26d5170f779e98994ac372
        93/
            ce517b9f14e9f34000567f54464645f7337b61
            24e599072a83b3fa729f8ae50b52955e3aa347
        d3/
            da507435d11e46e88611bc738208526ef51630
        c5/
            bb1b431e4214590bdb8cf64dcc0af26490da32
            7cf658d7a5586e4a971cd394faeb4ac0f836d6
        70/
            3b7379443418d647f55bdffd07d91f8dc104b4
        6e/
            ff6a1e543cf3c9e0deec0bf1e1aeb164e24a26
            c445456139b971b39f590cd6910877314d3c13
        8e/
            1e2cefb534f82cf8236719b05e4aa88271c0c6
            70db2e254d5fbb06107ee09adb54406776c82a
        a8/
            43833bf5376d5eecf8ec6c1034bd472c124bad
        f7/
            6a317447c26cd7422330872d943c031d1e377a
            e7e0c1ee0df5dcc6481cf84a2830a8b44243eb
        85/
            bfaed966d37ca4f6103a5fc865106a776521ee
            80c30a390ec425ec3d1b86014cd2450197a200
        a1/
            8e57c99a9d4b29651491d3d6659e2beaec3cb3
        92/
            880a3e7702dff572bd2cc1197402a9f8d4f3b5
        6a/
            9a12803727324449639e4205589bc3425299a9
            4f92befc392519d5e9129cdbde6bc5b3d47e88
        b5/
            2c48b2e04527462173f453a1dd79f7de68e88f
        58/
            5ddb932171e71fd4cdcc07756a7df65d60cd55
        a3/
            19c31f8eeba3e87acb640ce665c30e6331d167
        4f/
            9a2dd8987112bc513d3df58e0ed9c5477734ce
        02/
            1a6d6908db111191bee303b7d457dad81ae7b6
        a2/
            17e1314e3b9111cf563ed1c21032c31358c036
        04/
            7740620ca987b50cf948fabffe9093f6d76977
        bb/
            13111366244868fab741ce35d82a29a02a158f
        5f/
            6e2832e3d44e70efb56d3827dd22e3935cda9c
            ec52fd17be7d7d5fc58c681e24490489b9561a
        79/
            69e5c3e6e57d46ae045054bdfa318f957cf043
            656194af55e03338ab89cac9255be066345814
        87/
            8b26b4bc815fd8bb636369f2a72f0e3f6a2434
            33daa2cb63ee8cc502621952abfd2576cc29f8
            4d2efbf8f2262b75d00b964955e48b10d27e71
        c9/
            931d8bc40e8fbc430d11985853fcd69492f749
        e9/
            1c488c6661814579597195fa2aba1c6b6df114
            4d11eab399d3c1d95b0e95d21e14127b759251
        f9/
            6b7e80fb8b9c4e4e3a0eafebd53c4738dbd8be
        13/
            ea5480b2570600de636b7f985d0bfa3604dea9
        37/
            81a4f7333c3f041153d0f16916487ac98a862a
        0e/
            f358be0181adc3be68f3044a9c541313cff9a8
            722ef90878aae21523fd479e19546b2f797983
        73/
            fd7e4cb0ffd59b9cce2b12b36028e834f3df56
            22a32814285362416e2fb25c874db495735f1b
        d1/
            f0255c302629df1a1e55ebb0c21cab29aad6e7
        88/
            ab25324f5f15ded7d4efaf8ca953f430d0f45d
        5d/
            45e9ea2db82a91ad0e16d233ac0e2d6dadbd13
        91/
            8dc437e92cb8bbd32407a81ef0e06a965ea97e
            d380ce7d1d5e4ec7fca7ef261c7b492d279260
        03/
            cd37bd3073ea06d1c6a26204acf0c07894e3e0
            e41b41532ec39281c74723bc3efd20c1a4d5b4
            3e2604386d623f522cde5b9a4a49b6478f56cc
        05/
            f17042bae95d824323aa05b7e72a462d50191a
        c8/
            1d132c106ee6919488db167f56f182b302e69c
            6c172ea287951d7bd4fea4190ffa9a5605c894
        d6/
            1a799d2dfb435d684f68fc9277d9ac9c37a2ea
        f2/
            c97440a041acb374f9b811d513f61a28419e8a
        2e/
            425f39c3a98c6dd4660563d855862b508df584
        b1/
            c0d0245dc924b1f889ee81627b8a7b49913499
            7a171157c428b5df5d0deb84ee3e3dfd229c57
        a6/
            83c622226aa4572098ca9f9b95185771052b5a
            b7261a402617abf88d206ba7b575ddbe53488d
        b6/
            822b5e5df0ff6397f311e33e1b9df3fa1f28d9
            6f5f71a1626d92cad236423d6c4078ec7680ae
        de/
            fbf288ba4cb840aff6a61254c8d31fc27e817a
        9b/
            2075e45d81334f36e734a8880fa42eafde69c1
        61/
            6f7e4316170063bcfcd6af3e5e6a0548cdff43
            ca55d68a9c1c3c139c9d78c54f1b781e061d70
        b9/
            5fffe059a70c4e6f5296f61f1dc52ec07e6bc2
            5a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c
        b8/
            be978ec55ded5e490a16e62845a8b924d59139
        d7/
            fec4773f00794a78d1bd9d3c11b1a3cdc20de4
            e888e7a35a38d3724ded69f5ff1d011e3df314
        99/
            6c668eca80f2208237d69c499cf3b4c2fafdc2
        65/
            059dc37836dd077d533ef9894bbc8feb0821af
            13aff7a00a9e2b9fc03dade566cef6810bef55
            b49abad11fb942c396bed7dbfd4c7caab8bf4b
            6f85961b8b57fcd5b5631787afd28c3408f3c9
        fa/
            f33e5b8a42b21dafb34a37dc2d23f7cb533f29
            661206ce219fdd78c96f236b277de9a0735612
            5dd5b8c7320313fc7d5d17c308859125b8da64
            f571b114581846f399cd138d753aa948ce8836
        c4/
            65a0e9da5c8dd64ca48da102d78f0a0d1f74da
        e6/
            1884a83328672a665b7039f6391c9790ce1a68
            e093efe33779e4c25b0211ea5284dcf6ead353
        53/
            6af9e6d418ed87334ebb7bd5fd4f1d59b55a2a
            e03cd531bd856a3b23afa0457b34939099d329
            ef6cb6e1791cd0f2e992167cb463d0ceac3bcf
        41/
            6d2d1388b1b768690c0e212664f78914e5289b
            bc3c57aed66db374619ec451bc8ce8e4d1f9d9
        d5/
            2ac547c838bf028930e56e43129116d18fc31a
        b4/
            2b4f9f3e9d1beeb9bbc2a8ab33bc70e6864133
        27/
            8ea2b70f44482a803979a592efd3f1659cf3e1
        00/
            aed298a41035e59d2b87b90a117ff1e03a4588
            5739f179b8b513c4a98c6e152bdea37d83f472
        ab/
            60004bb7408e0c856518162db930b07ae55fae
            b17804a86c9df492d2fa5cc5dcbf2364efb498
        ea/
            edfb4f5bc064a7fefa4f6ff65d270d85b295f3
            f6cc6638fa0023cf6606609f5a9f8049e6c1cf
        0f/
            472c6ff6699735ecdd1db811a7331055d801fc
        b7/
            dd4fe5ec4bb558f2ac1635ef1a09706dd3e72c
        30/
            7a6afa51f61b53f312994621eb9f2591bcc7ab
        48/
            29173289e83163e831064a99e8147b9ba34494
        52/
            20f3c61227d63572c42c8cfac92acb309290e4
        fb/
            3bc872863e43f346d9061711eae050a018c0a3
            7880ac27f9f9cc0f2534d1be2892cf71af0b8a
            2bb8426a12c58c6a36cb2d671a629d4c2cd49f
        bd/
            dead0578dfac6697cc1780e12980bd8eeaed3b
        c6/
            372e87a1ec2d5682e4bc90f59786829a54d14c
            3d2c7ff0284af7c029d0d7c8ab6177829a4e23
        ac/
            40b5edb1a0befe02974f232301c43b2456de02
            ca62753bea7023b7ac29c06ce421791ebda2af
        80/
            779144931dd5a00a151d7bdc3f2e581d54fc9e
            595da3c4d112faeeaa263420c0bfa369b4f183
        6f/
            eb125e9eaca94e7d5cd6166671c205ce5cd815
        e2/
            93cde693110017df114e567686d77c8e9e48d2
        cc/
            f504001a2f051ece8e3bb7d4e591f7548887c4
        0d/
            751d8a1405234e01a2a945ec62f62a22f2cc3e
        59/
            b6b270df80cc393c65fab69d5440fb419539b6
        47/
            237a25aa621c0ec40c9cd601fbcff85b94589a
        76/
            a71c5f28bf138cf4e682265ce225b6fb9e0af5
        67/
            0b62753e7ff5a35e3f0fa29eadedc584cef3a7
            c750d1a2bccaa9be752e27ce9225a78d49f0d6
        7b/
            b24af6078a775a00889baaa3121e96dd44d4b3
            b430f2f9d2b367949fa0489b0000086f354f96
        38/
            8944fd63ee07e8a40e6a21c1a40dc39e805704
            3f2c7ee1bacfbfa2886f986c15d8404b824e35
        78/
            ac8a2790686803ef83b644a084f1545b55d4dc
        3d/
            108c90e5b92142cbb1482aeddab203c8defc6e
        6b/
            a0e4414e18d25a5ba6b1de738251d095dd8ecf
        21/
            9b8e67a2b5dfc7cf44ac5da81261d1035b1132
        c0/
            5f437d290c0983f44a4e7fd9648561663aa9e5
        d4/
            60d92a8f48f2cfd8d3cfc137f172394c99d732
        83/
            b0a7bea40352a59c2bba91b3dd4da1ce990bd5
        3f/
            618f94927954b5a4681e311978ca7e80d7c0e2
        43/
            bb3104b47eca92d9d8e26528a19746a4998913
        09/
            7e73f464b266c9b4c890db32296a308421e2a1
        3e/
            56aed5895fcee2922406e08a8726be18ea10bf
        15/
            64177a91a0f85c05fd4b21b8f913e5c60ca05c
        e1/
            74704fc1a17e6766ec36966355df3b379cdd12
        bc/
            c3ddc9a22a73d9ea87564ab227fd28847d0134
            7b0caca1a9ceacb60ae3c521744cab03935511
        63/
            708399cd6ecb0631f87cadf39b4548c43c8c11
            6ce384234e2db78c50d31bdab12cbc9bfae1e7
        f8/
            7df7fbda09e66c249063fec07f12112f77d751
            b4680e6c7e95ee65d59c7699778afc2a17786c
            95a99cc6b0ee97b28419ea2c2c38bd35b647a3
            435c1f39bbfdcbd4cadcca7ca57f5442c7bbcd
        89/
            d2e811122c7db013db4699ccef0c65743e2f0a
        e7/
            0cb3acabeaf2a2bab2a430e19e859f97a48e29
        36/
            26bf5d3cdbd09f62b319d95804a58b99b6e2fb
        97/
            da47f7403bcf24f1c2192ae877836da76cb402
        4d/
            9bb24ed2480f2baf41059d7744ac8f4c686be5
        56/
            0492949c839bbd3ef6fc95b7ef877202e0fd54
            619506609c4036931b17c179f16e68fb038bdf
        77/
            065a3d403de010b8e5986c3a52c39edecd2b26
        39/
            099ca1214fbca213a03ad62137b69b9b5a4836
            8131e25f3cdf63d1cf9d461913b8abd2261340
        72/
            87a0333a73dbddbdabd04ccd16b1fc1d2de084
        7c/
            304539986b198d48cf6eab9bb2ccd187f22336
        9c/
            b625b57a3c0dc81f550678335d926ad820826e
            a7e0ce1a7a5e42826572a9b7bc4943a43f67a7
    hooks/
        pre-merge-commit.sample
        pre-rebase.sample
        commit-msg.sample
        fsmonitor-watchman.sample
        pre-push.sample
        prepare-commit-msg.sample
        sendemail-validate.sample
        push-to-checkout.sample
        post-update.sample
        pre-commit.sample
        applypatch-msg.sample
        pre-receive.sample
        update.sample
        pre-applypatch.sample
    branches/
Block/
    Script.php
Observer/
    ProcessCategoryAfterDeleteEventObserver.php
    ContentpageViewed.php
    HomepageViewed.php
    AddScript.php
    ProductsSearched.php
    ProcessProductAfterDeleteEventObserver.php
    Cart/
        OrderCompleted.php
        CartViewed.php
        CheckoutViewed.php
    Customer/
        LoggedOut.php
        LoggedIn.php
        CustomerRegistered.php
    Catalog/
        CategoryViewed.php
        ProductViewed.php
Model/
    SyncManagement.php
    Sync.php
    Cc.php
    Data/
        PluginInfo.php
    Api/
        SyncApi.php
        PluginInfo.php
    ResourceModel/
        Sync.php
        PluginInfo.php
        Sync/
            Collection.php
view/
    frontend/
        templates/
            init.phtml
            event.phtml
Setup/
    UpgradeSchema.php
    Uninstall.php
    InstallSchema.php
    UpgradeData.php
etc/
    webapi.xml
    di.xml
    module.xml
    adminhtml/
        events.xml
        system.xml
    frontend/
        events.xml


File Contents
--------------------------------------------------


./tagger.sh
File type: .sh
#!/bin/bash

# Variables
BRANCH="master"
MAIN_VERSION=$1
BETA_VERSION="${MAIN_VERSION}-beta"
BACKUP_BRANCH="temp-tagging-branch"  # Define the backup branch name

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Exit the script if any command fails
set -e

# Function to handle errors (POSIX compliant)
handle_error() {
    printf "${RED}Error occurred: %s${NC}\n" "$1"
    cleanup
    exit 1
}

# Cleanup function
cleanup() {
    git reset .
    git clean -fd .
    git checkout .

    # Checkout master branch
    printf "${YELLOW}Checking out master branch during cleanup...${NC}\n"
    git checkout $BRANCH || printf "${RED}Failed to checkout $BRANCH during cleanup.${NC}\n"

    # Delete the temporary branch if it exists
    if git show-ref --verify --quiet refs/heads/$BACKUP_BRANCH; then
        git branch -D $BACKUP_BRANCH || printf "${RED}Failed to delete temporary branch $BACKUP_BRANCH.${NC}\n"
    fi
}

# Ensure version number is provided
if [ -z "$MAIN_VERSION" ]; then
    handle_error "Please provide a version number. Usage: ./tagger.sh VERSION_NUMBER"
fi

# Prompt for tag creation options
echo "Select the tags you want to create:"
echo "1) Production tag"
echo "2) Beta tag"
echo "3) Both"
echo -n "Enter your choice (1/2/3): "
read choice

# Ensure we are on the latest master branch
printf "${YELLOW}Checking out the latest master branch...${NC}\n"
git checkout $BRANCH || handle_error "Failed to checkout $BRANCH"
git pull origin $BRANCH || handle_error "Failed to pull latest changes from $BRANCH"

# Check if old backup branch exists and remove it
if git show-ref --verify --quiet refs/heads/$BACKUP_BRANCH; then
    printf "${YELLOW}Old backup branch '$BACKUP_BRANCH' found. Deleting it...${NC}\n"
    git branch -D $BACKUP_BRANCH || handle_error "Failed to delete old backup branch"
fi

# Create a backup branch to prevent affecting master directly
git checkout -b $BACKUP_BRANCH || handle_error "Failed to create temporary branch $BACKUP_BRANCH"

# Function to check if a tag exists on remote
check_remote_tag_exists() {
    git fetch --tags
    git ls-remote --tags origin | grep -q "refs/tags/$1"
}

# Function to get tag creation date from remote
get_tag_creation_date() {
    git log -1 --format=%aD "$1" 2>/dev/null
}

# Function to confirm tag deletion
confirm_tag_deletion() {
    echo -n "${YELLOW}Tag '$1' already exists on remote (created on: $2). \nDo you want to delete it and recreate it? (y/n): ${NC}"
    read response
    if [ "$response" != "y" ]; then
        printf "${YELLOW}Keeping existing tag '%s'. Skipping creation...${NC}\n" "$1"
        return 1
    fi
    return 0
}

# Check for existing remote tags
if [ "$choice" = "1" ] || [ "$choice" = "3" ]; then
    if check_remote_tag_exists "$MAIN_VERSION"; then
        creation_date=$(get_tag_creation_date "$MAIN_VERSION")
        if confirm_tag_deletion "$MAIN_VERSION" "$creation_date"; then
            git tag -d "$MAIN_VERSION" || handle_error "Failed to delete existing production tag"
        else
            printf "${GREEN}Skipping creation of production tag %s.${NC}\n" "$MAIN_VERSION"
        fi
    fi
fi

if [ "$choice" = "2" ] || [ "$choice" = "3" ]; then
    if check_remote_tag_exists "$BETA_VERSION"; then
        creation_date=$(get_tag_creation_date "$BETA_VERSION")
        if confirm_tag_deletion "$BETA_VERSION" "$creation_date"; then
            git tag -d "$BETA_VERSION" || handle_error "Failed to delete existing beta tag"
        else
            printf "${GREEN}Skipping creation of beta tag %s.${NC}\n" "$BETA_VERSION"
        fi
    fi
fi

# Update version in composer.json
printf "${YELLOW}Updating composer.json with version %s...${NC}\n" "$MAIN_VERSION"
sed -i "s/\"version\": \".*\"/\"version\": \"$MAIN_VERSION\"/" composer.json || handle_error "Failed to update composer.json"

# Update setup_version in module.xml
printf "${YELLOW}Updating setup_version in module.xml...${NC}\n"
sed -i "s/setup_version=\"[^\"]*\"/setup_version=\"$MAIN_VERSION\"/" etc/module.xml || handle_error "Failed to update module.xml"

# Commit changes for production tag if chosen
if [ "$choice" = "1" ] || [ "$choice" = "3" ]; then
    git add composer.json etc/module.xml || handle_error "Failed to add files for production commit"
    git commit -m "Release version $MAIN_VERSION" || handle_error "Failed to commit production changes"
    git tag -a "$MAIN_VERSION" -m "Version $MAIN_VERSION" || handle_error "Failed to create production tag"
    printf "${GREEN}Production tag %s created successfully${NC}\n" "$MAIN_VERSION"
fi

# Update to beta version in composer.json
printf "${YELLOW}Updating composer.json with version %s...${NC}\n" "$BETA_VERSION"
sed -i "s/\"version\": \"$MAIN_VERSION\"/\"version\": \"$BETA_VERSION\"/" composer.json || handle_error "Failed to update composer.json for beta"

# Update setup_version in module.xml for beta version
printf "${YELLOW}Updating setup_version in module.xml for beta version...${NC}\n"
sed -i "s/setup_version=\"$MAIN_VERSION\"/setup_version=\"$BETA_VERSION\"/" etc/module.xml || handle_error "Failed to update module.xml for beta"

# Modify domain in init.phtml for beta
printf "${YELLOW}Updating domain in init.phtml for beta...${NC}\n"
sed -i 's/cdn.convertcart.com/cdn-beta.convertcart.com/' view/frontend/templates/init.phtml || handle_error "Failed to update domain in init.phtml for beta"

# Commit changes for beta tag if chosen
if [ "$choice" = "2" ] || [ "$choice" = "3" ]; then
    git add composer.json etc/module.xml view/frontend/templates/init.phtml || handle_error "Failed to add files for beta commit"
    git commit -m "Release beta version $BETA_VERSION" || handle_error "Failed to commit beta version"
    git tag -a "$BETA_VERSION" -m "Beta version $BETA_VERSION" || handle_error "Failed to create beta tag"
    printf "${GREEN}Beta tag %s created successfully${NC}\n" "$BETA_VERSION"
fi

# Push tags to remote if created
if [ "$choice" = "1" ] || [ "$choice" = "3" ]; then
    printf "${YELLOW}Pushing production tag to remote...${NC}\n"
    git push -f origin "$MAIN_VERSION" || handle_error "Failed to push production tag"
fi

if [ "$choice" = "2" ] || [ "$choice" = "3" ]; then
    printf "${YELLOW}Pushing beta tag to remote...${NC}\n"
    git push -f origin "$BETA_VERSION" || handle_error "Failed to push beta tag"
fi

# Final cleanup: Checkout master and clean up the temporary branch
cleanup
printf "${GREEN}Tags processing completed.${NC}\n"


--------------------------------------------------
File End
--------------------------------------------------


./concatenated.txt
File type: .txt
Folder Structure
--------------------------------------------------
/
    tagger.sh
    concatenated.txt
    README.md
    composer.json
    registration.php
Helper/
    Data.php
Logger/
    Logger.php
    Handler.php
Api/
    SyncRepositoryInterface.php
    PluginInfoInterface.php
    Data/
        PluginInfoInterface.php
        SyncInterface.php
.git/
    packed-refs
    FETCH_HEAD
    ORIG_HEAD
    index
    config
    description
    HEAD
    COMMIT_EDITMSG
    info/
        exclude
    logs/
        HEAD
        refs/
            heads/
                master
                sample_fix
            remotes/
                origin/
                    master
                    fixing_return_schema
                    return_fix
                    updating_pluginInterface
                    logs_added
                    updating_plugininfo
                    sample_fix
                    adding_logs
                    plugin_fix
                    plugin_update
                    updating_return
                    HEAD
                    test_return_feature
                    updating_di_file
                    fixing_return
    refs/
        heads/
            master
            sample_fix
        tags/
            1.0.11
        remotes/
            origin/
                master
                fixing_return_schema
                return_fix
                updating_pluginInterface
                logs_added
                updating_plugininfo
                sample_fix
                adding_logs
                plugin_fix
                plugin_update
                updating_return
                HEAD
                test_return_feature
                updating_di_file
                fixing_return
    objects/
        0c/
            9888a1f823ced623adbc372c2c4a3ed635d057
        07/
            fb08ebaf186e9496c7db3862349622542a4572
            b1886dcc2f7d81b23433b60ba361893aa1738b
        a7/
            fafba0520173b68d2345e8370102c9d3714a47
            bbc65ec4ff7930d749b6522cd2234e937a434e
        f6/
            cb77a83f806e1f386bb397aa5fd86f824d54d3
            fd78779fcbaaabe079a30ec9c87d403884b6be
        31/
            568a1cd143bdbfea1b703cd601b59184eaef35
            6b14afe1a4f31cd97d552dbf7707ad19e2e362
        ee/
            f3c1e6eea89b46f71d6e1176f47d99af5be638
        info/
        22/
            4aa4a906b282c41929b186ddf9349b398aae7d
            7c2662aae26d0e53f4caa51576373fe7276b43
        ff/
            b33a81023a52af38bcc94653e8f1f2b2409ecd
            bc7080096fe1aaa338d710132c60dfb79b5d7c
            3f9b35a90c401af357557159f1c2783bd67577
            52bbb8fda0cafe81d68fbbd3df99d3b31d8a11
        96/
            8b4926972eed222657ad666c32f7cb93223e4e
            e57135eced175660779dabd43f6b3b821e163b
            61083d65a5690d5abb5812f53d51f5eed9efd1
        1b/
            b9826f054457c54fe7354876152ffad806f154
            9893f8fb6334c5a9dddcfd33d20767b5fe1860
        ba/
            82cb3ed45c0b13bf0bae8c1321846dac80ba3e
        e4/
            7e9b6bf279042d011129bbdd54b632f9ad5414
        d8/
            86e5bb6c84165e71308e609e49adbf33a6045b
            5f1a3757e543aaa0a63016cbb80c4752e3620d
            cad03c0fcea876a411fd805ad69d6409a6e51e
        20/
            880014d708974d4a207c56bab6c025f8a4957e
        e0/
            711c503c8c5fed7fb501b096e92c9af4a1f53d
        c7/
            c2b84b19f4bfbe71d5dc44533cae580cf9689a
            451c6bc63ce9ecde9dfef061fefc7ce836b03c
        64/
            400b6b353aafd6349de153a99b80d57b9e9e7f
        33/
            57f43f1cd301ee7d8807b49a56985113da1874
            4bba386c8a9409df807a3d09e778fa5b27f87b
            7e46ffa5a4ab1f8ee103651706eea6a68333ff
        26/
            69adbfec1fb52ce1f2001d96ebcafb85c5a163
        34/
            f6dad690d74926791a8652a9bad62706dafaf5
        6c/
            407870911d5f5b6cd37957d9148b27088cbdef
        9d/
            03d3cb16eed7650e39c85c1abf20ff48084e7d
        1f/
            7da02879d53ef8aa8f936e0ba911627190a28e
            ca3a2a384b879c558bbf8c9ff6e2b108e06065
            72cb6a3599f8e7b54155ddafc14518f245de88
        5b/
            aa37c0f39ec0f3489281a04cd811f020f1cebc
        2d/
            b9b786e59139bbcbefb4f138bdef4ebb9ee466
        68/
            fe3072cfda606ff1e951f1ea70d82657d9172e
        2c/
            34cbd0f8fa043292187b7d36368a055b6fa407
            ed1965ff1973e733713056de7231e1d7430ee0
        8d/
            c77440a2e3b0331c80f901a8b8094eac3806ad
        49/
            0cf12ad156a55583784b63bf9e90c739375b47
        5a/
            6c9463086df1e0a244b9d7d6f871b359f0ea37
        8a/
            9a7da1de98f8d22ee2c9fe30af40fa37e7a1e5
        c1/
            5124cb52a6b939fb6e93a6efe2acedbbadcb23
        3c/
            8186bf352cdd9670d24c0c4c2e717228469b16
            abc411b075b1fcabce77974ad10d601e274362
        9f/
            f8ee8ffa635b72953afb5fe85ea0a9f04a2334
        66/
            d8839acf7296c0c259f13936c71a4e1f3a9cf6
            e56c848c1f313607115d267a051e674e2d69ce
        b3/
            3b672312cc478c76acd361177eaf4ed070b1b4
        44/
            bdf704c6ee047d4c12dcf03f96d0b62174192d
            67a87c8a8ef020bec29fe7751e86600be76724
        95/
            715e64898d78128e05533f86756e03e44ce035
        ed/
            7c5a37343de4973db57d58e70353f078b76d2c
        4a/
            459db3056f757696b9983efdbf29807026b799
        eb/
            3853596eebebf8cba04f8e33ebbe71f952b90e
        5e/
            b1f8fbe54be0ccc41881d6824a892f38518ded
            d1508301b18c5856c3f99536923206e3225931
        9a/
            2d90a5247be294b0ae2cb212a476a9d880c8e1
        74/
            769e3e4e42248c400ac434221b0bd5340a7564
        86/
            2c56fbfa70a0e29a592b271f3d49774bb361c9
        pack/
            pack-347a28f2df20f9d4904ef3ad57747a5166679806.pack
            pack-347a28f2df20f9d4904ef3ad57747a5166679806.rev
            pack-347a28f2df20f9d4904ef3ad57747a5166679806.idx
        ae/
            01e6999c56c4664004ef3b72319928666e6dd8
            65e0b83169634977834c4a41f98a3489a21f35
        7a/
            8f773a67ac51ca93b819934c4f81fdb2f809cd
        19/
            009e16240c79b65d26d5170f779e98994ac372
        93/
            ce517b9f14e9f34000567f54464645f7337b61
            24e599072a83b3fa729f8ae50b52955e3aa347
        d3/
            da507435d11e46e88611bc738208526ef51630
        c5/
            bb1b431e4214590bdb8cf64dcc0af26490da32
            7cf658d7a5586e4a971cd394faeb4ac0f836d6
        70/
            3b7379443418d647f55bdffd07d91f8dc104b4
        6e/
            ff6a1e543cf3c9e0deec0bf1e1aeb164e24a26
            c445456139b971b39f590cd6910877314d3c13
        8e/
            1e2cefb534f82cf8236719b05e4aa88271c0c6
            70db2e254d5fbb06107ee09adb54406776c82a
        a8/
            43833bf5376d5eecf8ec6c1034bd472c124bad
        f7/
            6a317447c26cd7422330872d943c031d1e377a
            e7e0c1ee0df5dcc6481cf84a2830a8b44243eb
        85/
            bfaed966d37ca4f6103a5fc865106a776521ee
            80c30a390ec425ec3d1b86014cd2450197a200
        a1/
            8e57c99a9d4b29651491d3d6659e2beaec3cb3
        92/
            880a3e7702dff572bd2cc1197402a9f8d4f3b5
        6a/
            9a12803727324449639e4205589bc3425299a9
            4f92befc392519d5e9129cdbde6bc5b3d47e88
        b5/
            2c48b2e04527462173f453a1dd79f7de68e88f
        58/
            5ddb932171e71fd4cdcc07756a7df65d60cd55
        a3/
            19c31f8eeba3e87acb640ce665c30e6331d167
        4f/
            9a2dd8987112bc513d3df58e0ed9c5477734ce
        02/
            1a6d6908db111191bee303b7d457dad81ae7b6
        a2/
            17e1314e3b9111cf563ed1c21032c31358c036
        04/
            7740620ca987b50cf948fabffe9093f6d76977
        bb/
            13111366244868fab741ce35d82a29a02a158f
        5f/
            6e2832e3d44e70efb56d3827dd22e3935cda9c
            ec52fd17be7d7d5fc58c681e24490489b9561a
        79/
            69e5c3e6e57d46ae045054bdfa318f957cf043
            656194af55e03338ab89cac9255be066345814
        87/
            8b26b4bc815fd8bb636369f2a72f0e3f6a2434
            33daa2cb63ee8cc502621952abfd2576cc29f8
            4d2efbf8f2262b75d00b964955e48b10d27e71
        c9/
            931d8bc40e8fbc430d11985853fcd69492f749
        e9/
            1c488c6661814579597195fa2aba1c6b6df114
            4d11eab399d3c1d95b0e95d21e14127b759251
        f9/
            6b7e80fb8b9c4e4e3a0eafebd53c4738dbd8be
        13/
            ea5480b2570600de636b7f985d0bfa3604dea9
        37/
            81a4f7333c3f041153d0f16916487ac98a862a
        0e/
            f358be0181adc3be68f3044a9c541313cff9a8
            722ef90878aae21523fd479e19546b2f797983
        73/
            fd7e4cb0ffd59b9cce2b12b36028e834f3df56
            22a32814285362416e2fb25c874db495735f1b
        d1/
            f0255c302629df1a1e55ebb0c21cab29aad6e7
        5d/
            45e9ea2db82a91ad0e16d233ac0e2d6dadbd13
        91/
            8dc437e92cb8bbd32407a81ef0e06a965ea97e
            d380ce7d1d5e4ec7fca7ef261c7b492d279260
        03/
            cd37bd3073ea06d1c6a26204acf0c07894e3e0
            e41b41532ec39281c74723bc3efd20c1a4d5b4
            3e2604386d623f522cde5b9a4a49b6478f56cc
        05/
            f17042bae95d824323aa05b7e72a462d50191a
        c8/
            1d132c106ee6919488db167f56f182b302e69c
            6c172ea287951d7bd4fea4190ffa9a5605c894
        d6/
            1a799d2dfb435d684f68fc9277d9ac9c37a2ea
        f2/
            c97440a041acb374f9b811d513f61a28419e8a
        2e/
            425f39c3a98c6dd4660563d855862b508df584
        b1/
            c0d0245dc924b1f889ee81627b8a7b49913499
            7a171157c428b5df5d0deb84ee3e3dfd229c57
        a6/
            83c622226aa4572098ca9f9b95185771052b5a
            b7261a402617abf88d206ba7b575ddbe53488d
        b6/
            822b5e5df0ff6397f311e33e1b9df3fa1f28d9
            6f5f71a1626d92cad236423d6c4078ec7680ae
        de/
            fbf288ba4cb840aff6a61254c8d31fc27e817a
        9b/
            2075e45d81334f36e734a8880fa42eafde69c1
        61/
            6f7e4316170063bcfcd6af3e5e6a0548cdff43
            ca55d68a9c1c3c139c9d78c54f1b781e061d70
        b9/
            5fffe059a70c4e6f5296f61f1dc52ec07e6bc2
            5a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c
        b8/
            be978ec55ded5e490a16e62845a8b924d59139
        d7/
            fec4773f00794a78d1bd9d3c11b1a3cdc20de4
            e888e7a35a38d3724ded69f5ff1d011e3df314
        99/
            6c668eca80f2208237d69c499cf3b4c2fafdc2
        65/
            059dc37836dd077d533ef9894bbc8feb0821af
            13aff7a00a9e2b9fc03dade566cef6810bef55
            b49abad11fb942c396bed7dbfd4c7caab8bf4b
            6f85961b8b57fcd5b5631787afd28c3408f3c9
        fa/
            f33e5b8a42b21dafb34a37dc2d23f7cb533f29
            661206ce219fdd78c96f236b277de9a0735612
            5dd5b8c7320313fc7d5d17c308859125b8da64
            f571b114581846f399cd138d753aa948ce8836
        c4/
            65a0e9da5c8dd64ca48da102d78f0a0d1f74da
        e6/
            1884a83328672a665b7039f6391c9790ce1a68
            e093efe33779e4c25b0211ea5284dcf6ead353
        53/
            6af9e6d418ed87334ebb7bd5fd4f1d59b55a2a
            e03cd531bd856a3b23afa0457b34939099d329
            ef6cb6e1791cd0f2e992167cb463d0ceac3bcf
        41/
            6d2d1388b1b768690c0e212664f78914e5289b
            bc3c57aed66db374619ec451bc8ce8e4d1f9d9
        d5/
            2ac547c838bf028930e56e43129116d18fc31a
        b4/
            2b4f9f3e9d1beeb9bbc2a8ab33bc70e6864133
        27/
            8ea2b70f44482a803979a592efd3f1659cf3e1
        00/
            aed298a41035e59d2b87b90a117ff1e03a4588
            5739f179b8b513c4a98c6e152bdea37d83f472
        ab/
            60004bb7408e0c856518162db930b07ae55fae
            b17804a86c9df492d2fa5cc5dcbf2364efb498
        ea/
            edfb4f5bc064a7fefa4f6ff65d270d85b295f3
            f6cc6638fa0023cf6606609f5a9f8049e6c1cf
        0f/
            472c6ff6699735ecdd1db811a7331055d801fc
        b7/
            dd4fe5ec4bb558f2ac1635ef1a09706dd3e72c
        30/
            7a6afa51f61b53f312994621eb9f2591bcc7ab
        48/
            29173289e83163e831064a99e8147b9ba34494
        52/
            20f3c61227d63572c42c8cfac92acb309290e4
        fb/
            3bc872863e43f346d9061711eae050a018c0a3
            7880ac27f9f9cc0f2534d1be2892cf71af0b8a
            2bb8426a12c58c6a36cb2d671a629d4c2cd49f
        bd/
            dead0578dfac6697cc1780e12980bd8eeaed3b
        c6/
            372e87a1ec2d5682e4bc90f59786829a54d14c
            3d2c7ff0284af7c029d0d7c8ab6177829a4e23
        ac/
            40b5edb1a0befe02974f232301c43b2456de02
            ca62753bea7023b7ac29c06ce421791ebda2af
        80/
            779144931dd5a00a151d7bdc3f2e581d54fc9e
            595da3c4d112faeeaa263420c0bfa369b4f183
        6f/
            eb125e9eaca94e7d5cd6166671c205ce5cd815
        e2/
            93cde693110017df114e567686d77c8e9e48d2
        cc/
            f504001a2f051ece8e3bb7d4e591f7548887c4
        0d/
            751d8a1405234e01a2a945ec62f62a22f2cc3e
        59/
            b6b270df80cc393c65fab69d5440fb419539b6
        47/
            237a25aa621c0ec40c9cd601fbcff85b94589a
        76/
            a71c5f28bf138cf4e682265ce225b6fb9e0af5
        67/
            0b62753e7ff5a35e3f0fa29eadedc584cef3a7
            c750d1a2bccaa9be752e27ce9225a78d49f0d6
        7b/
            b24af6078a775a00889baaa3121e96dd44d4b3
            b430f2f9d2b367949fa0489b0000086f354f96
        38/
            8944fd63ee07e8a40e6a21c1a40dc39e805704
            3f2c7ee1bacfbfa2886f986c15d8404b824e35
        78/
            ac8a2790686803ef83b644a084f1545b55d4dc
        3d/
            108c90e5b92142cbb1482aeddab203c8defc6e
        6b/
            a0e4414e18d25a5ba6b1de738251d095dd8ecf
        21/
            9b8e67a2b5dfc7cf44ac5da81261d1035b1132
        c0/
            5f437d290c0983f44a4e7fd9648561663aa9e5
        d4/
            60d92a8f48f2cfd8d3cfc137f172394c99d732
        83/
            b0a7bea40352a59c2bba91b3dd4da1ce990bd5
        3f/
            618f94927954b5a4681e311978ca7e80d7c0e2
        43/
            bb3104b47eca92d9d8e26528a19746a4998913
        09/
            7e73f464b266c9b4c890db32296a308421e2a1
        3e/
            56aed5895fcee2922406e08a8726be18ea10bf
        15/
            64177a91a0f85c05fd4b21b8f913e5c60ca05c
        bc/
            c3ddc9a22a73d9ea87564ab227fd28847d0134
            7b0caca1a9ceacb60ae3c521744cab03935511
        63/
            708399cd6ecb0631f87cadf39b4548c43c8c11
            6ce384234e2db78c50d31bdab12cbc9bfae1e7
        f8/
            7df7fbda09e66c249063fec07f12112f77d751
            b4680e6c7e95ee65d59c7699778afc2a17786c
            95a99cc6b0ee97b28419ea2c2c38bd35b647a3
            435c1f39bbfdcbd4cadcca7ca57f5442c7bbcd
        89/
            d2e811122c7db013db4699ccef0c65743e2f0a
        e7/
            0cb3acabeaf2a2bab2a430e19e859f97a48e29
        36/
            26bf5d3cdbd09f62b319d95804a58b99b6e2fb
        4d/
            9bb24ed2480f2baf41059d7744ac8f4c686be5
        56/
            0492949c839bbd3ef6fc95b7ef877202e0fd54
            619506609c4036931b17c179f16e68fb038bdf
        77/
            065a3d403de010b8e5986c3a52c39edecd2b26
        39/
            099ca1214fbca213a03ad62137b69b9b5a4836
            8131e25f3cdf63d1cf9d461913b8abd2261340
        72/
            87a0333a73dbddbdabd04ccd16b1fc1d2de084
        7c/
            304539986b198d48cf6eab9bb2ccd187f22336
        9c/
            b625b57a3c0dc81f550678335d926ad820826e
            a7e0ce1a7a5e42826572a9b7bc4943a43f67a7
    hooks/
        pre-merge-commit.sample
        pre-rebase.sample
        commit-msg.sample
        fsmonitor-watchman.sample
        pre-push.sample
        prepare-commit-msg.sample
        sendemail-validate.sample
        push-to-checkout.sample
        post-update.sample
        pre-commit.sample
        applypatch-msg.sample
        pre-receive.sample
        update.sample
        pre-applypatch.sample
    branches/
Block/
    Script.php
Observer/
    ProcessCategoryAfterDeleteEventObserver.php
    ContentpageViewed.php
    HomepageViewed.php
    AddScript.php
    ProductsSearched.php
    ProcessProductAfterDeleteEventObserver.php
    Cart/
        OrderCompleted.php
        CartViewed.php
        CheckoutViewed.php
    Customer/
        LoggedOut.php
        LoggedIn.php
        CustomerRegistered.php
    Catalog/
        CategoryViewed.php
        ProductViewed.php
Model/
    SyncManagement.php
    Sync.php
    Cc.php
    Data/
        PluginInfo.php
    Api/
        SyncApi.php
        PluginInfo.php
    ResourceModel/
        Sync.php
        PluginInfo.php
        Sync/
            Collection.php
view/
    frontend/
        templates/
            init.phtml
            event.phtml
Setup/
    UpgradeSchema.php
    Uninstall.php
    InstallSchema.php
    UpgradeData.php
etc/
    webapi.xml
    di.xml
    module.xml
    adminhtml/
        events.xml
        system.xml
    frontend/
        events.xml


File Contents
--------------------------------------------------


./tagger.sh
File type: .sh
#!/bin/bash

# Variables
BRANCH="master"
MAIN_VERSION=$1
BETA_VERSION="${MAIN_VERSION}-beta"
BACKUP_BRANCH="temp-tagging-branch"  # Define the backup branch name

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Exit the script if any command fails
set -e

# Function to handle errors (POSIX compliant)
handle_error() {
    printf "${RED}Error occurred: %s${NC}\n" "$1"
    cleanup
    exit 1
}

# Cleanup function
cleanup() {
    git reset .
    git clean -fd .
    git checkout .

    # Checkout master branch
    printf "${YELLOW}Checking out master branch during cleanup...${NC}\n"
    git checkout $BRANCH || printf "${RED}Failed to checkout $BRANCH during cleanup.${NC}\n"

    # Delete the temporary branch if it exists
    if git show-ref --verify --quiet refs/heads/$BACKUP_BRANCH; then
        git branch -D $BACKUP_BRANCH || printf "${RED}Failed to delete temporary branch $BACKUP_BRANCH.${NC}\n"
    fi
}

# Ensure version number is provided
if [ -z "$MAIN_VERSION" ]; then
    handle_error "Please provide a version number. Usage: ./tagger.sh VERSION_NUMBER"
fi

# Prompt for tag creation options
echo "Select the tags you want to create:"
echo "1) Production tag"
echo "2) Beta tag"
echo "3) Both"
echo -n "Enter your choice (1/2/3): "
read choice

# Ensure we are on the latest master branch
printf "${YELLOW}Checking out the latest master branch...${NC}\n"
git checkout $BRANCH || handle_error "Failed to checkout $BRANCH"
git pull origin $BRANCH || handle_error "Failed to pull latest changes from $BRANCH"

# Check if old backup branch exists and remove it
if git show-ref --verify --quiet refs/heads/$BACKUP_BRANCH; then
    printf "${YELLOW}Old backup branch '$BACKUP_BRANCH' found. Deleting it...${NC}\n"
    git branch -D $BACKUP_BRANCH || handle_error "Failed to delete old backup branch"
fi

# Create a backup branch to prevent affecting master directly
git checkout -b $BACKUP_BRANCH || handle_error "Failed to create temporary branch $BACKUP_BRANCH"

# Function to check if a tag exists on remote
check_remote_tag_exists() {
    git fetch --tags
    git ls-remote --tags origin | grep -q "refs/tags/$1"
}

# Function to get tag creation date from remote
get_tag_creation_date() {
    git log -1 --format=%aD "$1" 2>/dev/null
}

# Function to confirm tag deletion
confirm_tag_deletion() {
    echo -n "${YELLOW}Tag '$1' already exists on remote (created on: $2). \nDo you want to delete it and recreate it? (y/n): ${NC}"
    read response
    if [ "$response" != "y" ]; then
        printf "${YELLOW}Keeping existing tag '%s'. Skipping creation...${NC}\n" "$1"
        return 1
    fi
    return 0
}

# Check for existing remote tags
if [ "$choice" = "1" ] || [ "$choice" = "3" ]; then
    if check_remote_tag_exists "$MAIN_VERSION"; then
        creation_date=$(get_tag_creation_date "$MAIN_VERSION")
        if confirm_tag_deletion "$MAIN_VERSION" "$creation_date"; then
            git tag -d "$MAIN_VERSION" || handle_error "Failed to delete existing production tag"
        else
            printf "${GREEN}Skipping creation of production tag %s.${NC}\n" "$MAIN_VERSION"
        fi
    fi
fi

if [ "$choice" = "2" ] || [ "$choice" = "3" ]; then
    if check_remote_tag_exists "$BETA_VERSION"; then
        creation_date=$(get_tag_creation_date "$BETA_VERSION")
        if confirm_tag_deletion "$BETA_VERSION" "$creation_date"; then
            git tag -d "$BETA_VERSION" || handle_error "Failed to delete existing beta tag"
        else
            printf "${GREEN}Skipping creation of beta tag %s.${NC}\n" "$BETA_VERSION"
        fi
    fi
fi

# Update version in composer.json
printf "${YELLOW}Updating composer.json with version %s...${NC}\n" "$MAIN_VERSION"
sed -i "s/\"version\": \".*\"/\"version\": \"$MAIN_VERSION\"/" composer.json || handle_error "Failed to update composer.json"

# Update setup_version in module.xml
printf "${YELLOW}Updating setup_version in module.xml...${NC}\n"
sed -i "s/setup_version=\"[^\"]*\"/setup_version=\"$MAIN_VERSION\"/" etc/module.xml || handle_error "Failed to update module.xml"

# Commit changes for production tag if chosen
if [ "$choice" = "1" ] || [ "$choice" = "3" ]; then
    git add composer.json etc/module.xml || handle_error "Failed to add files for production commit"
    git commit -m "Release version $MAIN_VERSION" || handle_error "Failed to commit production changes"
    git tag -a "$MAIN_VERSION" -m "Version $MAIN_VERSION" || handle_error "Failed to create production tag"
    printf "${GREEN}Production tag %s created successfully${NC}\n" "$MAIN_VERSION"
fi

# Update to beta version in composer.json
printf "${YELLOW}Updating composer.json with version %s...${NC}\n" "$BETA_VERSION"
sed -i "s/\"version\": \"$MAIN_VERSION\"/\"version\": \"$BETA_VERSION\"/" composer.json || handle_error "Failed to update composer.json for beta"

# Update setup_version in module.xml for beta version
printf "${YELLOW}Updating setup_version in module.xml for beta version...${NC}\n"
sed -i "s/setup_version=\"$MAIN_VERSION\"/setup_version=\"$BETA_VERSION\"/" etc/module.xml || handle_error "Failed to update module.xml for beta"

# Modify domain in init.phtml for beta
printf "${YELLOW}Updating domain in init.phtml for beta...${NC}\n"
sed -i 's/cdn.convertcart.com/cdn-beta.convertcart.com/' view/frontend/templates/init.phtml || handle_error "Failed to update domain in init.phtml for beta"

# Commit changes for beta tag if chosen
if [ "$choice" = "2" ] || [ "$choice" = "3" ]; then
    git add composer.json etc/module.xml view/frontend/templates/init.phtml || handle_error "Failed to add files for beta commit"
    git commit -m "Release beta version $BETA_VERSION" || handle_error "Failed to commit beta version"
    git tag -a "$BETA_VERSION" -m "Beta version $BETA_VERSION" || handle_error "Failed to create beta tag"
    printf "${GREEN}Beta tag %s created successfully${NC}\n" "$BETA_VERSION"
fi

# Push tags to remote if created
if [ "$choice" = "1" ] || [ "$choice" = "3" ]; then
    printf "${YELLOW}Pushing production tag to remote...${NC}\n"
    git push -f origin "$MAIN_VERSION" || handle_error "Failed to push production tag"
fi

if [ "$choice" = "2" ] || [ "$choice" = "3" ]; then
    printf "${YELLOW}Pushing beta tag to remote...${NC}\n"
    git push -f origin "$BETA_VERSION" || handle_error "Failed to push beta tag"
fi

# Final cleanup: Checkout master and clean up the temporary branch
cleanup
printf "${GREEN}Tags processing completed.${NC}\n"


--------------------------------------------------
File End
--------------------------------------------------


./concatenated.txt
File type: .txt
Folder Structure
--------------------------------------------------
/
    tagger.sh
    README.md
    composer.json
    registration.php
venv/
    pyvenv.cfg
    bin/
        python3.12
        python3
        python
    lib/
        python3.12/
            site-packages/
    include/
        python3.12/
Helper/
    Data.php
Logger/
    Logger.php
    Handler.php
Api/
    SyncRepositoryInterface.php
    PluginInfoInterface.php
    Data/
        PluginInfoInterface.php
        SyncInterface.php
.git/
    packed-refs
    FETCH_HEAD
    ORIG_HEAD
    index
    config
    description
    HEAD
    COMMIT_EDITMSG
    info/
        exclude
    logs/
        HEAD
        refs/
            heads/
                master
                sample_fix
            remotes/
                origin/
                    master
                    fixing_return_schema
                    return_fix
                    updating_pluginInterface
                    logs_added
                    updating_plugininfo
                    sample_fix
                    adding_logs
                    plugin_fix
                    plugin_update
                    updating_return
                    HEAD
                    test_return_feature
                    updating_di_file
                    fixing_return
    refs/
        heads/
            master
            sample_fix
        tags/
            1.0.11
        remotes/
            origin/
                master
                fixing_return_schema
                return_fix
                updating_pluginInterface
                logs_added
                updating_plugininfo
                sample_fix
                adding_logs
                plugin_fix
                plugin_update
                updating_return
                HEAD
                test_return_feature
                updating_di_file
                fixing_return
    objects/
        0c/
            9888a1f823ced623adbc372c2c4a3ed635d057
        07/
            fb08ebaf186e9496c7db3862349622542a4572
            b1886dcc2f7d81b23433b60ba361893aa1738b
        a7/
            fafba0520173b68d2345e8370102c9d3714a47
            bbc65ec4ff7930d749b6522cd2234e937a434e
        f6/
            fd78779fcbaaabe079a30ec9c87d403884b6be
        31/
            568a1cd143bdbfea1b703cd601b59184eaef35
            6b14afe1a4f31cd97d552dbf7707ad19e2e362
        ee/
            f3c1e6eea89b46f71d6e1176f47d99af5be638
        info/
        22/
            4aa4a906b282c41929b186ddf9349b398aae7d
            7c2662aae26d0e53f4caa51576373fe7276b43
        ff/
            b33a81023a52af38bcc94653e8f1f2b2409ecd
            bc7080096fe1aaa338d710132c60dfb79b5d7c
            3f9b35a90c401af357557159f1c2783bd67577
            52bbb8fda0cafe81d68fbbd3df99d3b31d8a11
        96/
            8b4926972eed222657ad666c32f7cb93223e4e
            e57135eced175660779dabd43f6b3b821e163b
            61083d65a5690d5abb5812f53d51f5eed9efd1
        1b/
            b9826f054457c54fe7354876152ffad806f154
            9893f8fb6334c5a9dddcfd33d20767b5fe1860
        ba/
            82cb3ed45c0b13bf0bae8c1321846dac80ba3e
        e4/
            7e9b6bf279042d011129bbdd54b632f9ad5414
        d8/
            86e5bb6c84165e71308e609e49adbf33a6045b
            5f1a3757e543aaa0a63016cbb80c4752e3620d
            cad03c0fcea876a411fd805ad69d6409a6e51e
        20/
            880014d708974d4a207c56bab6c025f8a4957e
        e0/
            711c503c8c5fed7fb501b096e92c9af4a1f53d
        c7/
            c2b84b19f4bfbe71d5dc44533cae580cf9689a
            451c6bc63ce9ecde9dfef061fefc7ce836b03c
        64/
            400b6b353aafd6349de153a99b80d57b9e9e7f
        33/
            57f43f1cd301ee7d8807b49a56985113da1874
            4bba386c8a9409df807a3d09e778fa5b27f87b
            7e46ffa5a4ab1f8ee103651706eea6a68333ff
        26/
            69adbfec1fb52ce1f2001d96ebcafb85c5a163
        34/
            f6dad690d74926791a8652a9bad62706dafaf5
        6c/
            407870911d5f5b6cd37957d9148b27088cbdef
        9d/
            03d3cb16eed7650e39c85c1abf20ff48084e7d
        1f/
            7da02879d53ef8aa8f936e0ba911627190a28e
            ca3a2a384b879c558bbf8c9ff6e2b108e06065
            72cb6a3599f8e7b54155ddafc14518f245de88
        5b/
            aa37c0f39ec0f3489281a04cd811f020f1cebc
        2d/
            b9b786e59139bbcbefb4f138bdef4ebb9ee466
        68/
            fe3072cfda606ff1e951f1ea70d82657d9172e
        2c/
            34cbd0f8fa043292187b7d36368a055b6fa407
            ed1965ff1973e733713056de7231e1d7430ee0
        8d/
            c77440a2e3b0331c80f901a8b8094eac3806ad
        49/
            0cf12ad156a55583784b63bf9e90c739375b47
        5a/
            6c9463086df1e0a244b9d7d6f871b359f0ea37
        8a/
            9a7da1de98f8d22ee2c9fe30af40fa37e7a1e5
        c1/
            5124cb52a6b939fb6e93a6efe2acedbbadcb23
        3c/
            8186bf352cdd9670d24c0c4c2e717228469b16
            abc411b075b1fcabce77974ad10d601e274362
        9f/
            f8ee8ffa635b72953afb5fe85ea0a9f04a2334
        66/
            d8839acf7296c0c259f13936c71a4e1f3a9cf6
        b3/
            3b672312cc478c76acd361177eaf4ed070b1b4
        44/
            bdf704c6ee047d4c12dcf03f96d0b62174192d
            67a87c8a8ef020bec29fe7751e86600be76724
        95/
            715e64898d78128e05533f86756e03e44ce035
        ed/
            7c5a37343de4973db57d58e70353f078b76d2c
        4a/
            459db3056f757696b9983efdbf29807026b799
        eb/
            3853596eebebf8cba04f8e33ebbe71f952b90e
        5e/
            b1f8fbe54be0ccc41881d6824a892f38518ded
            d1508301b18c5856c3f99536923206e3225931
        9a/
            2d90a5247be294b0ae2cb212a476a9d880c8e1
        86/
            2c56fbfa70a0e29a592b271f3d49774bb361c9
        pack/
            pack-347a28f2df20f9d4904ef3ad57747a5166679806.pack
            pack-347a28f2df20f9d4904ef3ad57747a5166679806.rev
            pack-347a28f2df20f9d4904ef3ad57747a5166679806.idx
        ae/
            01e6999c56c4664004ef3b72319928666e6dd8
            65e0b83169634977834c4a41f98a3489a21f35
        7a/
            8f773a67ac51ca93b819934c4f81fdb2f809cd
        19/
            009e16240c79b65d26d5170f779e98994ac372
        93/
            ce517b9f14e9f34000567f54464645f7337b61
            24e599072a83b3fa729f8ae50b52955e3aa347
        c5/
            7cf658d7a5586e4a971cd394faeb4ac0f836d6
        70/
            3b7379443418d647f55bdffd07d91f8dc104b4
        6e/
            ff6a1e543cf3c9e0deec0bf1e1aeb164e24a26
            c445456139b971b39f590cd6910877314d3c13
        8e/
            1e2cefb534f82cf8236719b05e4aa88271c0c6
            70db2e254d5fbb06107ee09adb54406776c82a
        a8/
            43833bf5376d5eecf8ec6c1034bd472c124bad
        f7/
            6a317447c26cd7422330872d943c031d1e377a
            e7e0c1ee0df5dcc6481cf84a2830a8b44243eb
        85/
            bfaed966d37ca4f6103a5fc865106a776521ee
        a1/
            8e57c99a9d4b29651491d3d6659e2beaec3cb3
        92/
            880a3e7702dff572bd2cc1197402a9f8d4f3b5
        6a/
            9a12803727324449639e4205589bc3425299a9
            4f92befc392519d5e9129cdbde6bc5b3d47e88
        b5/
            2c48b2e04527462173f453a1dd79f7de68e88f
        58/
            5ddb932171e71fd4cdcc07756a7df65d60cd55
        a3/
            19c31f8eeba3e87acb640ce665c30e6331d167
        4f/
            9a2dd8987112bc513d3df58e0ed9c5477734ce
        02/
            1a6d6908db111191bee303b7d457dad81ae7b6
        a2/
            17e1314e3b9111cf563ed1c21032c31358c036
        04/
            7740620ca987b50cf948fabffe9093f6d76977
        bb/
            13111366244868fab741ce35d82a29a02a158f
        5f/
            6e2832e3d44e70efb56d3827dd22e3935cda9c
            ec52fd17be7d7d5fc58c681e24490489b9561a
        79/
            69e5c3e6e57d46ae045054bdfa318f957cf043
            656194af55e03338ab89cac9255be066345814
        87/
            33daa2cb63ee8cc502621952abfd2576cc29f8
            4d2efbf8f2262b75d00b964955e48b10d27e71
        c9/
            931d8bc40e8fbc430d11985853fcd69492f749
        e9/
            4d11eab399d3c1d95b0e95d21e14127b759251
        13/
            ea5480b2570600de636b7f985d0bfa3604dea9
        37/
            81a4f7333c3f041153d0f16916487ac98a862a
        0e/
            f358be0181adc3be68f3044a9c541313cff9a8
            722ef90878aae21523fd479e19546b2f797983
        73/
            fd7e4cb0ffd59b9cce2b12b36028e834f3df56
            22a32814285362416e2fb25c874db495735f1b
        d1/
            f0255c302629df1a1e55ebb0c21cab29aad6e7
        5d/
            45e9ea2db82a91ad0e16d233ac0e2d6dadbd13
        91/
            8dc437e92cb8bbd32407a81ef0e06a965ea97e
            d380ce7d1d5e4ec7fca7ef261c7b492d279260
        03/
            cd37bd3073ea06d1c6a26204acf0c07894e3e0
            3e2604386d623f522cde5b9a4a49b6478f56cc
        05/
            f17042bae95d824323aa05b7e72a462d50191a
        c8/
            1d132c106ee6919488db167f56f182b302e69c
            6c172ea287951d7bd4fea4190ffa9a5605c894
        d6/
            1a799d2dfb435d684f68fc9277d9ac9c37a2ea
        f2/
            c97440a041acb374f9b811d513f61a28419e8a
        2e/
            425f39c3a98c6dd4660563d855862b508df584
        b1/
            c0d0245dc924b1f889ee81627b8a7b49913499
            7a171157c428b5df5d0deb84ee3e3dfd229c57
        a6/
            83c622226aa4572098ca9f9b95185771052b5a
            b7261a402617abf88d206ba7b575ddbe53488d
        b6/
            822b5e5df0ff6397f311e33e1b9df3fa1f28d9
            6f5f71a1626d92cad236423d6c4078ec7680ae
        de/
            fbf288ba4cb840aff6a61254c8d31fc27e817a
        9b/
            2075e45d81334f36e734a8880fa42eafde69c1
        61/
            6f7e4316170063bcfcd6af3e5e6a0548cdff43
            ca55d68a9c1c3c139c9d78c54f1b781e061d70
        b9/
            5fffe059a70c4e6f5296f61f1dc52ec07e6bc2
            5a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c
        b8/
            be978ec55ded5e490a16e62845a8b924d59139
        d7/
            fec4773f00794a78d1bd9d3c11b1a3cdc20de4
            e888e7a35a38d3724ded69f5ff1d011e3df314
        99/
            6c668eca80f2208237d69c499cf3b4c2fafdc2
        65/
            059dc37836dd077d533ef9894bbc8feb0821af
            13aff7a00a9e2b9fc03dade566cef6810bef55
            b49abad11fb942c396bed7dbfd4c7caab8bf4b
            6f85961b8b57fcd5b5631787afd28c3408f3c9
        fa/
            f33e5b8a42b21dafb34a37dc2d23f7cb533f29
            661206ce219fdd78c96f236b277de9a0735612
            5dd5b8c7320313fc7d5d17c308859125b8da64
            f571b114581846f399cd138d753aa948ce8836
        c4/
            65a0e9da5c8dd64ca48da102d78f0a0d1f74da
        e6/
            1884a83328672a665b7039f6391c9790ce1a68
            e093efe33779e4c25b0211ea5284dcf6ead353
        53/
            6af9e6d418ed87334ebb7bd5fd4f1d59b55a2a
            e03cd531bd856a3b23afa0457b34939099d329
            ef6cb6e1791cd0f2e992167cb463d0ceac3bcf
        41/
            bc3c57aed66db374619ec451bc8ce8e4d1f9d9
        d5/
            2ac547c838bf028930e56e43129116d18fc31a
        b4/
            2b4f9f3e9d1beeb9bbc2a8ab33bc70e6864133
        00/
            aed298a41035e59d2b87b90a117ff1e03a4588
            5739f179b8b513c4a98c6e152bdea37d83f472
        ab/
            60004bb7408e0c856518162db930b07ae55fae
            b17804a86c9df492d2fa5cc5dcbf2364efb498
        ea/
            edfb4f5bc064a7fefa4f6ff65d270d85b295f3
            f6cc6638fa0023cf6606609f5a9f8049e6c1cf
        0f/
            472c6ff6699735ecdd1db811a7331055d801fc
        b7/
            dd4fe5ec4bb558f2ac1635ef1a09706dd3e72c
        30/
            7a6afa51f61b53f312994621eb9f2591bcc7ab
        48/
            29173289e83163e831064a99e8147b9ba34494
        52/
            20f3c61227d63572c42c8cfac92acb309290e4
        fb/
            3bc872863e43f346d9061711eae050a018c0a3
            7880ac27f9f9cc0f2534d1be2892cf71af0b8a
            2bb8426a12c58c6a36cb2d671a629d4c2cd49f
        bd/
            dead0578dfac6697cc1780e12980bd8eeaed3b
        c6/
            372e87a1ec2d5682e4bc90f59786829a54d14c
            3d2c7ff0284af7c029d0d7c8ab6177829a4e23
        ac/
            40b5edb1a0befe02974f232301c43b2456de02
            ca62753bea7023b7ac29c06ce421791ebda2af
        80/
            779144931dd5a00a151d7bdc3f2e581d54fc9e
            595da3c4d112faeeaa263420c0bfa369b4f183
        6f/
            eb125e9eaca94e7d5cd6166671c205ce5cd815
        e2/
            93cde693110017df114e567686d77c8e9e48d2
        cc/
            f504001a2f051ece8e3bb7d4e591f7548887c4
        0d/
            751d8a1405234e01a2a945ec62f62a22f2cc3e
        59/
            b6b270df80cc393c65fab69d5440fb419539b6
        47/
            237a25aa621c0ec40c9cd601fbcff85b94589a
        76/
            a71c5f28bf138cf4e682265ce225b6fb9e0af5
        67/
            0b62753e7ff5a35e3f0fa29eadedc584cef3a7
            c750d1a2bccaa9be752e27ce9225a78d49f0d6
        7b/
            b24af6078a775a00889baaa3121e96dd44d4b3
            b430f2f9d2b367949fa0489b0000086f354f96
        38/
            8944fd63ee07e8a40e6a21c1a40dc39e805704
            3f2c7ee1bacfbfa2886f986c15d8404b824e35
        78/
            ac8a2790686803ef83b644a084f1545b55d4dc
        3d/
            108c90e5b92142cbb1482aeddab203c8defc6e
        6b/
            a0e4414e18d25a5ba6b1de738251d095dd8ecf
        21/
            9b8e67a2b5dfc7cf44ac5da81261d1035b1132
        c0/
            5f437d290c0983f44a4e7fd9648561663aa9e5
        d4/
            60d92a8f48f2cfd8d3cfc137f172394c99d732
        83/
            b0a7bea40352a59c2bba91b3dd4da1ce990bd5
        3f/
            618f94927954b5a4681e311978ca7e80d7c0e2
        43/
            bb3104b47eca92d9d8e26528a19746a4998913
        09/
            7e73f464b266c9b4c890db32296a308421e2a1
        3e/
            56aed5895fcee2922406e08a8726be18ea10bf
        15/
            64177a91a0f85c05fd4b21b8f913e5c60ca05c
        bc/
            c3ddc9a22a73d9ea87564ab227fd28847d0134
            7b0caca1a9ceacb60ae3c521744cab03935511
        63/
            708399cd6ecb0631f87cadf39b4548c43c8c11
            6ce384234e2db78c50d31bdab12cbc9bfae1e7
        f8/
            7df7fbda09e66c249063fec07f12112f77d751
            b4680e6c7e95ee65d59c7699778afc2a17786c
            95a99cc6b0ee97b28419ea2c2c38bd35b647a3
            435c1f39bbfdcbd4cadcca7ca57f5442c7bbcd
        89/
            d2e811122c7db013db4699ccef0c65743e2f0a
        e7/
            0cb3acabeaf2a2bab2a430e19e859f97a48e29
        36/
            26bf5d3cdbd09f62b319d95804a58b99b6e2fb
        4d/
            9bb24ed2480f2baf41059d7744ac8f4c686be5
        56/
            0492949c839bbd3ef6fc95b7ef877202e0fd54
            619506609c4036931b17c179f16e68fb038bdf
        77/
            065a3d403de010b8e5986c3a52c39edecd2b26
        39/
            099ca1214fbca213a03ad62137b69b9b5a4836
            8131e25f3cdf63d1cf9d461913b8abd2261340
        72/
            87a0333a73dbddbdabd04ccd16b1fc1d2de084
        7c/
            304539986b198d48cf6eab9bb2ccd187f22336
        9c/
            b625b57a3c0dc81f550678335d926ad820826e
            a7e0ce1a7a5e42826572a9b7bc4943a43f67a7
    hooks/
        pre-merge-commit.sample
        pre-rebase.sample
        commit-msg.sample
        fsmonitor-watchman.sample
        pre-push.sample
        prepare-commit-msg.sample
        sendemail-validate.sample
        push-to-checkout.sample
        post-update.sample
        pre-commit.sample
        applypatch-msg.sample
        pre-receive.sample
        update.sample
        pre-applypatch.sample
    branches/
Block/
    Script.php
Observer/
    ProcessCategoryAfterDeleteEventObserver.php
    ContentpageViewed.php
    HomepageViewed.php
    AddScript.php
    ProductsSearched.php
    ProcessProductAfterDeleteEventObserver.php
    Cart/
        OrderCompleted.php
        CartViewed.php
        CheckoutViewed.php
    Customer/
        LoggedOut.php
        LoggedIn.php
        CustomerRegistered.php
    Catalog/
        CategoryViewed.php
        ProductViewed.php
Model/
    SyncManagement.php
    Sync.php
    Cc.php
    Data/
        PluginInfo.php
    Api/
        SyncApi.php
        PluginInfo.php
    ResourceModel/
        Sync.php
        PluginInfo.php
        Sync/
            Collection.php
view/
    frontend/
        templates/
            init.phtml
            event.phtml
Setup/
    UpgradeSchema.php
    Uninstall.php
    InstallSchema.php
    UpgradeData.php
etc/
    webapi.xml
    di.xml
    module.xml
    adminhtml/
        events.xml
        system.xml
    frontend/
        events.xml


File Contents
--------------------------------------------------


./tagger.sh
File type: .sh
#!/bin/bash

# Variables
BRANCH="master"
MAIN_VERSION=$1
BETA_VERSION="${MAIN_VERSION}-beta"
BACKUP_BRANCH="temp-tagging-branch"  # Define the backup branch name

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Exit the script if any command fails
set -e

# Function to handle errors (POSIX compliant)
handle_error() {
    printf "${RED}Error occurred: %s${NC}\n" "$1"
    cleanup
    exit 1
}

# Cleanup function
cleanup() {
    git reset .
    git clean -fd .
    git checkout .

    # Checkout master branch
    printf "${YELLOW}Checking out master branch during cleanup...${NC}\n"
    git checkout $BRANCH || printf "${RED}Failed to checkout $BRANCH during cleanup.${NC}\n"

    # Delete the temporary branch if it exists
    if git show-ref --verify --quiet refs/heads/$BACKUP_BRANCH; then
        git branch -D $BACKUP_BRANCH || printf "${RED}Failed to delete temporary branch $BACKUP_BRANCH.${NC}\n"
    fi
}

# Ensure version number is provided
if [ -z "$MAIN_VERSION" ]; then
    handle_error "Please provide a version number. Usage: ./tagger.sh VERSION_NUMBER"
fi

# Prompt for tag creation options
echo "Select the tags you want to create:"
echo "1) Production tag"
echo "2) Beta tag"
echo "3) Both"
echo -n "Enter your choice (1/2/3): "
read choice

# Ensure we are on the latest master branch
printf "${YELLOW}Checking out the latest master branch...${NC}\n"
git checkout $BRANCH || handle_error "Failed to checkout $BRANCH"
git pull origin $BRANCH || handle_error "Failed to pull latest changes from $BRANCH"

# Check if old backup branch exists and remove it
if git show-ref --verify --quiet refs/heads/$BACKUP_BRANCH; then
    printf "${YELLOW}Old backup branch '$BACKUP_BRANCH' found. Deleting it...${NC}\n"
    git branch -D $BACKUP_BRANCH || handle_error "Failed to delete old backup branch"
fi

# Create a backup branch to prevent affecting master directly
git checkout -b $BACKUP_BRANCH || handle_error "Failed to create temporary branch $BACKUP_BRANCH"

# Function to check if a tag exists on remote
check_remote_tag_exists() {
    git fetch --tags
    git ls-remote --tags origin | grep -q "refs/tags/$1"
}

# Function to get tag creation date from remote
get_tag_creation_date() {
    git log -1 --format=%aD "$1" 2>/dev/null
}

# Function to confirm tag deletion
confirm_tag_deletion() {
    echo -n "${YELLOW}Tag '$1' already exists on remote (created on: $2). \nDo you want to delete it and recreate it? (y/n): ${NC}"
    read response
    if [ "$response" != "y" ]; then
        printf "${YELLOW}Keeping existing tag '%s'. Skipping creation...${NC}\n" "$1"
        return 1
    fi
    return 0
}

# Check for existing remote tags
if [ "$choice" = "1" ] || [ "$choice" = "3" ]; then
    if check_remote_tag_exists "$MAIN_VERSION"; then
        creation_date=$(get_tag_creation_date "$MAIN_VERSION")
        if confirm_tag_deletion "$MAIN_VERSION" "$creation_date"; then
            git tag -d "$MAIN_VERSION" || handle_error "Failed to delete existing production tag"
        else
            printf "${GREEN}Skipping creation of production tag %s.${NC}\n" "$MAIN_VERSION"
        fi
    fi
fi

if [ "$choice" = "2" ] || [ "$choice" = "3" ]; then
    if check_remote_tag_exists "$BETA_VERSION"; then
        creation_date=$(get_tag_creation_date "$BETA_VERSION")
        if confirm_tag_deletion "$BETA_VERSION" "$creation_date"; then
            git tag -d "$BETA_VERSION" || handle_error "Failed to delete existing beta tag"
        else
            printf "${GREEN}Skipping creation of beta tag %s.${NC}\n" "$BETA_VERSION"
        fi
    fi
fi

# Update version in composer.json
printf "${YELLOW}Updating composer.json with version %s...${NC}\n" "$MAIN_VERSION"
sed -i "s/\"version\": \".*\"/\"version\": \"$MAIN_VERSION\"/" composer.json || handle_error "Failed to update composer.json"

# Update setup_version in module.xml
printf "${YELLOW}Updating setup_version in module.xml...${NC}\n"
sed -i "s/setup_version=\"[^\"]*\"/setup_version=\"$MAIN_VERSION\"/" etc/module.xml || handle_error "Failed to update module.xml"

# Commit changes for production tag if chosen
if [ "$choice" = "1" ] || [ "$choice" = "3" ]; then
    git add composer.json etc/module.xml || handle_error "Failed to add files for production commit"
    git commit -m "Release version $MAIN_VERSION" || handle_error "Failed to commit production changes"
    git tag -a "$MAIN_VERSION" -m "Version $MAIN_VERSION" || handle_error "Failed to create production tag"
    printf "${GREEN}Production tag %s created successfully${NC}\n" "$MAIN_VERSION"
fi

# Update to beta version in composer.json
printf "${YELLOW}Updating composer.json with version %s...${NC}\n" "$BETA_VERSION"
sed -i "s/\"version\": \"$MAIN_VERSION\"/\"version\": \"$BETA_VERSION\"/" composer.json || handle_error "Failed to update composer.json for beta"

# Update setup_version in module.xml for beta version
printf "${YELLOW}Updating setup_version in module.xml for beta version...${NC}\n"
sed -i "s/setup_version=\"$MAIN_VERSION\"/setup_version=\"$BETA_VERSION\"/" etc/module.xml || handle_error "Failed to update module.xml for beta"

# Modify domain in init.phtml for beta
printf "${YELLOW}Updating domain in init.phtml for beta...${NC}\n"
sed -i 's/cdn.convertcart.com/cdn-beta.convertcart.com/' view/frontend/templates/init.phtml || handle_error "Failed to update domain in init.phtml for beta"

# Commit changes for beta tag if chosen
if [ "$choice" = "2" ] || [ "$choice" = "3" ]; then
    git add composer.json etc/module.xml view/frontend/templates/init.phtml || handle_error "Failed to add files for beta commit"
    git commit -m "Release beta version $BETA_VERSION" || handle_error "Failed to commit beta version"
    git tag -a "$BETA_VERSION" -m "Beta version $BETA_VERSION" || handle_error "Failed to create beta tag"
    printf "${GREEN}Beta tag %s created successfully${NC}\n" "$BETA_VERSION"
fi

# Push tags to remote if created
if [ "$choice" = "1" ] || [ "$choice" = "3" ]; then
    printf "${YELLOW}Pushing production tag to remote...${NC}\n"
    git push -f origin "$MAIN_VERSION" || handle_error "Failed to push production tag"
fi

if [ "$choice" = "2" ] || [ "$choice" = "3" ]; then
    printf "${YELLOW}Pushing beta tag to remote...${NC}\n"
    git push -f origin "$BETA_VERSION" || handle_error "Failed to push beta tag"
fi

# Final cleanup: Checkout master and clean up the temporary branch
cleanup
printf "${GREEN}Tags processing completed.${NC}\n"


--------------------------------------------------
File End
--------------------------------------------------


./README.md
File type: .md
# Convert Cart Magento 2 Plugin

![Magento 2](https://img.shields.io/badge/Magento-2-brightgreen.svg)
![License](https://img.shields.io/badge/license-Proprietary-red.svg)
[![Packagist](https://img.shields.io/packagist/v/convert-cart/analytics.svg)](https://packagist.org/packages/convert-cart/analytics)

## Table of Contents

- [Introduction](#introduction)
- [Features](#features)
- [Installation](#installation)
  - [Composer Installation](#composer-installation)
  - [Manual Installation](#manual-installation)
- [Configure Domain Id](#configure-domain-id)
- [Troubleshooting](#troubleshooting)
- [Contact](#contact)

## Introduction

Welcome to the Magento 2 Plugin by Convert Cart. This plugin integrates seamlessly with Magento 2 ecommerce websites, enabling the tracking of user behavior. Additionally, it synchronizes crucial data such as product catalogs, order histories, customer profiles, and category information to our servers on a regular basis. This synchronization powers our recommendation engine, providing personalized and data-driven insights to enhance your ecommerce operations.

## Features

- Script injection on the frontend for user behavior tracking.
- Token generation for synchronizing product/order/customer/category data to Convert Cart servers for recommendations.
- Product deletion tracking to avoid recommending deleted products to the visitors of the store.

## Installation

### Composer Installation

1. Run the following command in the root folder of your Magento installation when the domain is added in app.convertcart.com (for production):

    ```sh
    composer require convert-cart/analytics
    ```

    If you're intending to setting up a domain in app-beta.convertcart.com (for beta testing), please use tag name followed by the suffix `-beta` like `1.0.8-beta`. The command will be like,

    ```sh
    composer require convert-cart/analytics:1.0.8-beta
    ```

    If you wanted to know the exact changes that's needed to setup a beta server on a production tag, you can take a look into this [commit](https://github.com/convert-cart/magento2-plugin/commit/7fcd6766d00aa0c1f9c24365864a5738bc893252).

2. After installing via Composer, run the following commands from the Magento root directory:

    ```sh
    php bin/magento maintenance:enable
    php bin/magento setup:upgrade
    php bin/magento setup:di:compile
    php bin/magento setup:static-content:deploy -f
    php bin/magento maintenance:disable
    php bin/magento cache:flush
    ```

### Manual Installation

1. Download the latest version of the plugin from the [releases](https://github.com/convert-cart/magento2-plugin/releases) page.
2. Extract the downloaded archive.
3. Upload the contents to the `app/code/convert-cart/analytics` directory of your Magento installation.
4. Run the following commands from the Magento root directory:

    ```sh
    bin/magento module:enable Convertcart_Analytics
    bin/magento setup:upgrade
    bin/magento setup:di:compile
    bin/magento setup:static-content:deploy -f
    bin/magento cache:clean
    bin/magento cache:flush
    ```

## Configure Domain Id

Please reach out to your Customer Support Manager to Configure your domain with Convert Cart.

## Troubleshooting

If you encounter issues, try the following steps:

1. Ensure the plugin is enabled: `bin/magento module:status Convertcart_Analytics`
2. Clear Magento cache: `bin/magento cache:clean`
3. Check the logs in `var/log` for any error messages.

## Uninstall

Please use the following command to uninstall the plugin and delete all the tables and settings related to the plugin,

      bin/magento module:uninstall Convertcart_Analytics

### Setting up folder & file permissions,

If you encounter folder permission issues on folder such as cache, please use the following commands to set the appropriate permissions for public files and directories:
- Goto magento2 directory

      find . -type f -exec chmod 644 {} \;
      find . -type d -exec chmod 755 {} \;
      find var pub/static pub/media app/etc generated/ -type f -exec chmod g+w {} \;
      find var pub/static pub/media app/etc generated/ -type d -exec chmod g+ws {} \;
      chown -R <magento user>:<web server group> . #(usually by default magento user and we user used to be www-data, check it with your server administrator)
      chmod u+x bin/magento

- 644 sets files to read and write for the owner, and read-only for group and others.
- 755 sets directories to read, write, and execute for the owner, and read and execute for group and others.

## Contact

Please contact [sales@convertcart.com](mailto:sales@convertcart.com) if any issues occur during the integration process.

## For Development

After making any changes to the master branch, you can create new version tags (for beta and production) by running the following command:

      sh tagger.sh VERSION_NUMBER

Make sure to replace `VERSION_NUMBER` with the actual version number you want to create.

--------------------------------------------------
File End
--------------------------------------------------


./composer.json
File type: .json
{
    "name": "convert-cart/analytics",
    "description": "Magento 2 plugin to integrate convertcart",
    "type": "magento2-module",
    "version": "1.0.8",
    "license": [
      "OSL-3.0",
      "AFL-3.0"
    ],
    "require": {
      "php": "~5.5.0|~5.6.0|^7.0|^8.0"
    },
    "maintainers": [
      {
        "name": "Udhay kumar",
        "email": "udhaya@convertcart.com",
        "homepage": "https://www.convertcart.com/"
      }
    ],
    "authors": [
      {
        "name": "Aamir",
        "email": "aamir@convertcart.com",
        "homepage": "https://www.convertcart.com/",
        "role": "Developer"
      },
      {
        "name": "Naveen SK",
        "email": "naveena@convertcart.com",
        "homepage": "https://www.convertcart.com/",
        "role": "Developer"
      },
      {
        "name": "Udhay kumar",
        "email": "udhaya@convertcart.com",
        "homepage": "https://www.convertcart.com/",
        "role": "Developer"
      }
    ],
    "autoload": {
      "files": [ "registration.php" ],
      "psr-4": {
        "Convertcart\\Analytics\\": ""
      }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./registration.php
File type: .php
<?php
 
\Magento\Framework\Component\ComponentRegistrar::register(
    \Magento\Framework\Component\ComponentRegistrar::MODULE,
    'Convertcart_Analytics',
    __DIR__
);

--------------------------------------------------
File End
--------------------------------------------------


./venv/pyvenv.cfg
File type: .cfg
home = /usr/bin
include-system-site-packages = false
version = 3.12.3
executable = /usr/bin/python3.12
command = /usr/bin/python3 -m venv /home/convertcart/projects/magento2-plugin/venv


--------------------------------------------------
File End
--------------------------------------------------


./Helper/Data.php
File type: .php
<?php
namespace Convertcart\Analytics\Helper;

use Magento\Framework\Module\ModuleListInterface;

class Data extends \Magento\Framework\App\Helper\AbstractHelper
{

    /**
     * @var \Magento\Framework\App\Config\ScopeConfigInterface
     */
    protected $scopeConfig;

    protected $_moduleList;

    public function __construct(
        \Magento\Framework\App\Helper\Context $context,
        \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
        ModuleListInterface $moduleList
    ) {
        $this->scopeConfig = $scopeConfig;
        $this->_moduleList = $moduleList;
        parent::__construct(
            $context
        );
    }

    public function getEventType($event)
    {
        $eventMap = [
            'homepageViewed'      =>  'homepageViewed',
            'contentPageViewed'   =>  'contentPageViewed',
            'categoryViewed'      =>  'categoryViewed',
            'productViewed'       =>  'productViewed',
            'productsSearched'    =>  'productsSearched',
            'registered'          =>  'registered',
            'loggedIn'            =>  'loggedIn',
            'loggedOut'           =>  'loggedOut',
            'cartViewed'          =>  'cartViewed',
            'checkoutViewed'      =>  'checkoutViewed',
            'cartUpdated'         =>  'cartUpdated',
            'productAdded'        =>  'productAdded',
            'productRemoved'      =>  'productRemoved',
            'orderCompleted'      =>  'orderCompleted',
            'couponApplied'       =>  'couponApplied',
            'couponDenied'        =>  'couponDenied',
            'couponRemoved'       =>  'couponRemoved',
        ];
        if (!empty($eventMap[$event])) {
            return $eventMap[$event];
        } else {
            return 'default';
        }
    }

    public function isEnabled()
    {
        if ($this->getClientKey()) {
            return 1;
        } else {
            return false;
        }
    }

    public function getClientKey()
    {
        $clientKey = $this->scopeConfig->getValue('convertcart/configuration/domainid', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
        if (empty($clientKey)) {
            return false;
        } else {
            return $clientKey;
        }
    }

    public function getModuleVersion()
    {
        $ccModule = $this->_moduleList
            ->getOne('Convertcart_Analytics');
        return !empty($ccModule['setup_version']) ? $ccModule['setup_version'] : null;
    }

    public function sanitizeParam($param)
    {
        if ($param === null) {
            return null;
        }
        return strip_tags($param);
    }
}

--------------------------------------------------
File End
--------------------------------------------------


./Logger/Logger.php
File type: .php
<?php
namespace Convertcart\Analytics\Logger;

class Logger extends \Monolog\Logger
{
}

--------------------------------------------------
File End
--------------------------------------------------


./Logger/Handler.php
File type: .php
<?php
namespace Convertcart\Analytics\Logger;

use Monolog\Logger;

class Handler extends \Magento\Framework\Logger\Handler\Base
{
    /**
     * Logging level
     * @var int
     */
    protected $loggerType = Logger::INFO;

    /**
     * File name
     * @var string
     */
    protected $fileName = '/var/log/cc_analytics.log';
}


--------------------------------------------------
File End
--------------------------------------------------


./Api/SyncRepositoryInterface.php
File type: .php
<?php

namespace Convertcart\Analytics\Api;

use Convertcart\Analytics\Api\Data\SyncInterface;

interface SyncRepositoryInterface
{
    /**
     * Post Api data.
     *
     * @api
     *
     * @param int $limit
     * @param int $id
     * @param string $type
     *
     * @return array
     */
    public function getDeletedProduct($limit, $id, $type);
}


--------------------------------------------------
File End
--------------------------------------------------


./Api/PluginInfoInterface.php
File type: .php
<?php
namespace Convertcart\Analytics\Api;

interface PluginInfoInterface
{
    /**
     * Get plugin information.
     *
     * @api
     * @return array
     */
    public function getPluginInfo();
}

--------------------------------------------------
File End
--------------------------------------------------


./Api/Data/PluginInfoInterface.php
File type: .php
<?php
namespace Convertcart\Analytics\Api\Data;

interface PluginInfoInterface
{
    const VERSION = 'version';
    const TABLES = 'tables';
    const TRIGGERS = 'triggers';

    /**
     * Get version
     *
     * @return string
     */
    public function getVersion();

    /**
     * Set version
     *
     * @param string $version
     * @return $this
     */
    public function setVersion($version);

    /**
     * Get tables
     *
     * @return array<string,bool>
     */
    public function getTables();

    /**
     * Set tables
     *
     * @param array<string,bool> $tables
     * @return $this
     */
    public function setTables($tables);

    /**
     * Get triggers
     *
     * @return array<string,bool>
     */
    public function getTriggers();

    /**
     * Set triggers
     *
     * @param array<string,bool> $triggers
     * @return $this
     */
    public function setTriggers($triggers);
} 

--------------------------------------------------
File End
--------------------------------------------------


./Api/Data/SyncInterface.php
File type: .php
<?php
/**
 * Copyright © Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
namespace Convertcart\Analytics\Api\Data;

/**
 * Interface SyncInterface
 * @api
 * @since 100.0.2
 */
interface SyncInterface extends \Magento\Framework\Api\ExtensibleDataInterface
{
    /**#@+
     * Constants for keys of data array. Identical to the name of the getter in snake case
     */
    public const ID = 'id';
    public const ITEM_ID = 'item_id';
    public const TYPE   = 'type';
    public const CREATED_AT = 'created_at';
    /**
     * Get ID.
     *
     * @return int
     */
    public function getId();

    /**
     * Set ID.
     *
     * @param integer $id
     *
     * @return $this
     */
    public function setId($id);

    /**
     * Get type.
     *
     * @return string
     */
    public function getType();
 
    /**
     * Set type.
     *
     * @param string $type
     *
     * @return $this
     */
    public function setType($type);

    /**
     * Get itemid.
     *
     * @return string
     */
    public function getItemId();
 
    /**
     * Set itemId.
     *
     * @param string $itemId
     *
     * @return $this
     */
    public function setItemId($itemId);
  
    /**
     * Get createdAt.
     *
     * @return string
     */
    public function getCreatedAt();
 
    /**
     * Set createdAt.
     *
     * @param string $createdAt
     *
     * @return $this
     */
    public function setCreatedAt($createdAt);
}


--------------------------------------------------
File End
--------------------------------------------------


./.git/packed-refs
File type: 
# pack-refs with: peeled fully-peeled sorted 
02d7d9a1e1b86643340ffb47c4a857fed6a74936 refs/remotes/origin/master
351bc48dfd30391e7e0762b29b1e5e16f9b2f7a1 refs/remotes/origin/updatingInstallSchema
46c34e553def623eb402aa22367502c6f0b06d02 refs/tags/1.0.1
^7527d066b0206d22477fe061f963e450c445e110
a9e614c888a64785a40e0463faf6dcdd0ce7e2e7 refs/tags/1.0.10
^b720f7532d1dbc43200648fbc1c701a7bbf8c1f7
6cc6cf57dcef2c2342e8b15956ff1bf7fdfd1b61 refs/tags/1.0.2
43f57064f80097c4a628374e3e081b155108f138 refs/tags/1.0.3
^f0b6a7b6b146e7466a26909770e594387c038917
4ba0ed9d4fc6caecb718979347dfe21c6218d550 refs/tags/1.0.4
9167999c5779db8ddd555ed39d91c497e31b1486 refs/tags/1.0.5
91474c0f164f9bcd5ceba18586c8d1e8aa2de652 refs/tags/1.0.6
^e84b76e61a24a1f9b69a04002acff0d57fff0c50
fb0547337d1402fff14cf4e4ea15fe496d88d4c8 refs/tags/1.0.6-beta
^7fcd6766d00aa0c1f9c24365864a5738bc893252
b8b4ea65d6477789e3b24f9ff503c3909d8d170f refs/tags/1.0.7
^12a5b7501c73e64f08e9dd27b840905947e45d9f
1bca03c976f3fae3b54bdb5e23ebbabe953afc02 refs/tags/1.0.7-beta
10be62854bc3c6d86aa5ad0e60e7b2e7298385e5 refs/tags/1.0.8
^8936ad2bb51feb5f0fe97b9e7c64bff05eea2373
aaabc1779ef48e3152d1bf0a024ceffc61f455c7 refs/tags/1.0.8-beta
^544e919a0181bb44faec52db0e6601b12087fd8a
b73bd5243be1d194cbb0ec98eebaf1600be4dfad refs/tags/1.0.9
^0de6415eed56c9cb7cd9980cc3197264af4ebeb7
68c6c7605077280b6dfc36b802c24c85aa20fbeb refs/tags/1.0.9-beta
^2566be2eb7f9f43efe8657a21e10c9d57d175931


--------------------------------------------------
File End
--------------------------------------------------


./.git/FETCH_HEAD
File type: 
34f6dad690d74926791a8652a9bad62706dafaf5		branch 'master' of github.com:convert-cart/magento2-plugin
097e73f464b266c9b4c890db32296a308421e2a1	not-for-merge	branch 'adding_logs' of github.com:convert-cart/magento2-plugin
3781a4f7333c3f041153d0f16916487ac98a862a	not-for-merge	branch 'fixing_return' of github.com:convert-cart/magento2-plugin
c81d132c106ee6919488db167f56f182b302e69c	not-for-merge	branch 'fixing_return_schema' of github.com:convert-cart/magento2-plugin
fb2bb8426a12c58c6a36cb2d671a629d4c2cd49f	not-for-merge	branch 'logs_added' of github.com:convert-cart/magento2-plugin
0ef358be0181adc3be68f3044a9c541313cff9a8	not-for-merge	branch 'plugin_fix' of github.com:convert-cart/magento2-plugin
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c	not-for-merge	branch 'plugin_update' of github.com:convert-cart/magento2-plugin
8e70db2e254d5fbb06107ee09adb54406776c82a	not-for-merge	branch 'return_fix' of github.com:convert-cart/magento2-plugin
9d03d3cb16eed7650e39c85c1abf20ff48084e7d	not-for-merge	branch 'sample_fix' of github.com:convert-cart/magento2-plugin
56619506609c4036931b17c179f16e68fb038bdf	not-for-merge	branch 'test_return_feature' of github.com:convert-cart/magento2-plugin
351bc48dfd30391e7e0762b29b1e5e16f9b2f7a1	not-for-merge	branch 'updatingInstallSchema' of github.com:convert-cart/magento2-plugin
9a2d90a5247be294b0ae2cb212a476a9d880c8e1	not-for-merge	branch 'updating_di_file' of github.com:convert-cart/magento2-plugin
334bba386c8a9409df807a3d09e778fa5b27f87b	not-for-merge	branch 'updating_pluginInterface' of github.com:convert-cart/magento2-plugin
eb3853596eebebf8cba04f8e33ebbe71f952b90e	not-for-merge	branch 'updating_plugininfo' of github.com:convert-cart/magento2-plugin
b95a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c	not-for-merge	branch 'updating_return' of github.com:convert-cart/magento2-plugin


--------------------------------------------------
File End
--------------------------------------------------


./.git/ORIG_HEAD
File type: 
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c


--------------------------------------------------
File End
--------------------------------------------------


./.git/config
File type: 
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
[remote "origin"]
	url = git@github.com:convert-cart/magento2-plugin.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
	vscode-merge-base = origin/master
[branch "sample_fix"]
	remote = origin
	merge = refs/heads/sample_fix
	vscode-merge-base = origin/sample_fix


--------------------------------------------------
File End
--------------------------------------------------


./.git/description
File type: 
Unnamed repository; edit this file 'description' to name the repository.


--------------------------------------------------
File End
--------------------------------------------------


./.git/HEAD
File type: 
ref: refs/heads/sample_fix


--------------------------------------------------
File End
--------------------------------------------------


./.git/COMMIT_EDITMSG
File type: 
Fix for response structure issue


--------------------------------------------------
File End
--------------------------------------------------


./.git/info/exclude
File type: 
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/HEAD
File type: 
0000000000000000000000000000000000000000 02d7d9a1e1b86643340ffb47c4a857fed6a74936 Udhay Kumar <udhaya@convertcart.com> 1739788858 +0530	clone: from github.com:convert-cart/magento2-plugin.git
02d7d9a1e1b86643340ffb47c4a857fed6a74936 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739788948 +0530	pull origin master: Fast-forward
89d2e811122c7db013db4699ccef0c65743e2f0a 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739789062 +0530	checkout: moving from master to master
89d2e811122c7db013db4699ccef0c65743e2f0a 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739789065 +0530	checkout: moving from master to temp-tagging-branch
89d2e811122c7db013db4699ccef0c65743e2f0a 656f85961b8b57fcd5b5631787afd28c3408f3c9 Udhay Kumar <udhaya@convertcart.com> 1739789071 +0530	commit: Release beta version 1.0.11-beta
656f85961b8b57fcd5b5631787afd28c3408f3c9 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739789074 +0530	checkout: moving from temp-tagging-branch to master
89d2e811122c7db013db4699ccef0c65743e2f0a d8cad03c0fcea876a411fd805ad69d6409a6e51e Udhay Kumar <udhaya@convertcart.com> 1740481726 +0530	pull origin master: Fast-forward
d8cad03c0fcea876a411fd805ad69d6409a6e51e c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740481932 +0530	commit: Fix - data_version column of setup_module not getting updated
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482006 +0530	checkout: moving from master to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482009 +0530	checkout: moving from master to temp-tagging-branch
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c f8435c1f39bbfdcbd4cadcca7ca57f5442c7bbcd Udhay Kumar <udhaya@convertcart.com> 1740482020 +0530	commit: Release version 1.0.11
f8435c1f39bbfdcbd4cadcca7ca57f5442c7bbcd 7a8f773a67ac51ca93b819934c4f81fdb2f809cd Udhay Kumar <udhaya@convertcart.com> 1740482020 +0530	commit: Release beta version 1.0.11-beta
7a8f773a67ac51ca93b819934c4f81fdb2f809cd c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482020 +0530	checkout: moving from temp-tagging-branch to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482064 +0530	checkout: moving from master to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482067 +0530	checkout: moving from master to temp-tagging-branch
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 033e2604386d623f522cde5b9a4a49b6478f56cc Udhay Kumar <udhaya@convertcart.com> 1740482091 +0530	commit: Release version 1.0.11
033e2604386d623f522cde5b9a4a49b6478f56cc c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482092 +0530	checkout: moving from temp-tagging-branch to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 34f6dad690d74926791a8652a9bad62706dafaf5 Udhay Kumar <udhaya@convertcart.com> 1741006066 +0530	pull origin master: Fast-forward
34f6dad690d74926791a8652a9bad62706dafaf5 9d03d3cb16eed7650e39c85c1abf20ff48084e7d Udhay Kumar <udhaya@convertcart.com> 1741006241 +0530	checkout: moving from master to sample_fix
9d03d3cb16eed7650e39c85c1abf20ff48084e7d 39099ca1214fbca213a03ad62137b69b9b5a4836 Udhay Kumar <udhaya@convertcart.com> 1741007870 +0530	commit: Fix for response structure issue
39099ca1214fbca213a03ad62137b69b9b5a4836 b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 Udhay Kumar <udhaya@convertcart.com> 1741008524 +0530	commit: Fix for response structure issue
b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 d85f1a3757e543aaa0a63016cbb80c4752e3620d Udhay Kumar <udhaya@convertcart.com> 1741009018 +0530	commit: Fix for response structure issue
d85f1a3757e543aaa0a63016cbb80c4752e3620d c465a0e9da5c8dd64ca48da102d78f0a0d1f74da Udhay Kumar <udhaya@convertcart.com> 1741009495 +0530	commit: Fix for response structure issue
c465a0e9da5c8dd64ca48da102d78f0a0d1f74da 4467a87c8a8ef020bec29fe7751e86600be76724 Udhay Kumar <udhaya@convertcart.com> 1741330396 +0530	commit: Fix for response structure issue
4467a87c8a8ef020bec29fe7751e86600be76724 a7fafba0520173b68d2345e8370102c9d3714a47 Udhay Kumar <udhaya@convertcart.com> 1741331225 +0530	commit: Fix for response structure issue
a7fafba0520173b68d2345e8370102c9d3714a47 83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 Udhay Kumar <udhaya@convertcart.com> 1741331887 +0530	commit: Fix for response structure issue
83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 9324e599072a83b3fa729f8ae50b52955e3aa347 Udhay Kumar <udhaya@convertcart.com> 1741332329 +0530	commit: Fix for response structure issue


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/heads/master
File type: 
0000000000000000000000000000000000000000 02d7d9a1e1b86643340ffb47c4a857fed6a74936 Udhay Kumar <udhaya@convertcart.com> 1739788858 +0530	clone: from github.com:convert-cart/magento2-plugin.git
02d7d9a1e1b86643340ffb47c4a857fed6a74936 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739788948 +0530	pull origin master: Fast-forward
89d2e811122c7db013db4699ccef0c65743e2f0a d8cad03c0fcea876a411fd805ad69d6409a6e51e Udhay Kumar <udhaya@convertcart.com> 1740481726 +0530	pull origin master: Fast-forward
d8cad03c0fcea876a411fd805ad69d6409a6e51e c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740481932 +0530	commit: Fix - data_version column of setup_module not getting updated
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 34f6dad690d74926791a8652a9bad62706dafaf5 Udhay Kumar <udhaya@convertcart.com> 1741006066 +0530	pull origin master: Fast-forward


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/heads/sample_fix
File type: 
0000000000000000000000000000000000000000 9d03d3cb16eed7650e39c85c1abf20ff48084e7d Udhay Kumar <udhaya@convertcart.com> 1741006241 +0530	branch: Created from refs/remotes/origin/sample_fix
9d03d3cb16eed7650e39c85c1abf20ff48084e7d 39099ca1214fbca213a03ad62137b69b9b5a4836 Udhay Kumar <udhaya@convertcart.com> 1741007870 +0530	commit: Fix for response structure issue
39099ca1214fbca213a03ad62137b69b9b5a4836 b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 Udhay Kumar <udhaya@convertcart.com> 1741008524 +0530	commit: Fix for response structure issue
b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 d85f1a3757e543aaa0a63016cbb80c4752e3620d Udhay Kumar <udhaya@convertcart.com> 1741009018 +0530	commit: Fix for response structure issue
d85f1a3757e543aaa0a63016cbb80c4752e3620d c465a0e9da5c8dd64ca48da102d78f0a0d1f74da Udhay Kumar <udhaya@convertcart.com> 1741009495 +0530	commit: Fix for response structure issue
c465a0e9da5c8dd64ca48da102d78f0a0d1f74da 4467a87c8a8ef020bec29fe7751e86600be76724 Udhay Kumar <udhaya@convertcart.com> 1741330396 +0530	commit: Fix for response structure issue
4467a87c8a8ef020bec29fe7751e86600be76724 a7fafba0520173b68d2345e8370102c9d3714a47 Udhay Kumar <udhaya@convertcart.com> 1741331225 +0530	commit: Fix for response structure issue
a7fafba0520173b68d2345e8370102c9d3714a47 83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 Udhay Kumar <udhaya@convertcart.com> 1741331887 +0530	commit: Fix for response structure issue
83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 9324e599072a83b3fa729f8ae50b52955e3aa347 Udhay Kumar <udhaya@convertcart.com> 1741332329 +0530	commit: Fix for response structure issue


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/master
File type: 
02d7d9a1e1b86643340ffb47c4a857fed6a74936 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739788948 +0530	pull origin master: fast-forward
89d2e811122c7db013db4699ccef0c65743e2f0a d8cad03c0fcea876a411fd805ad69d6409a6e51e Udhay Kumar <udhaya@convertcart.com> 1740481726 +0530	pull origin master: fast-forward
d8cad03c0fcea876a411fd805ad69d6409a6e51e c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740481938 +0530	update by push
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 34f6dad690d74926791a8652a9bad62706dafaf5 Udhay Kumar <udhaya@convertcart.com> 1741006066 +0530	pull origin master: fast-forward


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/fixing_return_schema
File type: 
0000000000000000000000000000000000000000 c81d132c106ee6919488db167f56f182b302e69c Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/return_fix
File type: 
0000000000000000000000000000000000000000 8e70db2e254d5fbb06107ee09adb54406776c82a Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_pluginInterface
File type: 
0000000000000000000000000000000000000000 334bba386c8a9409df807a3d09e778fa5b27f87b Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/logs_added
File type: 
0000000000000000000000000000000000000000 fb2bb8426a12c58c6a36cb2d671a629d4c2cd49f Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_plugininfo
File type: 
0000000000000000000000000000000000000000 eb3853596eebebf8cba04f8e33ebbe71f952b90e Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/sample_fix
File type: 
0000000000000000000000000000000000000000 9d03d3cb16eed7650e39c85c1abf20ff48084e7d Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head
9d03d3cb16eed7650e39c85c1abf20ff48084e7d 39099ca1214fbca213a03ad62137b69b9b5a4836 Udhay Kumar <udhaya@convertcart.com> 1741007883 +0530	update by push
39099ca1214fbca213a03ad62137b69b9b5a4836 b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 Udhay Kumar <udhaya@convertcart.com> 1741008529 +0530	update by push
b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 d85f1a3757e543aaa0a63016cbb80c4752e3620d Udhay Kumar <udhaya@convertcart.com> 1741009023 +0530	update by push
d85f1a3757e543aaa0a63016cbb80c4752e3620d c465a0e9da5c8dd64ca48da102d78f0a0d1f74da Udhay Kumar <udhaya@convertcart.com> 1741009500 +0530	update by push
c465a0e9da5c8dd64ca48da102d78f0a0d1f74da 4467a87c8a8ef020bec29fe7751e86600be76724 Udhay Kumar <udhaya@convertcart.com> 1741330402 +0530	update by push
4467a87c8a8ef020bec29fe7751e86600be76724 a7fafba0520173b68d2345e8370102c9d3714a47 Udhay Kumar <udhaya@convertcart.com> 1741331230 +0530	update by push
a7fafba0520173b68d2345e8370102c9d3714a47 83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 Udhay Kumar <udhaya@convertcart.com> 1741331892 +0530	update by push
83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 9324e599072a83b3fa729f8ae50b52955e3aa347 Udhay Kumar <udhaya@convertcart.com> 1741332335 +0530	update by push


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/adding_logs
File type: 
0000000000000000000000000000000000000000 097e73f464b266c9b4c890db32296a308421e2a1 Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/plugin_fix
File type: 
0000000000000000000000000000000000000000 0ef358be0181adc3be68f3044a9c541313cff9a8 Udhay Kumar <udhaya@convertcart.com> 1740482012 +0530	fetch --tags: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/plugin_update
File type: 
0000000000000000000000000000000000000000 c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_return
File type: 
0000000000000000000000000000000000000000 b95a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/HEAD
File type: 
0000000000000000000000000000000000000000 02d7d9a1e1b86643340ffb47c4a857fed6a74936 Udhay Kumar <udhaya@convertcart.com> 1739788858 +0530	clone: from github.com:convert-cart/magento2-plugin.git


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/test_return_feature
File type: 
0000000000000000000000000000000000000000 56619506609c4036931b17c179f16e68fb038bdf Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_di_file
File type: 
0000000000000000000000000000000000000000 9a2d90a5247be294b0ae2cb212a476a9d880c8e1 Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/fixing_return
File type: 
0000000000000000000000000000000000000000 3781a4f7333c3f041153d0f16916487ac98a862a Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/heads/master
File type: 
34f6dad690d74926791a8652a9bad62706dafaf5


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/heads/sample_fix
File type: 
9324e599072a83b3fa729f8ae50b52955e3aa347


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/tags/1.0.11
File type: .11
ffbc7080096fe1aaa338d710132c60dfb79b5d7c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/master
File type: 
34f6dad690d74926791a8652a9bad62706dafaf5


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/fixing_return_schema
File type: 
c81d132c106ee6919488db167f56f182b302e69c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/return_fix
File type: 
8e70db2e254d5fbb06107ee09adb54406776c82a


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_pluginInterface
File type: 
334bba386c8a9409df807a3d09e778fa5b27f87b


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/logs_added
File type: 
fb2bb8426a12c58c6a36cb2d671a629d4c2cd49f


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_plugininfo
File type: 
eb3853596eebebf8cba04f8e33ebbe71f952b90e


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/sample_fix
File type: 
9324e599072a83b3fa729f8ae50b52955e3aa347


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/adding_logs
File type: 
097e73f464b266c9b4c890db32296a308421e2a1


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/plugin_fix
File type: 
0ef358be0181adc3be68f3044a9c541313cff9a8


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/plugin_update
File type: 
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_return
File type: 
b95a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/HEAD
File type: 
ref: refs/remotes/origin/master


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/test_return_feature
File type: 
56619506609c4036931b17c179f16e68fb038bdf


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_di_file
File type: 
9a2d90a5247be294b0ae2cb212a476a9d880c8e1


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/fixing_return
File type: 
3781a4f7333c3f041153d0f16916487ac98a862a


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-merge-commit.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-rebase.sample
File type: .sample
#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/commit-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/fsmonitor-watchman.sample
File type: .sample
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-push.sample
File type: .sample
#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/prepare-commit-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/sendemail-validate.sample
File type: .sample
#!/bin/sh

# An example hook script to validate a patch (and/or patch series) before
# sending it via email.
#
# The hook should exit with non-zero status after issuing an appropriate
# message if it wants to prevent the email(s) from being sent.
#
# To enable this hook, rename this file to "sendemail-validate".
#
# By default, it will only check that the patch(es) can be applied on top of
# the default upstream branch without conflicts in a secondary worktree. After
# validation (successful or not) of the last patch of a series, the worktree
# will be deleted.
#
# The following config variables can be set to change the default remote and
# remote ref that are used to apply the patches against:
#
#   sendemail.validateRemote (default: origin)
#   sendemail.validateRemoteRef (default: HEAD)
#
# Replace the TODO placeholders with appropriate checks according to your
# needs.

validate_cover_letter () {
	file="$1"
	# TODO: Replace with appropriate checks (e.g. spell checking).
	true
}

validate_patch () {
	file="$1"
	# Ensure that the patch applies without conflicts.
	git am -3 "$file" || return
	# TODO: Replace with appropriate checks for this patch
	# (e.g. checkpatch.pl).
	true
}

validate_series () {
	# TODO: Replace with appropriate checks for the whole series
	# (e.g. quick build, coding style checks, etc.).
	true
}

# main -------------------------------------------------------------------------

if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
then
	remote=$(git config --default origin --get sendemail.validateRemote) &&
	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
	git config --replace-all sendemail.validateWorktree "$worktree"
else
	worktree=$(git config --get sendemail.validateWorktree)
fi || {
	echo "sendemail-validate: error: failed to prepare worktree" >&2
	exit 1
}

unset GIT_DIR GIT_WORK_TREE
cd "$worktree" &&

if grep -q "^diff --git " "$1"
then
	validate_patch "$1"
else
	validate_cover_letter "$1"
fi &&

if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
then
	git config --unset-all sendemail.validateWorktree &&
	trap 'git worktree remove -ff "$worktree"' EXIT &&
	validate_series
fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/push-to-checkout.sample
File type: .sample
#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/post-update.sample
File type: .sample
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-commit.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/applypatch-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-receive.sample
File type: .sample
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/update.sample
File type: .sample
#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-applypatch.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:


--------------------------------------------------
File End
--------------------------------------------------


./Block/Script.php
File type: .php
<?php
namespace Convertcart\Analytics\Block;

class Script extends \Magento\Framework\View\Element\Template
{
}

--------------------------------------------------
File End
--------------------------------------------------


./Observer/ProcessCategoryAfterDeleteEventObserver.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\Observer;
use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\App\ResourceConnection;
use Convertcart\Analytics\Model\SyncFactory;

class ProcessCategoryAfterDeleteEventObserver implements ObserverInterface
{

    /**
     * @var \Convertcart\Analytics\Model\SyncFactory
     */
    protected $_deletedCategory;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    public function __construct(
        \Convertcart\Analytics\Model\SyncFactory $deletedCategory,
        \Convertcart\Analytics\Logger\Logger $_logger
    ) {
        $this->_logger = $_logger;
        $this->_deletedCategory = $deletedCategory;
    }

    public function execute(Observer $observer)
    {
        try {
            $eventCategory = $observer->getEvent()->getCategory();
            $model = $this->_deletedCategory->create();
            $model->addData(["item_id" => $eventCategory->getId()]);
            $model->addData(["type" => "category"]);
            $saveData = $model->save();
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/ContentpageViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class ContentpageViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'contentPageViewed';
            $eventData = [];
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/HomepageViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class HomepageViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'homepageViewed';
            $eventData= [];
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/AddScript.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\View\LayoutInterface;

class AddScript implements ObserverInterface
{
    /**
     * @var \Magento\Framework\View\LayoutInterface
     */
    protected $_layout;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Convertcart\Analytics\Helper\Data
     */
    protected $_dataHelper;

    public function __construct(
        LayoutInterface $_layout,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Helper\Data $_dataHelper,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_dataHelper = $_dataHelper;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
        $this->_layout = $_layout;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $initScript = $this->_ccModel->getInitScript();
            if (empty($initScript)) {
                return;
            }

            $layout = $this->_layout;
            if (!is_object($layout)) {
                return;
            }

            $head = $layout->getBlock('head.additional');
            if (!is_object($head)) {
                return;
            }
            $head->append($initScript);
            $this->attachEvents($head);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }

    private function attachEvents($head)
    {
        if (!is_object($head)) {
            return;
        }
        $ccEvents = $this->_ccModel->fetchCcEvents();
        if (empty($ccEvents) or !is_array($ccEvents)) {
            return;
        }
        foreach ($ccEvents as $ccEvent) {
            $eventBlock = $this->_ccModel->getEventScript($ccEvent);
            $head->append($eventBlock);
        }
    }
}





--------------------------------------------------
File End
--------------------------------------------------


./Observer/ProductsSearched.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\App\Request\Http;

class ProductsSearched implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Convertcart\Analytics\Helper\Data
     */
    protected $_dataHelper;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel,
        \Convertcart\Analytics\Helper\Data $_dataHelper
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
        $this->_dataHelper = $_dataHelper;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'productsSearched';
            $eventData = [];
            $query = $observer->getDataObject();
            if (is_object($query)) {
                $eventData['query'] = $this->_dataHelper->sanitizeParam($query->getQueryText());
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}

--------------------------------------------------
File End
--------------------------------------------------


./Observer/ProcessProductAfterDeleteEventObserver.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\Observer;
use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\App\ResourceConnection;
use Convertcart\Analytics\Model\SyncFactory;

class ProcessProductAfterDeleteEventObserver implements ObserverInterface
{

    /**
     * @var \Convertcart\Analytics\Model\SyncFactory
     */
    protected $_deletedProduct;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    public function __construct(
        \Convertcart\Analytics\Model\SyncFactory $deletedProduct,
        \Convertcart\Analytics\Logger\Logger $_logger
    ) {
        $this->_logger = $_logger;
        $this->_deletedProduct = $deletedProduct;
    }

    public function execute(Observer $observer)
    {
        try {
            $eventProduct = $observer->getEvent()->getProduct();
            $model = $this->_deletedProduct->create();
            $model->addData(["item_id" => $eventProduct->getId()]);
            $model->addData(["type" => "product"]);
            $saveData = $model->save();
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Cart/OrderCompleted.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Cart;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\Registry;
use Magento\CatalogInventory\Api\StockRegistryInterface;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Framework\View\LayoutInterface;
use Magento\Sales\Model\OrderFactory;
use \Psr\Log\LoggerInterface;

class OrderCompleted implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Sales\Model\OrderFactory
     */
    protected $_salesOrderFactory;

    protected $_dataHelper;

    public function __construct(
        StoreManagerInterface $storeManager,
        OrderFactory $_salesOrderFactory,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_storeManager = $storeManager;
        $this->_salesOrderFactory = $_salesOrderFactory;
        $this->_ccModel = $_ccModel;
        $this->_logger = $_logger;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $orderIds = $observer->getData('order_ids');
            if (!is_array($orderIds) || empty($orderIds[0])) {
                return;
            }

            $eventData = [];
            $eventData['items'] = [];
            $store = $this->_storeManager->getStore();
            $currency = is_object($store) ? $store->getCurrentCurrencyCode() : null;
            $order = $this->_salesOrderFactory->create()->load($orderIds[0]);
            if (!is_object($order)) {
                return;
            }

            foreach ($order->getAllVisibleItems() as $item) {
                $orderItem = [];
                $orderItem['name'] = str_replace("'", "", $item->getName());
                $orderItem['price'] = $item->getPrice();
                $orderItem['currency'] = $currency;
                $orderItem['quantity'] = $item->getQtyOrdered();
                $orderItem['id'] = $item->getProductId();
                $orderItem['sku'] = $item->getSku();

                $product = $item->getProduct();
                if (is_object($product)) {
                    $orderItem['url'] = $product->getProductUrl();
                }
                $eventData['items'][] = $orderItem;
            }

            $eventData['orderId'] = $order->getIncrementId();
            $eventData['order_email'] = $order->getCustomerEmail();
            $eventData['currency'] = $currency;
            $eventData['is_guest'] = $order->getCustomerIsGuest();
            $eventData['coupon_code'] = $order->getCouponCode();
            $eventData['shipping_method'] = $order->getShippingDescription();
            $eventData['payment_method'] = $order->getPayment()->getMethod();
            $eventData['status'] = $order->getStatus();
            $eventData['currency'] = $currency;
            $eventData['total'] = $order->getGrandTotal();

            // $ccData['event_data']['shipping_amount'] = $cc->getValue($order->getShippingAmount());
            // $ccData['event_data']['tax_amount'] = $cc->getValue($order->getTaxAmount());
            // $ccData['event_data']['discount_amount'] = $cc->getValue($order->getDiscountAmount());
            // $ccView['event_data']['subtotal'] = $cc->getValue($order->getSubtotal());

            // $ccData['event_data']['base_total'] = $cc->getValue($order->getBaseGrandTotal());
            // $ccData['event_data']['total_due'] = $cc->getValue($order->getTotalDue());
            // $ccData['event_data']['base_total_due'] = $cc->getValue($order->getBaseTotalDue());

            $eventName = 'orderCompleted';
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->log(null, $e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Cart/CartViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Cart;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Checkout\Model\Session;

class CartViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Checkout\Model\Session
     */
    protected $_checkoutSession;

    public function __construct(
        StoreManagerInterface $_storeManager,
        Session $_checkoutSession,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_checkoutSession = $_checkoutSession;
        $this->_storeManager = $_storeManager;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName  = 'cartViewed';
            $eventData = [];
            if (!empty($this->_checkoutSession) && is_object($this->_checkoutSession)) {
                $store = $this->_storeManager->getStore();
                $currency = is_object($store) ? $store->getCurrentCurrencyCode() : null;
                $eventData = $this->_ccModel->getCartEventData($this->_checkoutSession->getQuote(), $currency);
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Cart/CheckoutViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Cart;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Checkout\Model\Session;

class CheckoutViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Checkout\Model\Session
     */
    protected $_checkoutSession;

    public function __construct(
        StoreManagerInterface $_storeManager,
        Session $_checkoutSession,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_checkoutSession = $_checkoutSession;
        $this->_storeManager = $_storeManager;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName  = 'checkoutViewed';
            $eventData = [];
            if (!empty($this->_checkoutSession) && is_object($this->_checkoutSession)) {
                $store = $this->_storeManager->getStore();
                $currency = is_object($store) ? $store->getCurrentCurrencyCode() : null;
                $eventData = $this->_ccModel->getCartEventData($this->_checkoutSession->getQuote(), $currency);
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Customer/LoggedOut.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Customer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class LoggedOut implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $customer = $observer->getCustomer();
            $eventName = 'loggedOut';
            $eventData = $this->_ccModel->getCustomerData($customer);
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Customer/LoggedIn.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Customer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class LoggedIn implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $customer = $observer->getCustomer();
            $eventName = 'loggedIn';
            $eventData = $this->_ccModel->getCustomerData($customer);
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Customer/CustomerRegistered.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Customer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class CustomerRegistered implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $customer = $observer->getCustomer();
            $eventName = 'registered';
            $eventData = $this->_ccModel->getCustomerData($customer);
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Catalog/CategoryViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Catalog;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\Registry;

class CategoryViewed implements ObserverInterface
{
    /**
     * @var \Magento\Framework\Registry
     */
    protected $_registry;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        Registry $_registry,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_registry = $_registry;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'categoryViewed';
            $eventData = [];
            $category = $this->_registry->registry('current_category');
            if (is_object($category)) {
                $eventData['name'] = $category->getName();
                $eventData['id'] = $category->getId();
                $eventData['url'] = $category->getUrl();
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Catalog/ProductViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Catalog;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\Registry;
use Magento\CatalogInventory\Api\StockRegistryInterface;
use Magento\Store\Model\StoreManagerInterface;
use Magento\ConfigurableProduct\Model\Product\Type\ConfigurableFactory;

class ProductViewed implements ObserverInterface
{
    /**
     * @var \Magento\Framework\Registry
     */
    protected $_registry;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_stockItemRepository;

    /**
     * @var \Magento\ConfigurableProduct\Model\Product\Type\ConfigurableFactory
     */
    protected $_configurableProductProductTypeConfigurableFactory;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        Registry $_registry,
        StockRegistryInterface $_stockItemRepository,
        StoreManagerInterface $_storeManager,
        ConfigurableFactory $_configurableProductProductTypeConfigurableFactory,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_registry = $_registry;
        $this->_stockItemRepository = $_stockItemRepository;
        $this->_storeManager = $_storeManager;
        $this->_configurableProductProductTypeConfigurableFactory = $_configurableProductProductTypeConfigurableFactory;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'productViewed';
            $eventData = [];
            $product = $this->_registry->registry('current_product');
            if (is_object($product)) {
                $eventData = [
                    'id' => $product->getId(),
                    'url' => $product->getProductUrl(),
                    'name' => $product->getName(),
                    'price' => $product->getPrice(),
                    'final_price' => $product->getFinalPrice(),
                    'sku' => $product->getSku(),
                    'type' => $product->getTypeId()
                ];

                $store = $this->_storeManager->getStore();
                $eventData['currency'] = is_object($store) ? $store->getCurrentCurrencyCode() : null;
                if (!empty($product->getImage())) {
                    $eventData['image'] = $store->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
                    $eventData['image'].= 'catalog/product'.$product->getImage();
                } else {
                    $eventData['image'] = null;
                }
                $stock = $this->_stockItemRepository->getStockItem($product->getId());
                $eventData['is_in_stock'] = is_object($stock) ? $stock->getIsInStock() : null;
                if ($eventData['type'] == "configurable") {
                    $eventData['product_type'] = "parent";
                    $childProducts = $this->_configurableProductProductTypeConfigurableFactory->create()
                                        ->getChildrenIds($product->getId());
                    $eventData['child_ids'] = $childProducts[0];
                } else {
                    $eventData['product_type'] = "simple";
                }
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/SyncManagement.php
File type: .php
<?php

namespace Convertcart\Analytics\Model;

use Convertcart\Analytics\Api\Data\SyncInterface;

class SyncManagement implements SyncInterface, \Magento\Framework\DataObject\IdentityInterface
{

    public const CACHE_TAG = 'Convertcart_Analytics';

    protected function _construct()
    {
        /* _init($resourceModel)  */
        $this->_init(\Convertcart\Analytics\Model\ResourceModel\Sync::class);
    }

    public function getIdentities()
    {
        return [self::CACHE_TAG . '_' . $this->getId()];
    }

    /**
     * Get ID.
     *
     * @return int
     */
    public function getId()
    {
        return $this->getData(self::ID);
    }

    /**
     * Set ID.
     *
     * @param int $id
     *
     * @return SyncInterface
     */
    public function setId($id)
    {
        return $this->setData(self::ID, $id);
    }

    /**
     * Get TYPE.
     *
     * @return string
     */
    public function getType()
    {
        return $this->getData(self::TYPE);
    }

    /**
     * Set type.
     *
     * @param string $type
     *
     * @return SyncInterface
     */
    public function setType($type)
    {
        return $this->setData(self::TYPE, $type);
    }

    /**
     * Get itemId.
     *
     * @return string|null
     */
    public function getItemId()
    {
        return $this->getData(self::ITEM_ID);
    }

    /**
     * Set itemId.
     *
     * @param string $itemId
     *
     * @return SyncInterface
     */
    public function setItemId($itemId)
    {
        return $this->setData(self::ITEM_ID, $itemId);
    }

    /**
     * Get createdAt.
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->getData(self::CREATED_AT);
    }

    /**
     * Set createdAt.
     *
     * @param string $createdAt
     *
     * @return SyncInterface
     */
    public function setCreatedAt($createdAt)
    {
        return $this->setData(self::CREATED_AT, $createdAt);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Sync.php
File type: .php
<?php


namespace Convertcart\Analytics\Model;

use Magento\Framework\Model\AbstractModel;

class Sync extends AbstractModel
{
    protected function _construct()
    {
        $this->_init(ResourceModel\Sync::class);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Cc.php
File type: .php
<?php
namespace Convertcart\Analytics\Model;

use Magento\Framework\Session\SessionManagerInterface;
use Magento\Framework\View\LayoutInterface;
use Magento\Store\Model\StoreManagerInterface;

class Cc extends \Magento\Framework\Session\SessionManager
{
    /**
     * @var \Magento\Framework\View\LayoutInterface
     */
    protected $_layout;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Convertcart\Analytics\Helper\Data
     */
    protected $_dataHelper;

    /**
     * @var \Magento\Framework\Session\SessionManagerInterface
     */
    protected $_fwSession;

    public function __construct(
        LayoutInterface $_layout,
        StoreManagerInterface $_storeManager,
        SessionManagerInterface $_fwSession,
        \Convertcart\Analytics\Helper\Data $_dataHelper
    ) {
        $this->_layout = $_layout;
        $this->_storeManager = $_storeManager;
        $this->_fwSession = $_fwSession;
        $this->_dataHelper = $_dataHelper;
    }

    public function getInitScript()
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }

        $clientKey = $this->_dataHelper->getClientKey();
        if (empty($clientKey)) {
            return;
        }
        $script = $this->_layout->createBlock('Convertcart\Analytics\Block\Script')
                ->setTemplate('Convertcart_Analytics::init.phtml')
                ->assign([
                    'clientKey' => $clientKey
                ]);
        return $script;
    }

    public function getEventScript($eventData = [])
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }
        $script = $this->_layout->createBlock('Convertcart\Analytics\Block\Script')
        ->setTemplate('Convertcart_Analytics::event.phtml')
        ->assign([
            'eventData' => json_encode($eventData)
        ]);
        return $script;
    }

    public function storeCcEvents($eventName, $eventData = [])
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }
        $ccEvents = $this->_fwSession->getCcEvents();
        $eventData['ccEvent'] = $this->_dataHelper->getEventType($eventName);
        $eventLimit = 3;
        if (empty($ccEvents)) {
            $ccEvents = [];
            $ccEvents[] = $this->addMetaData($eventData);
        } elseif (count($ccEvents) >= $eventLimit) {
            $eventIndex = $eventLimit - 1;
            $ccEvents[$eventIndex] = $this->addMetaData($eventData);
        } else {
            $ccEvents[] = $this->addMetaData($eventData);
        }

        $this->_fwSession->setCcEvents($ccEvents);
    }

    public function fetchCcEvents()
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }

        $ccEvents = $this->_fwSession->getCcEvents();
        $this->_fwSession->setCcEvents();
        if (empty($ccEvents)) {
            return [];
        } else {
            return $ccEvents;
        }
    }

    public function addMetaData($eventData = [])
    {
        $metaData = [];
        $metaData['plugin_version'] = $this->_dataHelper->getModuleVersion();
        $eventData['meta_data'] = $metaData;
        return $eventData;
    }

    public function getCartEventData($quote, $currency)
    {
        if (!is_object($quote)) {
            return;
        }
        $cartItems = $quote->getAllVisibleItems();
        $eventData = [];
        $eventData['currency'] = $currency;
        $eventData['items'] = [];
        foreach ($cartItems as $item) {
            $cartItem = [];
            $cartItem['name'] = str_replace("'", "", $item->getName());
            $cartItem['price'] = $item->getPrice();
            $cartItem['currency'] = $currency;
            $cartItem['quantity'] = $item->getQty();
            $cartItem['id'] = $item->getProductId();
            $cartItem['sku'] = $item->getSku();
            $cartItem['customOptions'] = $this->getCartItemOptions($item);

            $product = $item->getProduct();
            if (is_object($product)) {
                $cartItem['url'] = $product->getProductUrl();
                if (!empty($product->getSmallImage())) {
                    $store = $this->_storeManager->getStore();
                    $cartItem['image'] = $store->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
                    $cartItem['image'].= 'catalog/product'.$product->getSmallImage();
                }
            }
            $eventData['items'][] = $cartItem;
        }
        $eventData['currency'] = $currency;
        $eventData['coupon_code'] = $quote->getCouponCode();
        $eventData['subtotal'] = $quote->getSubtotal();
        $eventData['total'] = $quote->getGrandTotal();
        $eventData['base_total'] = $quote->getBaseGrandTotal();

        return $eventData;
    }

    public function getCartItemOptions($item)
    {
        if (!is_object($item)) {
            return null;
        }

        $product = $item->getProduct();
        if (!is_object($product)) {
            return null;
        }

        $productInstance = $product->getTypeInstance(true);
        if (!is_object($productInstance)) {
            return null;
        }

        $productOptions = $productInstance->getOrderOptions($product);
        $options = !empty($productOptions['options']) ? $productOptions['options'] : null;
        if (empty($options)) {
            return null;
        }

        $customOptions = [];
        foreach ($options as $option) {
            $customOption = [];
            $customOption['label'] = !empty($option['label']) ? $option['label'] : null;
            $customOption['value'] = !empty($option['value']) ? $option['value'] : null;
            $customOption['option_id'] = !empty($option['option_id']) ? $option['option_id'] : null;
            $customOption['option_type'] = !empty($option['option_type']) ? $option['option_type'] : null;
            $customOptions[] = $customOption;
        }

        return $customOptions;
    }

    public function getCustomerData($customer)
    {
        if (!is_object($customer)) {
            return;
        }
        $customerData = [];
        $customerData['email'] = $customer->getEmail();
        $customerData['first_name'] = $customer->getFirstname();
        $customerData['last_name'] = $customer->getLastname();
        $customerData['id'] = $customer->getId();

        return $customerData;
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Data/PluginInfo.php
File type: .php
<?php
namespace Convertcart\Analytics\Model\Data;

use Convertcart\Analytics\Api\Data\PluginInfoInterface;
use Magento\Framework\Model\AbstractExtensibleModel;

class PluginInfo extends AbstractExtensibleModel implements PluginInfoInterface, \JsonSerializable
{
    /**
     * @inheritDoc
     */
    public function getVersion()
    {
        return $this->getData(self::VERSION);
    }

    /**
     * @inheritDoc
     */
    public function setVersion($version)
    {
        return $this->setData(self::VERSION, $version);
    }

    /**
     * @inheritDoc
     */
    public function getTables()
    {
        $tables = $this->getData(self::TABLES);
        return is_array($tables) ? $tables : [];
    }

    /**
     * @inheritDoc
     */
    public function setTables($tables)
    {
        return $this->setData(self::TABLES, $tables);
    }

    /**
     * @inheritDoc
     */
    public function getTriggers()
    {
        $triggers = $this->getData(self::TRIGGERS);
        return is_array($triggers) ? $triggers : [];
    }

    /**
     * @inheritDoc
     */
    public function setTriggers($triggers)
    {
        return $this->setData(self::TRIGGERS, $triggers);
    }

    /**
     * Specify data which should be serialized to JSON
     *
     * @return array
     */
    public function jsonSerialize(): array
    {
        return [
            'version' => $this->getVersion(),
            'tables' => (object)$this->getTables(), // Cast to object to force JSON object notation
            'triggers' => (object)$this->getTriggers() // Cast to object to force JSON object notation
        ];
    }

    /**
     * @inheritDoc
     */
    protected function _construct()
    {
        $this->_init(\Convertcart\Analytics\Model\ResourceModel\PluginInfo::class);
    }
} 

--------------------------------------------------
File End
--------------------------------------------------


./Model/Api/SyncApi.php
File type: .php
<?php

namespace Convertcart\Analytics\Model\Api;

use Convertcart\Analytics\Model\SyncFactory;
use Convertcart\Analytics\Model\ResourceModel\Sync\Collection;

class SyncApi implements \Convertcart\Analytics\Api\SyncRepositoryInterface
{

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\SyncFactory
     */
    protected $_deletedProduct;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\SyncFactory $deletedProduct
    ) {
        $this->_logger = $_logger;
        $this->_deletedProduct = $deletedProduct;
    }

    /**
     * Deleted product
     *
     * @inheriDoc
     *
     * @param int $limit
     * @param int $id
     * @param string $type
     */
    public function getDeletedProduct($limit, $id, $type)
    {
        try {
            // to delete the previous synced data ($id is last sync id);
            $model = $this->_deletedProduct->create()->getCollection();

            // Filter by type
            $model->addFieldToFilter("type", ["eq" => $type]);
            if ($id) {
                // If an ID is provided, fetch only records greater than this ID
                $model->addFieldToFilter("id", ['gt' => $id]);
            }
            // Limit the number of records
            $model->setPageSize($limit);

            return $model->getData();
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Api/PluginInfo.php
File type: .php
<?php
namespace Convertcart\Analytics\Model\Api;

use Convertcart\Analytics\Api\PluginInfoInterface;
use Magento\Framework\App\ResourceConnection;
use Magento\Framework\Module\ModuleListInterface;
use Magento\Framework\DB\Adapter\AdapterInterface;
use Magento\Framework\DataObject;
use Convertcart\Analytics\Model\Data\PluginInfoFactory;

class PluginInfo implements PluginInfoInterface
{
    /**
     * @var ResourceConnection
     */

    protected $resourceConnection;

    /**
     * @var ModuleListInterface
     */


    protected $moduleList;

    /**
     * @var AdapterInterface
     */
    protected $connection;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $logger;

    /**
     * @var PluginInfoFactory
     */
    protected $pluginInfoFactory;

    /**
     * Constructor.
     *
     * @param ResourceConnection $resourceConnection
     * @param ModuleListInterface $moduleList
     * @param PluginInfoFactory $pluginInfoFactory
     */

    public function __construct(
        ResourceConnection $resourceConnection,
        ModuleListInterface $moduleList,
        \Convertcart\Analytics\Logger\Logger $logger,
        \Convertcart\Analytics\Model\Data\PluginInfoFactory $pluginInfoFactory
    ) {
        $this->resourceConnection = $resourceConnection;
        $this->moduleList = $moduleList;
        $this->connection = $resourceConnection->getConnection();
        $this->logger = $logger;
        $this->pluginInfoFactory = $pluginInfoFactory;
    }

    /**
     * Get plugin information.
     *
     * @return array
     */
    public function getPluginInfo()
    {
        // Get plugin version
        $moduleCode = 'Convertcart_Analytics';
        $moduleInfo = $this->moduleList->getOne($moduleCode);
        $pluginVersion = isset($moduleInfo['setup_version']) ? $moduleInfo['setup_version'] : 'Unknown';

        // Check if required tables exist
        $requiredTables = ['convertcart_sync_activity'];
        $existingTables = $this->connection->listTables();

        // Create associative array for tables
        $tablesExist = [];
        foreach ($requiredTables as $table) {
            $tableName = $this->resourceConnection->getTableName($table);
            $tablesExist[$table] = in_array($tableName, $existingTables);
        }

        // Check if required triggers exist
        $requiredTriggers = [
            'update_cpe_after_insert_catalog_product_entity_decimal',
            'update_cpe_after_update_catalog_product_entity_decimal',
            'update_cpe_after_insert_catalog_inventory_stock_item',
            'update_cpe_after_update_catalog_inventory_stock_item'
        ];

        $query = "SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_SCHEMA = DATABASE()";
        $existingTriggers = $this->connection->fetchCol($query);

        // Create associative array for triggers
        $triggersExist = [];
        foreach ($requiredTriggers as $trigger) {
            $triggersExist[$trigger] = in_array($trigger, $existingTriggers);
        }

        // Create the expected dictionary structure
        $result = [
            'version' => $pluginVersion,
            'tables' => $tablesExist,
            'triggers' => $triggersExist
        ];

        // Logging for debugging
        $this->logger->debug('Existing triggers: ' . print_r($existingTriggers, true));
        $this->logger->debug('Plugin Info Data: ' . print_r($result, true));

        return $result;
    }
}

--------------------------------------------------
File End
--------------------------------------------------


./Model/ResourceModel/Sync.php
File type: .php
<?php


namespace Convertcart\Analytics\Model\ResourceModel;

use Magento\Framework\Model\ResourceModel\Db\AbstractDb;

class Sync extends AbstractDb
{
    public const MAIN_TABLE = 'convertcart_sync_activity';
    public const ID_FIELD_NAME = 'id';

    protected function _construct()
    {
        $this->_init(self::MAIN_TABLE, self::ID_FIELD_NAME);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/ResourceModel/PluginInfo.php
File type: .php
<?php
namespace Convertcart\Analytics\Model\ResourceModel;

use Magento\Framework\Model\ResourceModel\Db\AbstractDb;

class PluginInfo extends AbstractDb
{
    /**
     * @inheritDoc
     */
    protected function _construct()
    {
        // Define a dummy table and id field since we're not actually using the database
        $this->_init('dummy_table', 'entity_id');
    }
} 

--------------------------------------------------
File End
--------------------------------------------------


./Model/ResourceModel/Sync/Collection.php
File type: .php
<?php


namespace Convertcart\Analytics\Model\ResourceModel\Sync;

use Convertcart\Analytics\Model\Sync;
use Convertcart\Analytics\Model\ResourceModel\Sync as SyncResourceModel;
use Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection;

class Collection extends AbstractCollection
{
    public function _construct()
    {
        $this->_init(Sync::class, SyncResourceModel::class);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./view/frontend/templates/init.phtml
File type: .phtml
<?php
// @codingStandardsIgnoreFile
$clientKey = htmlspecialchars($clientKey, ENT_QUOTES, 'UTF-8');
?>
<!-- ConvertCart Initialization Started -->
<script type="text/javascript">
(function() {
    function loadScript(src) {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = src;
        script.async = true;
        script.onload = function() {
            console.log('ConvertCart script loaded:', src);
        };
        script.onerror = function() {
            console.error('Failed to load ConvertCart script:', src);
        };
        document.head.appendChild(script);
    }

    var scriptSrc = "//cdn.convertcart.com/<?php echo $clientKey; ?>.js";

    if (typeof require !== 'undefined') {
        require([scriptSrc], function() {
            console.log('ConvertCart loaded via RequireJS');
        }, function() {
            loadScript(scriptSrc);
        });
    } else {
        loadScript(scriptSrc);
    }
})();
</script>
<!-- ConvertCart Initialization Ended -->


--------------------------------------------------
File End
--------------------------------------------------


./view/frontend/templates/event.phtml
File type: .phtml
<?php
// @codingStandardsIgnoreFile
?>
<!-- ConvertCart Event-->
<script type='text/javascript' data-cfasync="false">
    window.ccLayer = window.ccLayer || [];
    ccLayer.push(<?php echo $eventData; ?>);
</script>
<!-- ConvertCart Event -->

--------------------------------------------------
File End
--------------------------------------------------


./Setup/UpgradeSchema.php
File type: .php
<?php

namespace Convertcart\Analytics\Setup;

use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\DB\Ddl\Table;

class UpgradeSchema implements \Magento\Framework\Setup\UpgradeSchemaInterface
{
    /**
     * Create table if not exists
     *
     * @param SchemaSetupInterface $setup
     * @param ModuleContextInterface $context
     */
    public function upgrade(SchemaSetupInterface $setup, ModuleContextInterface $context)
    {
        $setup->startSetup();
        $conn = $setup->getConnection();
        if ($setup->getConnection()->isTableExists('convertcart_sync_activity') != true) {
            $tableName = $setup->getTable('convertcart_sync_activity');
            if ($conn->isTableExists($tableName) != true) {

                $table = $conn->newTable($tableName)
                                ->addColumn(
                                    'id',
                                    Table::TYPE_INTEGER,
                                    null,
                                    ['unsigned'=>true,'nullable'=>false,'auto_increment' => true,'primary'=>true]
                                )
                                ->addColumn(
                                    'item_id',
                                    Table::TYPE_INTEGER,
                                    null,
                                    ['nullable'=>false]
                                )
                                ->addColumn(
                                    'type',
                                    Table::TYPE_TEXT,
                                    55,
                                    ['nullable'=>false]
                                )
                                ->addColumn(
                                    'created_at',
                                    Table::TYPE_TIMESTAMP,
                                    null,
                                    ['nullable' => false, 'default' => Table::TIMESTAMP_INIT]
                                )
                                ->setOption('charset', 'utf8');
                $conn->createTable($table);
            }
        }
        $setup->endSetup();
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Setup/Uninstall.php
File type: .php
<?php

namespace Convertcart\Analytics\Setup;

use Magento\Framework\Setup\UninstallInterface;
use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\DB\Ddl\Table;
use Magento\Framework\Exception\LocalizedException;

class Uninstall implements UninstallInterface
{
    /**
     * Drop table and triggers
     *
     * @param SchemaSetupInterface $setup
     * @param ModuleContextInterface $context
     * @throws LocalizedException
     */
    public function uninstall(SchemaSetupInterface $setup, ModuleContextInterface $context)
    {
        $conn = $setup->getConnection();
        $tableName = $setup->getTable('convertcart_sync_activity');

        // Drop the table if it exists
        if ($conn->isTableExists($tableName)) {
            $conn->dropTable($tableName);
        }

        // Array of trigger names to be dropped
        $triggerNames = [
            'update_cpe_after_insert_catalog_product_entity_decimal',
            'update_cpe_after_update_catalog_product_entity_decimal',
            'update_cpe_after_insert_catalog_inventory_stock_item',
            'update_cpe_after_update_catalog_inventory_stock_item'
        ];

        // Loop through each trigger
        foreach ($triggerNames as $triggerName) {
            // Check if the trigger exists
            $triggerExists = $conn->fetchOne(
                "SELECT TRIGGER_NAME FROM information_schema.TRIGGERS 
                 WHERE TRIGGER_NAME = :trigger_name AND TRIGGER_SCHEMA = DATABASE()",
                ['trigger_name' => $triggerName]
            );

            // If the trigger exists, drop it
            if ($triggerExists) {
                try {
                    $conn->query("DROP TRIGGER IF EXISTS $triggerName");
                } catch (\Exception $e) {
                    // Handle exception if trigger dropping fails
                    throw new LocalizedException(__('Error dropping trigger %1: %2', $triggerName, $e->getMessage()));
                }
            }
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Setup/InstallSchema.php
File type: .php
<?php

namespace Convertcart\Analytics\Setup;

use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\DB\Ddl\Table;


class InstallSchema implements \Magento\Framework\Setup\InstallSchemaInterface
{
    /**
     * Create table and triggers
     *
     * @param SchemaSetupInterface $setup
     * @param ModuleContextInterface $context
     */
    public function install(SchemaSetupInterface $setup, ModuleContextInterface $context)
    {
        $setup->startSetup();
        $conn = $setup->getConnection();
        $tableName = $setup->getTable('convertcart_sync_activity');

        if (!$conn->isTableExists($tableName)) {
            $table = $conn->newTable($tableName)
                ->addColumn(
                    'id',
                    Table::TYPE_INTEGER,
                    null,
                    ['unsigned' => true, 'nullable' => false, 'auto_increment' => true, 'primary' => true]
                )
                ->addColumn(
                    'item_id',
                    Table::TYPE_INTEGER,
                    null,
                    ['nullable' => false]
                )
                ->addColumn(
                    'type',
                    Table::TYPE_TEXT,
                    55,
                    ['nullable' => false]
                )
                ->addColumn(
                    'created_at',
                    Table::TYPE_TIMESTAMP,
                    null,
                    ['nullable' => false, 'default' => Table::TIMESTAMP_INIT]
                )
                ->setOption('charset', 'utf8');
            $conn->createTable($table);
        }

        $triggers = [
            'update_cpe_after_insert_catalog_product_entity_decimal' => "
                CREATE TRIGGER update_cpe_after_insert_catalog_product_entity_decimal
                AFTER INSERT ON " . $setup->getTable('catalog_product_entity_decimal') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.entity_id;",
            'update_cpe_after_update_catalog_product_entity_decimal' => "
                CREATE TRIGGER update_cpe_after_update_catalog_product_entity_decimal
                AFTER UPDATE ON " . $setup->getTable('catalog_product_entity_decimal') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.entity_id;",
            'update_cpe_after_insert_catalog_inventory_stock_item' => "
                CREATE TRIGGER update_cpe_after_insert_catalog_inventory_stock_item
                AFTER INSERT ON " . $setup->getTable('cataloginventory_stock_item') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.product_id;",
            'update_cpe_after_update_catalog_inventory_stock_item' => "
                CREATE TRIGGER update_cpe_after_update_catalog_inventory_stock_item
                AFTER UPDATE ON " . $setup->getTable('cataloginventory_stock_item') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.product_id;"
        ];

        // Loop through each trigger
        foreach ($triggers as $triggerName => $triggerSql) {
            // Check if the trigger already exists
            $triggerExists = $conn->fetchOne(
                "SELECT TRIGGER_NAME FROM information_schema.TRIGGERS 
                 WHERE TRIGGER_NAME = :trigger_name AND TRIGGER_SCHEMA = DATABASE()",
                ['trigger_name' => $triggerName]
            );

            // If the trigger does not exist, create it
            if (!$triggerExists) {
                try {
                    $conn->query($triggerSql);
                } catch (\Exception $e) {
                    // Handle exception if trigger creation fails
                    throw new \RuntimeException('Error creating trigger: ' . $e->getMessage());
                }
            }
        }

        $setup->endSetup(); // Finalize the setup process
    }
}

--------------------------------------------------
File End
--------------------------------------------------


./Setup/UpgradeData.php
File type: .php
<?php
namespace Vendor\Module\Setup;

use Magento\Framework\Setup\ModuleDataSetupInterface;
use Magento\Framework\Setup\UpgradeDataInterface;
use Magento\Framework\Setup\ModuleContextInterface;

/* 
    No data updates, 
    but the presence of this file ensures 
    Magento updates data_version of setup_module table
*/

class UpgradeData implements UpgradeDataInterface
{
    public function upgrade(ModuleDataSetupInterface $setup, ModuleContextInterface $context)
    {
        $setup->startSetup();
        $setup->endSetup();
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./etc/webapi.xml
File type: .xml
<?xml version="1.0"?>
<routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Webapi:etc/webapi.xsd">
	<route url="/V1/cc/sync-activity/:limit/:id/:type" method="GET">
		<service class="Convertcart\Analytics\Api\SyncRepositoryInterface" method="getDeletedProduct"/>
		<resources>
			<resource ref="Magento_Catalog::products"/>
		</resources>
	</route>
	<route url="/V1/cc/plugin-info" method="GET">
		<service class="Convertcart\Analytics\Api\PluginInfoInterface" method="getPluginInfo"/>
		<resources>
			<resource ref="anonymous"/>
		</resources>
	</route>
</routes>

--------------------------------------------------
File End
--------------------------------------------------


./etc/di.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../../lib/internal/Magento/Framework/ObjectManager/etc/config.xsd">
    <type name="Convertcart\Analytics\Logger\Handler">
        <arguments>
            <argument name="filesystem" xsi:type="object">Magento\Framework\Filesystem\Driver\File</argument>
        </arguments>
    </type>
    <type name="Convertcart\Analytics\Logger\Logger">
        <arguments>
            <argument name="name" xsi:type="string">myLoggerName</argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Convertcart\Analytics\Logger\Handler</item>
            </argument>
        </arguments>
    </type>
    <preference for="Convertcart\Analytics\Api\SyncRepositoryInterface" type="Convertcart\Analytics\Model\Api\SyncApi"/>
    <preference for="Convertcart\Analytics\Api\Data\SyncInterface" type="Convertcart\Analytics\Model\SyncManagement" />
    <preference for="Convertcart\Analytics\Api\PluginInfoInterface" type="Convertcart\Analytics\Model\Api\PluginInfo" />
    <preference for="Convertcart\Analytics\Api\Data\PluginInfoInterface" type="Convertcart\Analytics\Model\Data\PluginInfo" />
    <virtualType name="Convertcart\Analytics\Model\ResourceModel\PluginInfo\Collection" type="Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection">
        <arguments>
            <argument name="model" xsi:type="string">Convertcart\Analytics\Model\Data\PluginInfo</argument>
            <argument name="resourceModel" xsi:type="string">Convertcart\Analytics\Model\ResourceModel\PluginInfo</argument>
        </arguments>
    </virtualType>
</config>


--------------------------------------------------
File End
--------------------------------------------------


./etc/module.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
    <module name="Convertcart_Analytics" setup_version="1.0.8"/>
</config>

--------------------------------------------------
File End
--------------------------------------------------


./etc/adminhtml/events.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd">
    <event name="catalog_product_delete_after_done">
        <observer name="convertcart_deleted_product" instance="Convertcart\Analytics\Observer\ProcessProductAfterDeleteEventObserver"/>
    </event>
     <event name="catalog_category_delete_after_done">
        <observer name="convertcart_deleted_category" instance="Convertcart\Analytics\Observer\ProcessCategoryAfterDeleteEventObserver"/>
    </event>
</config>


--------------------------------------------------
File End
--------------------------------------------------


./etc/adminhtml/system.xml
File type: .xml
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Config:etc/system_file.xsd">
    <system>
        <tab id="convertcart_config" translate="label" sortOrder="1000">
            <label>Convertcart</label>
        </tab>
        <section id="convertcart" translate="label" sortOrder="100" showInDefault="1" showInWebsite="1" showInStore="1">
            <class>separator-top</class>
            <label>Convertcart Configuration</label>
            <tab>convertcart_config</tab>
            <resource>Convertcart_Analytics::config</resource>
            <group id="configuration" translate="label" sortOrder="10" showInDefault="1" showInWebsite="1" showInStore="1">
                <label>Convertcart Configuration</label>
                <comment></comment>
                <field id="domainid" translate="label" sortOrder="1" showInDefault="1" showInWebsite="1" showInStore="1">
                    <label>Domain Id</label>
                    <comment>Contact ConvertCart to get this key.</comment>
                </field>
            </group>
        </section>
    </system>
</config>

--------------------------------------------------
File End
--------------------------------------------------


./etc/frontend/events.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd">
    <event name="layout_render_before">
        <observer name="Convertcart_Analytics" instance="Convertcart\Analytics\Observer\AddScript"/>
    </event>
    <event name="controller_action_postdispatch_cms_index_index">
        <observer name="convertcart_analytics_homepage_viewed" instance="Convertcart\Analytics\Observer\HomepageViewed"/>
    </event>
    <event name="controller_action_predispatch_cms_page_view">
        <observer name="convertcart_analytics_contentpage_viewed" instance="Convertcart\Analytics\Observer\ContentpageViewed"/>
    </event>
    <event name="controller_action_postdispatch_catalog_product_view">
        <observer name="convertcart_analytics_product_viewed" instance="Convertcart\Analytics\Observer\Catalog\ProductViewed"/>
    </event>
    <event name="controller_action_postdispatch_catalog_category_view">
        <observer name="convertcart_analytics_category_viewed" instance="Convertcart\Analytics\Observer\Catalog\CategoryViewed"/>
    </event>
    <event name="search_query_load_after">
        <observer name="convertcart_analytics_products_searched" instance="Convertcart\Analytics\Observer\ProductsSearched"/>
    </event>
    <event name="controller_action_predispatch_checkout_cart_index">
        <observer name="convertcart_analytics_cart_viewed" instance="Convertcart\Analytics\Observer\Cart\CartViewed"/>
    </event>
    <event name="controller_action_predispatch_checkout_index_index">
        <observer name="convertcart_analytics_checkout_viewed" instance="Convertcart\Analytics\Observer\Cart\CheckoutViewed"/>
    </event>
    <event name="checkout_onepage_controller_success_action">
        <observer name="convertcart_analytics_order_completed" instance="Convertcart\Analytics\Observer\Cart\OrderCompleted"/>
    </event>
    <event name="customer_register_success">
        <observer name="convertcart_analytics_customer_registered" instance="Convertcart\Analytics\Observer\Customer\CustomerRegistered"/>
    </event>
    <event name="customer_login">
        <observer name="convertcart_analytics_logged_in" instance="Convertcart\Analytics\Observer\Customer\LoggedIn"/>
    </event>
    <event name="customer_logout">
        <observer name="convertcart_analytics_logged_out" instance="Convertcart\Analytics\Observer\Customer\LoggedOut"/>
    </event>
</config>


--------------------------------------------------
File End
--------------------------------------------------


--------------------------------------------------
File End
--------------------------------------------------


./README.md
File type: .md
# Convert Cart Magento 2 Plugin

![Magento 2](https://img.shields.io/badge/Magento-2-brightgreen.svg)
![License](https://img.shields.io/badge/license-Proprietary-red.svg)
[![Packagist](https://img.shields.io/packagist/v/convert-cart/analytics.svg)](https://packagist.org/packages/convert-cart/analytics)

## Table of Contents

- [Introduction](#introduction)
- [Features](#features)
- [Installation](#installation)
  - [Composer Installation](#composer-installation)
  - [Manual Installation](#manual-installation)
- [Configure Domain Id](#configure-domain-id)
- [Troubleshooting](#troubleshooting)
- [Contact](#contact)

## Introduction

Welcome to the Magento 2 Plugin by Convert Cart. This plugin integrates seamlessly with Magento 2 ecommerce websites, enabling the tracking of user behavior. Additionally, it synchronizes crucial data such as product catalogs, order histories, customer profiles, and category information to our servers on a regular basis. This synchronization powers our recommendation engine, providing personalized and data-driven insights to enhance your ecommerce operations.

## Features

- Script injection on the frontend for user behavior tracking.
- Token generation for synchronizing product/order/customer/category data to Convert Cart servers for recommendations.
- Product deletion tracking to avoid recommending deleted products to the visitors of the store.

## Installation

### Composer Installation

1. Run the following command in the root folder of your Magento installation when the domain is added in app.convertcart.com (for production):

    ```sh
    composer require convert-cart/analytics
    ```

    If you're intending to setting up a domain in app-beta.convertcart.com (for beta testing), please use tag name followed by the suffix `-beta` like `1.0.8-beta`. The command will be like,

    ```sh
    composer require convert-cart/analytics:1.0.8-beta
    ```

    If you wanted to know the exact changes that's needed to setup a beta server on a production tag, you can take a look into this [commit](https://github.com/convert-cart/magento2-plugin/commit/7fcd6766d00aa0c1f9c24365864a5738bc893252).

2. After installing via Composer, run the following commands from the Magento root directory:

    ```sh
    php bin/magento maintenance:enable
    php bin/magento setup:upgrade
    php bin/magento setup:di:compile
    php bin/magento setup:static-content:deploy -f
    php bin/magento maintenance:disable
    php bin/magento cache:flush
    ```

### Manual Installation

1. Download the latest version of the plugin from the [releases](https://github.com/convert-cart/magento2-plugin/releases) page.
2. Extract the downloaded archive.
3. Upload the contents to the `app/code/convert-cart/analytics` directory of your Magento installation.
4. Run the following commands from the Magento root directory:

    ```sh
    bin/magento module:enable Convertcart_Analytics
    bin/magento setup:upgrade
    bin/magento setup:di:compile
    bin/magento setup:static-content:deploy -f
    bin/magento cache:clean
    bin/magento cache:flush
    ```

## Configure Domain Id

Please reach out to your Customer Support Manager to Configure your domain with Convert Cart.

## Troubleshooting

If you encounter issues, try the following steps:

1. Ensure the plugin is enabled: `bin/magento module:status Convertcart_Analytics`
2. Clear Magento cache: `bin/magento cache:clean`
3. Check the logs in `var/log` for any error messages.

## Uninstall

Please use the following command to uninstall the plugin and delete all the tables and settings related to the plugin,

      bin/magento module:uninstall Convertcart_Analytics

### Setting up folder & file permissions,

If you encounter folder permission issues on folder such as cache, please use the following commands to set the appropriate permissions for public files and directories:
- Goto magento2 directory

      find . -type f -exec chmod 644 {} \;
      find . -type d -exec chmod 755 {} \;
      find var pub/static pub/media app/etc generated/ -type f -exec chmod g+w {} \;
      find var pub/static pub/media app/etc generated/ -type d -exec chmod g+ws {} \;
      chown -R <magento user>:<web server group> . #(usually by default magento user and we user used to be www-data, check it with your server administrator)
      chmod u+x bin/magento

- 644 sets files to read and write for the owner, and read-only for group and others.
- 755 sets directories to read, write, and execute for the owner, and read and execute for group and others.

## Contact

Please contact [sales@convertcart.com](mailto:sales@convertcart.com) if any issues occur during the integration process.

## For Development

After making any changes to the master branch, you can create new version tags (for beta and production) by running the following command:

      sh tagger.sh VERSION_NUMBER

Make sure to replace `VERSION_NUMBER` with the actual version number you want to create.

--------------------------------------------------
File End
--------------------------------------------------


./composer.json
File type: .json
{
    "name": "convert-cart/analytics",
    "description": "Magento 2 plugin to integrate convertcart",
    "type": "magento2-module",
    "version": "1.0.8",
    "license": [
      "OSL-3.0",
      "AFL-3.0"
    ],
    "require": {
      "php": "~5.5.0|~5.6.0|^7.0|^8.0"
    },
    "maintainers": [
      {
        "name": "Udhay kumar",
        "email": "udhaya@convertcart.com",
        "homepage": "https://www.convertcart.com/"
      }
    ],
    "authors": [
      {
        "name": "Aamir",
        "email": "aamir@convertcart.com",
        "homepage": "https://www.convertcart.com/",
        "role": "Developer"
      },
      {
        "name": "Naveen SK",
        "email": "naveena@convertcart.com",
        "homepage": "https://www.convertcart.com/",
        "role": "Developer"
      },
      {
        "name": "Udhay kumar",
        "email": "udhaya@convertcart.com",
        "homepage": "https://www.convertcart.com/",
        "role": "Developer"
      }
    ],
    "autoload": {
      "files": [ "registration.php" ],
      "psr-4": {
        "Convertcart\\Analytics\\": ""
      }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./registration.php
File type: .php
<?php
 
\Magento\Framework\Component\ComponentRegistrar::register(
    \Magento\Framework\Component\ComponentRegistrar::MODULE,
    'Convertcart_Analytics',
    __DIR__
);

--------------------------------------------------
File End
--------------------------------------------------


./Helper/Data.php
File type: .php
<?php
namespace Convertcart\Analytics\Helper;

use Magento\Framework\Module\ModuleListInterface;

class Data extends \Magento\Framework\App\Helper\AbstractHelper
{

    /**
     * @var \Magento\Framework\App\Config\ScopeConfigInterface
     */
    protected $scopeConfig;

    protected $_moduleList;

    public function __construct(
        \Magento\Framework\App\Helper\Context $context,
        \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
        ModuleListInterface $moduleList
    ) {
        $this->scopeConfig = $scopeConfig;
        $this->_moduleList = $moduleList;
        parent::__construct(
            $context
        );
    }

    public function getEventType($event)
    {
        $eventMap = [
            'homepageViewed'      =>  'homepageViewed',
            'contentPageViewed'   =>  'contentPageViewed',
            'categoryViewed'      =>  'categoryViewed',
            'productViewed'       =>  'productViewed',
            'productsSearched'    =>  'productsSearched',
            'registered'          =>  'registered',
            'loggedIn'            =>  'loggedIn',
            'loggedOut'           =>  'loggedOut',
            'cartViewed'          =>  'cartViewed',
            'checkoutViewed'      =>  'checkoutViewed',
            'cartUpdated'         =>  'cartUpdated',
            'productAdded'        =>  'productAdded',
            'productRemoved'      =>  'productRemoved',
            'orderCompleted'      =>  'orderCompleted',
            'couponApplied'       =>  'couponApplied',
            'couponDenied'        =>  'couponDenied',
            'couponRemoved'       =>  'couponRemoved',
        ];
        if (!empty($eventMap[$event])) {
            return $eventMap[$event];
        } else {
            return 'default';
        }
    }

    public function isEnabled()
    {
        if ($this->getClientKey()) {
            return 1;
        } else {
            return false;
        }
    }

    public function getClientKey()
    {
        $clientKey = $this->scopeConfig->getValue('convertcart/configuration/domainid', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
        if (empty($clientKey)) {
            return false;
        } else {
            return $clientKey;
        }
    }

    public function getModuleVersion()
    {
        $ccModule = $this->_moduleList
            ->getOne('Convertcart_Analytics');
        return !empty($ccModule['setup_version']) ? $ccModule['setup_version'] : null;
    }

    public function sanitizeParam($param)
    {
        if ($param === null) {
            return null;
        }
        return strip_tags($param);
    }
}

--------------------------------------------------
File End
--------------------------------------------------


./Logger/Logger.php
File type: .php
<?php
namespace Convertcart\Analytics\Logger;

class Logger extends \Monolog\Logger
{
}

--------------------------------------------------
File End
--------------------------------------------------


./Logger/Handler.php
File type: .php
<?php
namespace Convertcart\Analytics\Logger;

use Monolog\Logger;

class Handler extends \Magento\Framework\Logger\Handler\Base
{
    /**
     * Logging level
     * @var int
     */
    protected $loggerType = Logger::INFO;

    /**
     * File name
     * @var string
     */
    protected $fileName = '/var/log/cc_analytics.log';
}


--------------------------------------------------
File End
--------------------------------------------------


./Api/SyncRepositoryInterface.php
File type: .php
<?php

namespace Convertcart\Analytics\Api;

use Convertcart\Analytics\Api\Data\SyncInterface;

interface SyncRepositoryInterface
{
    /**
     * Post Api data.
     *
     * @api
     *
     * @param int $limit
     * @param int $id
     * @param string $type
     *
     * @return array
     */
    public function getDeletedProduct($limit, $id, $type);
}


--------------------------------------------------
File End
--------------------------------------------------


./Api/PluginInfoInterface.php
File type: .php
<?php
namespace Convertcart\Analytics\Api;

interface PluginInfoInterface
{
    /**
     * Get plugin information.
     *
     * @api
     * @return \Convertcart\Analytics\Model\Data\PluginInfo
     */
    public function getPluginInfo();
}


--------------------------------------------------
File End
--------------------------------------------------


./Api/Data/PluginInfoInterface.php
File type: .php
<?php
namespace Convertcart\Analytics\Api\Data;

interface PluginInfoInterface
{
    const VERSION = 'version';
    const TABLES = 'tables';
    const TRIGGERS = 'triggers';

    /**
     * Get version
     *
     * @return string
     */
    public function getVersion();

    /**
     * Set version
     *
     * @param string $version
     * @return $this
     */
    public function setVersion($version);

    /**
     * Get tables
     *
     * @return array<string,bool>
     */
    public function getTables();

    /**
     * Set tables
     *
     * @param array<string,bool> $tables
     * @return $this
     */
    public function setTables($tables);

    /**
     * Get triggers
     *
     * @return array<string,bool>
     */
    public function getTriggers();

    /**
     * Set triggers
     *
     * @param array<string,bool> $triggers
     * @return $this
     */
    public function setTriggers($triggers);
} 

--------------------------------------------------
File End
--------------------------------------------------


./Api/Data/SyncInterface.php
File type: .php
<?php
/**
 * Copyright © Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
namespace Convertcart\Analytics\Api\Data;

/**
 * Interface SyncInterface
 * @api
 * @since 100.0.2
 */
interface SyncInterface extends \Magento\Framework\Api\ExtensibleDataInterface
{
    /**#@+
     * Constants for keys of data array. Identical to the name of the getter in snake case
     */
    public const ID = 'id';
    public const ITEM_ID = 'item_id';
    public const TYPE   = 'type';
    public const CREATED_AT = 'created_at';
    /**
     * Get ID.
     *
     * @return int
     */
    public function getId();

    /**
     * Set ID.
     *
     * @param integer $id
     *
     * @return $this
     */
    public function setId($id);

    /**
     * Get type.
     *
     * @return string
     */
    public function getType();
 
    /**
     * Set type.
     *
     * @param string $type
     *
     * @return $this
     */
    public function setType($type);

    /**
     * Get itemid.
     *
     * @return string
     */
    public function getItemId();
 
    /**
     * Set itemId.
     *
     * @param string $itemId
     *
     * @return $this
     */
    public function setItemId($itemId);
  
    /**
     * Get createdAt.
     *
     * @return string
     */
    public function getCreatedAt();
 
    /**
     * Set createdAt.
     *
     * @param string $createdAt
     *
     * @return $this
     */
    public function setCreatedAt($createdAt);
}


--------------------------------------------------
File End
--------------------------------------------------


./.git/packed-refs
File type: 
# pack-refs with: peeled fully-peeled sorted 
02d7d9a1e1b86643340ffb47c4a857fed6a74936 refs/remotes/origin/master
351bc48dfd30391e7e0762b29b1e5e16f9b2f7a1 refs/remotes/origin/updatingInstallSchema
46c34e553def623eb402aa22367502c6f0b06d02 refs/tags/1.0.1
^7527d066b0206d22477fe061f963e450c445e110
a9e614c888a64785a40e0463faf6dcdd0ce7e2e7 refs/tags/1.0.10
^b720f7532d1dbc43200648fbc1c701a7bbf8c1f7
6cc6cf57dcef2c2342e8b15956ff1bf7fdfd1b61 refs/tags/1.0.2
43f57064f80097c4a628374e3e081b155108f138 refs/tags/1.0.3
^f0b6a7b6b146e7466a26909770e594387c038917
4ba0ed9d4fc6caecb718979347dfe21c6218d550 refs/tags/1.0.4
9167999c5779db8ddd555ed39d91c497e31b1486 refs/tags/1.0.5
91474c0f164f9bcd5ceba18586c8d1e8aa2de652 refs/tags/1.0.6
^e84b76e61a24a1f9b69a04002acff0d57fff0c50
fb0547337d1402fff14cf4e4ea15fe496d88d4c8 refs/tags/1.0.6-beta
^7fcd6766d00aa0c1f9c24365864a5738bc893252
b8b4ea65d6477789e3b24f9ff503c3909d8d170f refs/tags/1.0.7
^12a5b7501c73e64f08e9dd27b840905947e45d9f
1bca03c976f3fae3b54bdb5e23ebbabe953afc02 refs/tags/1.0.7-beta
10be62854bc3c6d86aa5ad0e60e7b2e7298385e5 refs/tags/1.0.8
^8936ad2bb51feb5f0fe97b9e7c64bff05eea2373
aaabc1779ef48e3152d1bf0a024ceffc61f455c7 refs/tags/1.0.8-beta
^544e919a0181bb44faec52db0e6601b12087fd8a
b73bd5243be1d194cbb0ec98eebaf1600be4dfad refs/tags/1.0.9
^0de6415eed56c9cb7cd9980cc3197264af4ebeb7
68c6c7605077280b6dfc36b802c24c85aa20fbeb refs/tags/1.0.9-beta
^2566be2eb7f9f43efe8657a21e10c9d57d175931


--------------------------------------------------
File End
--------------------------------------------------


./.git/FETCH_HEAD
File type: 
34f6dad690d74926791a8652a9bad62706dafaf5		branch 'master' of github.com:convert-cart/magento2-plugin
097e73f464b266c9b4c890db32296a308421e2a1	not-for-merge	branch 'adding_logs' of github.com:convert-cart/magento2-plugin
3781a4f7333c3f041153d0f16916487ac98a862a	not-for-merge	branch 'fixing_return' of github.com:convert-cart/magento2-plugin
c81d132c106ee6919488db167f56f182b302e69c	not-for-merge	branch 'fixing_return_schema' of github.com:convert-cart/magento2-plugin
fb2bb8426a12c58c6a36cb2d671a629d4c2cd49f	not-for-merge	branch 'logs_added' of github.com:convert-cart/magento2-plugin
0ef358be0181adc3be68f3044a9c541313cff9a8	not-for-merge	branch 'plugin_fix' of github.com:convert-cart/magento2-plugin
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c	not-for-merge	branch 'plugin_update' of github.com:convert-cart/magento2-plugin
8e70db2e254d5fbb06107ee09adb54406776c82a	not-for-merge	branch 'return_fix' of github.com:convert-cart/magento2-plugin
9d03d3cb16eed7650e39c85c1abf20ff48084e7d	not-for-merge	branch 'sample_fix' of github.com:convert-cart/magento2-plugin
56619506609c4036931b17c179f16e68fb038bdf	not-for-merge	branch 'test_return_feature' of github.com:convert-cart/magento2-plugin
351bc48dfd30391e7e0762b29b1e5e16f9b2f7a1	not-for-merge	branch 'updatingInstallSchema' of github.com:convert-cart/magento2-plugin
9a2d90a5247be294b0ae2cb212a476a9d880c8e1	not-for-merge	branch 'updating_di_file' of github.com:convert-cart/magento2-plugin
334bba386c8a9409df807a3d09e778fa5b27f87b	not-for-merge	branch 'updating_pluginInterface' of github.com:convert-cart/magento2-plugin
eb3853596eebebf8cba04f8e33ebbe71f952b90e	not-for-merge	branch 'updating_plugininfo' of github.com:convert-cart/magento2-plugin
b95a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c	not-for-merge	branch 'updating_return' of github.com:convert-cart/magento2-plugin


--------------------------------------------------
File End
--------------------------------------------------


./.git/ORIG_HEAD
File type: 
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c


--------------------------------------------------
File End
--------------------------------------------------


./.git/config
File type: 
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
[remote "origin"]
	url = git@github.com:convert-cart/magento2-plugin.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
	vscode-merge-base = origin/master
[branch "sample_fix"]
	remote = origin
	merge = refs/heads/sample_fix
	vscode-merge-base = origin/sample_fix


--------------------------------------------------
File End
--------------------------------------------------


./.git/description
File type: 
Unnamed repository; edit this file 'description' to name the repository.


--------------------------------------------------
File End
--------------------------------------------------


./.git/HEAD
File type: 
ref: refs/heads/sample_fix


--------------------------------------------------
File End
--------------------------------------------------


./.git/COMMIT_EDITMSG
File type: 
Fix for response structure issue


--------------------------------------------------
File End
--------------------------------------------------


./.git/info/exclude
File type: 
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/HEAD
File type: 
0000000000000000000000000000000000000000 02d7d9a1e1b86643340ffb47c4a857fed6a74936 Udhay Kumar <udhaya@convertcart.com> 1739788858 +0530	clone: from github.com:convert-cart/magento2-plugin.git
02d7d9a1e1b86643340ffb47c4a857fed6a74936 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739788948 +0530	pull origin master: Fast-forward
89d2e811122c7db013db4699ccef0c65743e2f0a 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739789062 +0530	checkout: moving from master to master
89d2e811122c7db013db4699ccef0c65743e2f0a 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739789065 +0530	checkout: moving from master to temp-tagging-branch
89d2e811122c7db013db4699ccef0c65743e2f0a 656f85961b8b57fcd5b5631787afd28c3408f3c9 Udhay Kumar <udhaya@convertcart.com> 1739789071 +0530	commit: Release beta version 1.0.11-beta
656f85961b8b57fcd5b5631787afd28c3408f3c9 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739789074 +0530	checkout: moving from temp-tagging-branch to master
89d2e811122c7db013db4699ccef0c65743e2f0a d8cad03c0fcea876a411fd805ad69d6409a6e51e Udhay Kumar <udhaya@convertcart.com> 1740481726 +0530	pull origin master: Fast-forward
d8cad03c0fcea876a411fd805ad69d6409a6e51e c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740481932 +0530	commit: Fix - data_version column of setup_module not getting updated
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482006 +0530	checkout: moving from master to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482009 +0530	checkout: moving from master to temp-tagging-branch
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c f8435c1f39bbfdcbd4cadcca7ca57f5442c7bbcd Udhay Kumar <udhaya@convertcart.com> 1740482020 +0530	commit: Release version 1.0.11
f8435c1f39bbfdcbd4cadcca7ca57f5442c7bbcd 7a8f773a67ac51ca93b819934c4f81fdb2f809cd Udhay Kumar <udhaya@convertcart.com> 1740482020 +0530	commit: Release beta version 1.0.11-beta
7a8f773a67ac51ca93b819934c4f81fdb2f809cd c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482020 +0530	checkout: moving from temp-tagging-branch to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482064 +0530	checkout: moving from master to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482067 +0530	checkout: moving from master to temp-tagging-branch
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 033e2604386d623f522cde5b9a4a49b6478f56cc Udhay Kumar <udhaya@convertcart.com> 1740482091 +0530	commit: Release version 1.0.11
033e2604386d623f522cde5b9a4a49b6478f56cc c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482092 +0530	checkout: moving from temp-tagging-branch to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 34f6dad690d74926791a8652a9bad62706dafaf5 Udhay Kumar <udhaya@convertcart.com> 1741006066 +0530	pull origin master: Fast-forward
34f6dad690d74926791a8652a9bad62706dafaf5 9d03d3cb16eed7650e39c85c1abf20ff48084e7d Udhay Kumar <udhaya@convertcart.com> 1741006241 +0530	checkout: moving from master to sample_fix
9d03d3cb16eed7650e39c85c1abf20ff48084e7d 39099ca1214fbca213a03ad62137b69b9b5a4836 Udhay Kumar <udhaya@convertcart.com> 1741007870 +0530	commit: Fix for response structure issue
39099ca1214fbca213a03ad62137b69b9b5a4836 b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 Udhay Kumar <udhaya@convertcart.com> 1741008524 +0530	commit: Fix for response structure issue
b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 d85f1a3757e543aaa0a63016cbb80c4752e3620d Udhay Kumar <udhaya@convertcart.com> 1741009018 +0530	commit: Fix for response structure issue
d85f1a3757e543aaa0a63016cbb80c4752e3620d c465a0e9da5c8dd64ca48da102d78f0a0d1f74da Udhay Kumar <udhaya@convertcart.com> 1741009495 +0530	commit: Fix for response structure issue
c465a0e9da5c8dd64ca48da102d78f0a0d1f74da 4467a87c8a8ef020bec29fe7751e86600be76724 Udhay Kumar <udhaya@convertcart.com> 1741330396 +0530	commit: Fix for response structure issue
4467a87c8a8ef020bec29fe7751e86600be76724 a7fafba0520173b68d2345e8370102c9d3714a47 Udhay Kumar <udhaya@convertcart.com> 1741331225 +0530	commit: Fix for response structure issue
a7fafba0520173b68d2345e8370102c9d3714a47 83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 Udhay Kumar <udhaya@convertcart.com> 1741331887 +0530	commit: Fix for response structure issue
83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 9324e599072a83b3fa729f8ae50b52955e3aa347 Udhay Kumar <udhaya@convertcart.com> 1741332329 +0530	commit: Fix for response structure issue
9324e599072a83b3fa729f8ae50b52955e3aa347 03e41b41532ec39281c74723bc3efd20c1a4d5b4 Udhay Kumar <udhaya@convertcart.com> 1741335073 +0530	commit: Fix for response structure issue
03e41b41532ec39281c74723bc3efd20c1a4d5b4 878b26b4bc815fd8bb636369f2a72f0e3f6a2434 Udhay Kumar <udhaya@convertcart.com> 1741336071 +0530	commit: Fix for response structure issue


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/heads/master
File type: 
0000000000000000000000000000000000000000 02d7d9a1e1b86643340ffb47c4a857fed6a74936 Udhay Kumar <udhaya@convertcart.com> 1739788858 +0530	clone: from github.com:convert-cart/magento2-plugin.git
02d7d9a1e1b86643340ffb47c4a857fed6a74936 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739788948 +0530	pull origin master: Fast-forward
89d2e811122c7db013db4699ccef0c65743e2f0a d8cad03c0fcea876a411fd805ad69d6409a6e51e Udhay Kumar <udhaya@convertcart.com> 1740481726 +0530	pull origin master: Fast-forward
d8cad03c0fcea876a411fd805ad69d6409a6e51e c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740481932 +0530	commit: Fix - data_version column of setup_module not getting updated
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 34f6dad690d74926791a8652a9bad62706dafaf5 Udhay Kumar <udhaya@convertcart.com> 1741006066 +0530	pull origin master: Fast-forward


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/heads/sample_fix
File type: 
0000000000000000000000000000000000000000 9d03d3cb16eed7650e39c85c1abf20ff48084e7d Udhay Kumar <udhaya@convertcart.com> 1741006241 +0530	branch: Created from refs/remotes/origin/sample_fix
9d03d3cb16eed7650e39c85c1abf20ff48084e7d 39099ca1214fbca213a03ad62137b69b9b5a4836 Udhay Kumar <udhaya@convertcart.com> 1741007870 +0530	commit: Fix for response structure issue
39099ca1214fbca213a03ad62137b69b9b5a4836 b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 Udhay Kumar <udhaya@convertcart.com> 1741008524 +0530	commit: Fix for response structure issue
b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 d85f1a3757e543aaa0a63016cbb80c4752e3620d Udhay Kumar <udhaya@convertcart.com> 1741009018 +0530	commit: Fix for response structure issue
d85f1a3757e543aaa0a63016cbb80c4752e3620d c465a0e9da5c8dd64ca48da102d78f0a0d1f74da Udhay Kumar <udhaya@convertcart.com> 1741009495 +0530	commit: Fix for response structure issue
c465a0e9da5c8dd64ca48da102d78f0a0d1f74da 4467a87c8a8ef020bec29fe7751e86600be76724 Udhay Kumar <udhaya@convertcart.com> 1741330396 +0530	commit: Fix for response structure issue
4467a87c8a8ef020bec29fe7751e86600be76724 a7fafba0520173b68d2345e8370102c9d3714a47 Udhay Kumar <udhaya@convertcart.com> 1741331225 +0530	commit: Fix for response structure issue
a7fafba0520173b68d2345e8370102c9d3714a47 83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 Udhay Kumar <udhaya@convertcart.com> 1741331887 +0530	commit: Fix for response structure issue
83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 9324e599072a83b3fa729f8ae50b52955e3aa347 Udhay Kumar <udhaya@convertcart.com> 1741332329 +0530	commit: Fix for response structure issue
9324e599072a83b3fa729f8ae50b52955e3aa347 03e41b41532ec39281c74723bc3efd20c1a4d5b4 Udhay Kumar <udhaya@convertcart.com> 1741335073 +0530	commit: Fix for response structure issue
03e41b41532ec39281c74723bc3efd20c1a4d5b4 878b26b4bc815fd8bb636369f2a72f0e3f6a2434 Udhay Kumar <udhaya@convertcart.com> 1741336071 +0530	commit: Fix for response structure issue


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/master
File type: 
02d7d9a1e1b86643340ffb47c4a857fed6a74936 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739788948 +0530	pull origin master: fast-forward
89d2e811122c7db013db4699ccef0c65743e2f0a d8cad03c0fcea876a411fd805ad69d6409a6e51e Udhay Kumar <udhaya@convertcart.com> 1740481726 +0530	pull origin master: fast-forward
d8cad03c0fcea876a411fd805ad69d6409a6e51e c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740481938 +0530	update by push
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 34f6dad690d74926791a8652a9bad62706dafaf5 Udhay Kumar <udhaya@convertcart.com> 1741006066 +0530	pull origin master: fast-forward


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/fixing_return_schema
File type: 
0000000000000000000000000000000000000000 c81d132c106ee6919488db167f56f182b302e69c Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/return_fix
File type: 
0000000000000000000000000000000000000000 8e70db2e254d5fbb06107ee09adb54406776c82a Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_pluginInterface
File type: 
0000000000000000000000000000000000000000 334bba386c8a9409df807a3d09e778fa5b27f87b Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/logs_added
File type: 
0000000000000000000000000000000000000000 fb2bb8426a12c58c6a36cb2d671a629d4c2cd49f Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_plugininfo
File type: 
0000000000000000000000000000000000000000 eb3853596eebebf8cba04f8e33ebbe71f952b90e Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/sample_fix
File type: 
0000000000000000000000000000000000000000 9d03d3cb16eed7650e39c85c1abf20ff48084e7d Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head
9d03d3cb16eed7650e39c85c1abf20ff48084e7d 39099ca1214fbca213a03ad62137b69b9b5a4836 Udhay Kumar <udhaya@convertcart.com> 1741007883 +0530	update by push
39099ca1214fbca213a03ad62137b69b9b5a4836 b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 Udhay Kumar <udhaya@convertcart.com> 1741008529 +0530	update by push
b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 d85f1a3757e543aaa0a63016cbb80c4752e3620d Udhay Kumar <udhaya@convertcart.com> 1741009023 +0530	update by push
d85f1a3757e543aaa0a63016cbb80c4752e3620d c465a0e9da5c8dd64ca48da102d78f0a0d1f74da Udhay Kumar <udhaya@convertcart.com> 1741009500 +0530	update by push
c465a0e9da5c8dd64ca48da102d78f0a0d1f74da 4467a87c8a8ef020bec29fe7751e86600be76724 Udhay Kumar <udhaya@convertcart.com> 1741330402 +0530	update by push
4467a87c8a8ef020bec29fe7751e86600be76724 a7fafba0520173b68d2345e8370102c9d3714a47 Udhay Kumar <udhaya@convertcart.com> 1741331230 +0530	update by push
a7fafba0520173b68d2345e8370102c9d3714a47 83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 Udhay Kumar <udhaya@convertcart.com> 1741331892 +0530	update by push
83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 9324e599072a83b3fa729f8ae50b52955e3aa347 Udhay Kumar <udhaya@convertcart.com> 1741332335 +0530	update by push
9324e599072a83b3fa729f8ae50b52955e3aa347 03e41b41532ec39281c74723bc3efd20c1a4d5b4 Udhay Kumar <udhaya@convertcart.com> 1741335079 +0530	update by push
03e41b41532ec39281c74723bc3efd20c1a4d5b4 878b26b4bc815fd8bb636369f2a72f0e3f6a2434 Udhay Kumar <udhaya@convertcart.com> 1741336076 +0530	update by push


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/adding_logs
File type: 
0000000000000000000000000000000000000000 097e73f464b266c9b4c890db32296a308421e2a1 Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/plugin_fix
File type: 
0000000000000000000000000000000000000000 0ef358be0181adc3be68f3044a9c541313cff9a8 Udhay Kumar <udhaya@convertcart.com> 1740482012 +0530	fetch --tags: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/plugin_update
File type: 
0000000000000000000000000000000000000000 c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_return
File type: 
0000000000000000000000000000000000000000 b95a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/HEAD
File type: 
0000000000000000000000000000000000000000 02d7d9a1e1b86643340ffb47c4a857fed6a74936 Udhay Kumar <udhaya@convertcart.com> 1739788858 +0530	clone: from github.com:convert-cart/magento2-plugin.git


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/test_return_feature
File type: 
0000000000000000000000000000000000000000 56619506609c4036931b17c179f16e68fb038bdf Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_di_file
File type: 
0000000000000000000000000000000000000000 9a2d90a5247be294b0ae2cb212a476a9d880c8e1 Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/fixing_return
File type: 
0000000000000000000000000000000000000000 3781a4f7333c3f041153d0f16916487ac98a862a Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/heads/master
File type: 
34f6dad690d74926791a8652a9bad62706dafaf5


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/heads/sample_fix
File type: 
878b26b4bc815fd8bb636369f2a72f0e3f6a2434


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/tags/1.0.11
File type: .11
ffbc7080096fe1aaa338d710132c60dfb79b5d7c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/master
File type: 
34f6dad690d74926791a8652a9bad62706dafaf5


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/fixing_return_schema
File type: 
c81d132c106ee6919488db167f56f182b302e69c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/return_fix
File type: 
8e70db2e254d5fbb06107ee09adb54406776c82a


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_pluginInterface
File type: 
334bba386c8a9409df807a3d09e778fa5b27f87b


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/logs_added
File type: 
fb2bb8426a12c58c6a36cb2d671a629d4c2cd49f


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_plugininfo
File type: 
eb3853596eebebf8cba04f8e33ebbe71f952b90e


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/sample_fix
File type: 
878b26b4bc815fd8bb636369f2a72f0e3f6a2434


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/adding_logs
File type: 
097e73f464b266c9b4c890db32296a308421e2a1


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/plugin_fix
File type: 
0ef358be0181adc3be68f3044a9c541313cff9a8


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/plugin_update
File type: 
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_return
File type: 
b95a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/HEAD
File type: 
ref: refs/remotes/origin/master


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/test_return_feature
File type: 
56619506609c4036931b17c179f16e68fb038bdf


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_di_file
File type: 
9a2d90a5247be294b0ae2cb212a476a9d880c8e1


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/fixing_return
File type: 
3781a4f7333c3f041153d0f16916487ac98a862a


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-merge-commit.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-rebase.sample
File type: .sample
#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/commit-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/fsmonitor-watchman.sample
File type: .sample
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-push.sample
File type: .sample
#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/prepare-commit-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/sendemail-validate.sample
File type: .sample
#!/bin/sh

# An example hook script to validate a patch (and/or patch series) before
# sending it via email.
#
# The hook should exit with non-zero status after issuing an appropriate
# message if it wants to prevent the email(s) from being sent.
#
# To enable this hook, rename this file to "sendemail-validate".
#
# By default, it will only check that the patch(es) can be applied on top of
# the default upstream branch without conflicts in a secondary worktree. After
# validation (successful or not) of the last patch of a series, the worktree
# will be deleted.
#
# The following config variables can be set to change the default remote and
# remote ref that are used to apply the patches against:
#
#   sendemail.validateRemote (default: origin)
#   sendemail.validateRemoteRef (default: HEAD)
#
# Replace the TODO placeholders with appropriate checks according to your
# needs.

validate_cover_letter () {
	file="$1"
	# TODO: Replace with appropriate checks (e.g. spell checking).
	true
}

validate_patch () {
	file="$1"
	# Ensure that the patch applies without conflicts.
	git am -3 "$file" || return
	# TODO: Replace with appropriate checks for this patch
	# (e.g. checkpatch.pl).
	true
}

validate_series () {
	# TODO: Replace with appropriate checks for the whole series
	# (e.g. quick build, coding style checks, etc.).
	true
}

# main -------------------------------------------------------------------------

if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
then
	remote=$(git config --default origin --get sendemail.validateRemote) &&
	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
	git config --replace-all sendemail.validateWorktree "$worktree"
else
	worktree=$(git config --get sendemail.validateWorktree)
fi || {
	echo "sendemail-validate: error: failed to prepare worktree" >&2
	exit 1
}

unset GIT_DIR GIT_WORK_TREE
cd "$worktree" &&

if grep -q "^diff --git " "$1"
then
	validate_patch "$1"
else
	validate_cover_letter "$1"
fi &&

if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
then
	git config --unset-all sendemail.validateWorktree &&
	trap 'git worktree remove -ff "$worktree"' EXIT &&
	validate_series
fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/push-to-checkout.sample
File type: .sample
#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/post-update.sample
File type: .sample
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-commit.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/applypatch-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-receive.sample
File type: .sample
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/update.sample
File type: .sample
#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-applypatch.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:


--------------------------------------------------
File End
--------------------------------------------------


./Block/Script.php
File type: .php
<?php
namespace Convertcart\Analytics\Block;

class Script extends \Magento\Framework\View\Element\Template
{
}

--------------------------------------------------
File End
--------------------------------------------------


./Observer/ProcessCategoryAfterDeleteEventObserver.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\Observer;
use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\App\ResourceConnection;
use Convertcart\Analytics\Model\SyncFactory;

class ProcessCategoryAfterDeleteEventObserver implements ObserverInterface
{

    /**
     * @var \Convertcart\Analytics\Model\SyncFactory
     */
    protected $_deletedCategory;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    public function __construct(
        \Convertcart\Analytics\Model\SyncFactory $deletedCategory,
        \Convertcart\Analytics\Logger\Logger $_logger
    ) {
        $this->_logger = $_logger;
        $this->_deletedCategory = $deletedCategory;
    }

    public function execute(Observer $observer)
    {
        try {
            $eventCategory = $observer->getEvent()->getCategory();
            $model = $this->_deletedCategory->create();
            $model->addData(["item_id" => $eventCategory->getId()]);
            $model->addData(["type" => "category"]);
            $saveData = $model->save();
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/ContentpageViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class ContentpageViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'contentPageViewed';
            $eventData = [];
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/HomepageViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class HomepageViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'homepageViewed';
            $eventData= [];
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/AddScript.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\View\LayoutInterface;

class AddScript implements ObserverInterface
{
    /**
     * @var \Magento\Framework\View\LayoutInterface
     */
    protected $_layout;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Convertcart\Analytics\Helper\Data
     */
    protected $_dataHelper;

    public function __construct(
        LayoutInterface $_layout,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Helper\Data $_dataHelper,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_dataHelper = $_dataHelper;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
        $this->_layout = $_layout;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $initScript = $this->_ccModel->getInitScript();
            if (empty($initScript)) {
                return;
            }

            $layout = $this->_layout;
            if (!is_object($layout)) {
                return;
            }

            $head = $layout->getBlock('head.additional');
            if (!is_object($head)) {
                return;
            }
            $head->append($initScript);
            $this->attachEvents($head);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }

    private function attachEvents($head)
    {
        if (!is_object($head)) {
            return;
        }
        $ccEvents = $this->_ccModel->fetchCcEvents();
        if (empty($ccEvents) or !is_array($ccEvents)) {
            return;
        }
        foreach ($ccEvents as $ccEvent) {
            $eventBlock = $this->_ccModel->getEventScript($ccEvent);
            $head->append($eventBlock);
        }
    }
}





--------------------------------------------------
File End
--------------------------------------------------


./Observer/ProductsSearched.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\App\Request\Http;

class ProductsSearched implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Convertcart\Analytics\Helper\Data
     */
    protected $_dataHelper;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel,
        \Convertcart\Analytics\Helper\Data $_dataHelper
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
        $this->_dataHelper = $_dataHelper;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'productsSearched';
            $eventData = [];
            $query = $observer->getDataObject();
            if (is_object($query)) {
                $eventData['query'] = $this->_dataHelper->sanitizeParam($query->getQueryText());
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}

--------------------------------------------------
File End
--------------------------------------------------


./Observer/ProcessProductAfterDeleteEventObserver.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\Observer;
use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\App\ResourceConnection;
use Convertcart\Analytics\Model\SyncFactory;

class ProcessProductAfterDeleteEventObserver implements ObserverInterface
{

    /**
     * @var \Convertcart\Analytics\Model\SyncFactory
     */
    protected $_deletedProduct;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    public function __construct(
        \Convertcart\Analytics\Model\SyncFactory $deletedProduct,
        \Convertcart\Analytics\Logger\Logger $_logger
    ) {
        $this->_logger = $_logger;
        $this->_deletedProduct = $deletedProduct;
    }

    public function execute(Observer $observer)
    {
        try {
            $eventProduct = $observer->getEvent()->getProduct();
            $model = $this->_deletedProduct->create();
            $model->addData(["item_id" => $eventProduct->getId()]);
            $model->addData(["type" => "product"]);
            $saveData = $model->save();
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Cart/OrderCompleted.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Cart;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\Registry;
use Magento\CatalogInventory\Api\StockRegistryInterface;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Framework\View\LayoutInterface;
use Magento\Sales\Model\OrderFactory;
use \Psr\Log\LoggerInterface;

class OrderCompleted implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Sales\Model\OrderFactory
     */
    protected $_salesOrderFactory;

    protected $_dataHelper;

    public function __construct(
        StoreManagerInterface $storeManager,
        OrderFactory $_salesOrderFactory,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_storeManager = $storeManager;
        $this->_salesOrderFactory = $_salesOrderFactory;
        $this->_ccModel = $_ccModel;
        $this->_logger = $_logger;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $orderIds = $observer->getData('order_ids');
            if (!is_array($orderIds) || empty($orderIds[0])) {
                return;
            }

            $eventData = [];
            $eventData['items'] = [];
            $store = $this->_storeManager->getStore();
            $currency = is_object($store) ? $store->getCurrentCurrencyCode() : null;
            $order = $this->_salesOrderFactory->create()->load($orderIds[0]);
            if (!is_object($order)) {
                return;
            }

            foreach ($order->getAllVisibleItems() as $item) {
                $orderItem = [];
                $orderItem['name'] = str_replace("'", "", $item->getName());
                $orderItem['price'] = $item->getPrice();
                $orderItem['currency'] = $currency;
                $orderItem['quantity'] = $item->getQtyOrdered();
                $orderItem['id'] = $item->getProductId();
                $orderItem['sku'] = $item->getSku();

                $product = $item->getProduct();
                if (is_object($product)) {
                    $orderItem['url'] = $product->getProductUrl();
                }
                $eventData['items'][] = $orderItem;
            }

            $eventData['orderId'] = $order->getIncrementId();
            $eventData['order_email'] = $order->getCustomerEmail();
            $eventData['currency'] = $currency;
            $eventData['is_guest'] = $order->getCustomerIsGuest();
            $eventData['coupon_code'] = $order->getCouponCode();
            $eventData['shipping_method'] = $order->getShippingDescription();
            $eventData['payment_method'] = $order->getPayment()->getMethod();
            $eventData['status'] = $order->getStatus();
            $eventData['currency'] = $currency;
            $eventData['total'] = $order->getGrandTotal();

            // $ccData['event_data']['shipping_amount'] = $cc->getValue($order->getShippingAmount());
            // $ccData['event_data']['tax_amount'] = $cc->getValue($order->getTaxAmount());
            // $ccData['event_data']['discount_amount'] = $cc->getValue($order->getDiscountAmount());
            // $ccView['event_data']['subtotal'] = $cc->getValue($order->getSubtotal());

            // $ccData['event_data']['base_total'] = $cc->getValue($order->getBaseGrandTotal());
            // $ccData['event_data']['total_due'] = $cc->getValue($order->getTotalDue());
            // $ccData['event_data']['base_total_due'] = $cc->getValue($order->getBaseTotalDue());

            $eventName = 'orderCompleted';
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->log(null, $e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Cart/CartViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Cart;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Checkout\Model\Session;

class CartViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Checkout\Model\Session
     */
    protected $_checkoutSession;

    public function __construct(
        StoreManagerInterface $_storeManager,
        Session $_checkoutSession,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_checkoutSession = $_checkoutSession;
        $this->_storeManager = $_storeManager;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName  = 'cartViewed';
            $eventData = [];
            if (!empty($this->_checkoutSession) && is_object($this->_checkoutSession)) {
                $store = $this->_storeManager->getStore();
                $currency = is_object($store) ? $store->getCurrentCurrencyCode() : null;
                $eventData = $this->_ccModel->getCartEventData($this->_checkoutSession->getQuote(), $currency);
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Cart/CheckoutViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Cart;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Checkout\Model\Session;

class CheckoutViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Checkout\Model\Session
     */
    protected $_checkoutSession;

    public function __construct(
        StoreManagerInterface $_storeManager,
        Session $_checkoutSession,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_checkoutSession = $_checkoutSession;
        $this->_storeManager = $_storeManager;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName  = 'checkoutViewed';
            $eventData = [];
            if (!empty($this->_checkoutSession) && is_object($this->_checkoutSession)) {
                $store = $this->_storeManager->getStore();
                $currency = is_object($store) ? $store->getCurrentCurrencyCode() : null;
                $eventData = $this->_ccModel->getCartEventData($this->_checkoutSession->getQuote(), $currency);
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Customer/LoggedOut.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Customer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class LoggedOut implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $customer = $observer->getCustomer();
            $eventName = 'loggedOut';
            $eventData = $this->_ccModel->getCustomerData($customer);
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Customer/LoggedIn.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Customer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class LoggedIn implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $customer = $observer->getCustomer();
            $eventName = 'loggedIn';
            $eventData = $this->_ccModel->getCustomerData($customer);
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Customer/CustomerRegistered.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Customer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class CustomerRegistered implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $customer = $observer->getCustomer();
            $eventName = 'registered';
            $eventData = $this->_ccModel->getCustomerData($customer);
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Catalog/CategoryViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Catalog;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\Registry;

class CategoryViewed implements ObserverInterface
{
    /**
     * @var \Magento\Framework\Registry
     */
    protected $_registry;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        Registry $_registry,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_registry = $_registry;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'categoryViewed';
            $eventData = [];
            $category = $this->_registry->registry('current_category');
            if (is_object($category)) {
                $eventData['name'] = $category->getName();
                $eventData['id'] = $category->getId();
                $eventData['url'] = $category->getUrl();
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Catalog/ProductViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Catalog;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\Registry;
use Magento\CatalogInventory\Api\StockRegistryInterface;
use Magento\Store\Model\StoreManagerInterface;
use Magento\ConfigurableProduct\Model\Product\Type\ConfigurableFactory;

class ProductViewed implements ObserverInterface
{
    /**
     * @var \Magento\Framework\Registry
     */
    protected $_registry;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_stockItemRepository;

    /**
     * @var \Magento\ConfigurableProduct\Model\Product\Type\ConfigurableFactory
     */
    protected $_configurableProductProductTypeConfigurableFactory;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        Registry $_registry,
        StockRegistryInterface $_stockItemRepository,
        StoreManagerInterface $_storeManager,
        ConfigurableFactory $_configurableProductProductTypeConfigurableFactory,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_registry = $_registry;
        $this->_stockItemRepository = $_stockItemRepository;
        $this->_storeManager = $_storeManager;
        $this->_configurableProductProductTypeConfigurableFactory = $_configurableProductProductTypeConfigurableFactory;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'productViewed';
            $eventData = [];
            $product = $this->_registry->registry('current_product');
            if (is_object($product)) {
                $eventData = [
                    'id' => $product->getId(),
                    'url' => $product->getProductUrl(),
                    'name' => $product->getName(),
                    'price' => $product->getPrice(),
                    'final_price' => $product->getFinalPrice(),
                    'sku' => $product->getSku(),
                    'type' => $product->getTypeId()
                ];

                $store = $this->_storeManager->getStore();
                $eventData['currency'] = is_object($store) ? $store->getCurrentCurrencyCode() : null;
                if (!empty($product->getImage())) {
                    $eventData['image'] = $store->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
                    $eventData['image'].= 'catalog/product'.$product->getImage();
                } else {
                    $eventData['image'] = null;
                }
                $stock = $this->_stockItemRepository->getStockItem($product->getId());
                $eventData['is_in_stock'] = is_object($stock) ? $stock->getIsInStock() : null;
                if ($eventData['type'] == "configurable") {
                    $eventData['product_type'] = "parent";
                    $childProducts = $this->_configurableProductProductTypeConfigurableFactory->create()
                                        ->getChildrenIds($product->getId());
                    $eventData['child_ids'] = $childProducts[0];
                } else {
                    $eventData['product_type'] = "simple";
                }
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/SyncManagement.php
File type: .php
<?php

namespace Convertcart\Analytics\Model;

use Convertcart\Analytics\Api\Data\SyncInterface;

class SyncManagement implements SyncInterface, \Magento\Framework\DataObject\IdentityInterface
{

    public const CACHE_TAG = 'Convertcart_Analytics';

    protected function _construct()
    {
        /* _init($resourceModel)  */
        $this->_init(\Convertcart\Analytics\Model\ResourceModel\Sync::class);
    }

    public function getIdentities()
    {
        return [self::CACHE_TAG . '_' . $this->getId()];
    }

    /**
     * Get ID.
     *
     * @return int
     */
    public function getId()
    {
        return $this->getData(self::ID);
    }

    /**
     * Set ID.
     *
     * @param int $id
     *
     * @return SyncInterface
     */
    public function setId($id)
    {
        return $this->setData(self::ID, $id);
    }

    /**
     * Get TYPE.
     *
     * @return string
     */
    public function getType()
    {
        return $this->getData(self::TYPE);
    }

    /**
     * Set type.
     *
     * @param string $type
     *
     * @return SyncInterface
     */
    public function setType($type)
    {
        return $this->setData(self::TYPE, $type);
    }

    /**
     * Get itemId.
     *
     * @return string|null
     */
    public function getItemId()
    {
        return $this->getData(self::ITEM_ID);
    }

    /**
     * Set itemId.
     *
     * @param string $itemId
     *
     * @return SyncInterface
     */
    public function setItemId($itemId)
    {
        return $this->setData(self::ITEM_ID, $itemId);
    }

    /**
     * Get createdAt.
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->getData(self::CREATED_AT);
    }

    /**
     * Set createdAt.
     *
     * @param string $createdAt
     *
     * @return SyncInterface
     */
    public function setCreatedAt($createdAt)
    {
        return $this->setData(self::CREATED_AT, $createdAt);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Sync.php
File type: .php
<?php


namespace Convertcart\Analytics\Model;

use Magento\Framework\Model\AbstractModel;

class Sync extends AbstractModel
{
    protected function _construct()
    {
        $this->_init(ResourceModel\Sync::class);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Cc.php
File type: .php
<?php
namespace Convertcart\Analytics\Model;

use Magento\Framework\Session\SessionManagerInterface;
use Magento\Framework\View\LayoutInterface;
use Magento\Store\Model\StoreManagerInterface;

class Cc extends \Magento\Framework\Session\SessionManager
{
    /**
     * @var \Magento\Framework\View\LayoutInterface
     */
    protected $_layout;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Convertcart\Analytics\Helper\Data
     */
    protected $_dataHelper;

    /**
     * @var \Magento\Framework\Session\SessionManagerInterface
     */
    protected $_fwSession;

    public function __construct(
        LayoutInterface $_layout,
        StoreManagerInterface $_storeManager,
        SessionManagerInterface $_fwSession,
        \Convertcart\Analytics\Helper\Data $_dataHelper
    ) {
        $this->_layout = $_layout;
        $this->_storeManager = $_storeManager;
        $this->_fwSession = $_fwSession;
        $this->_dataHelper = $_dataHelper;
    }

    public function getInitScript()
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }

        $clientKey = $this->_dataHelper->getClientKey();
        if (empty($clientKey)) {
            return;
        }
        $script = $this->_layout->createBlock('Convertcart\Analytics\Block\Script')
                ->setTemplate('Convertcart_Analytics::init.phtml')
                ->assign([
                    'clientKey' => $clientKey
                ]);
        return $script;
    }

    public function getEventScript($eventData = [])
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }
        $script = $this->_layout->createBlock('Convertcart\Analytics\Block\Script')
        ->setTemplate('Convertcart_Analytics::event.phtml')
        ->assign([
            'eventData' => json_encode($eventData)
        ]);
        return $script;
    }

    public function storeCcEvents($eventName, $eventData = [])
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }
        $ccEvents = $this->_fwSession->getCcEvents();
        $eventData['ccEvent'] = $this->_dataHelper->getEventType($eventName);
        $eventLimit = 3;
        if (empty($ccEvents)) {
            $ccEvents = [];
            $ccEvents[] = $this->addMetaData($eventData);
        } elseif (count($ccEvents) >= $eventLimit) {
            $eventIndex = $eventLimit - 1;
            $ccEvents[$eventIndex] = $this->addMetaData($eventData);
        } else {
            $ccEvents[] = $this->addMetaData($eventData);
        }

        $this->_fwSession->setCcEvents($ccEvents);
    }

    public function fetchCcEvents()
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }

        $ccEvents = $this->_fwSession->getCcEvents();
        $this->_fwSession->setCcEvents();
        if (empty($ccEvents)) {
            return [];
        } else {
            return $ccEvents;
        }
    }

    public function addMetaData($eventData = [])
    {
        $metaData = [];
        $metaData['plugin_version'] = $this->_dataHelper->getModuleVersion();
        $eventData['meta_data'] = $metaData;
        return $eventData;
    }

    public function getCartEventData($quote, $currency)
    {
        if (!is_object($quote)) {
            return;
        }
        $cartItems = $quote->getAllVisibleItems();
        $eventData = [];
        $eventData['currency'] = $currency;
        $eventData['items'] = [];
        foreach ($cartItems as $item) {
            $cartItem = [];
            $cartItem['name'] = str_replace("'", "", $item->getName());
            $cartItem['price'] = $item->getPrice();
            $cartItem['currency'] = $currency;
            $cartItem['quantity'] = $item->getQty();
            $cartItem['id'] = $item->getProductId();
            $cartItem['sku'] = $item->getSku();
            $cartItem['customOptions'] = $this->getCartItemOptions($item);

            $product = $item->getProduct();
            if (is_object($product)) {
                $cartItem['url'] = $product->getProductUrl();
                if (!empty($product->getSmallImage())) {
                    $store = $this->_storeManager->getStore();
                    $cartItem['image'] = $store->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
                    $cartItem['image'].= 'catalog/product'.$product->getSmallImage();
                }
            }
            $eventData['items'][] = $cartItem;
        }
        $eventData['currency'] = $currency;
        $eventData['coupon_code'] = $quote->getCouponCode();
        $eventData['subtotal'] = $quote->getSubtotal();
        $eventData['total'] = $quote->getGrandTotal();
        $eventData['base_total'] = $quote->getBaseGrandTotal();

        return $eventData;
    }

    public function getCartItemOptions($item)
    {
        if (!is_object($item)) {
            return null;
        }

        $product = $item->getProduct();
        if (!is_object($product)) {
            return null;
        }

        $productInstance = $product->getTypeInstance(true);
        if (!is_object($productInstance)) {
            return null;
        }

        $productOptions = $productInstance->getOrderOptions($product);
        $options = !empty($productOptions['options']) ? $productOptions['options'] : null;
        if (empty($options)) {
            return null;
        }

        $customOptions = [];
        foreach ($options as $option) {
            $customOption = [];
            $customOption['label'] = !empty($option['label']) ? $option['label'] : null;
            $customOption['value'] = !empty($option['value']) ? $option['value'] : null;
            $customOption['option_id'] = !empty($option['option_id']) ? $option['option_id'] : null;
            $customOption['option_type'] = !empty($option['option_type']) ? $option['option_type'] : null;
            $customOptions[] = $customOption;
        }

        return $customOptions;
    }

    public function getCustomerData($customer)
    {
        if (!is_object($customer)) {
            return;
        }
        $customerData = [];
        $customerData['email'] = $customer->getEmail();
        $customerData['first_name'] = $customer->getFirstname();
        $customerData['last_name'] = $customer->getLastname();
        $customerData['id'] = $customer->getId();

        return $customerData;
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Data/PluginInfo.php
File type: .php
<?php
namespace Convertcart\Analytics\Model\Data;

use Magento\Framework\DataObject;

class PluginInfo extends DataObject
{
    private $version;
    private $tables;
    private $triggers;

    public function getVersion(): string
    {
        return $this->version;
    }

    public function setVersion(string $version): void
    {
        $this->version = $version;
    }

    public function getTables(): array
    {
        return $this->tables;
    }

    public function setTables(array $tables): void
    {
        $this->tables = $tables;
    }

    public function getTriggers(): array
    {
        return $this->triggers;
    }

    public function setTriggers(array $triggers): void
    {
        $this->triggers = $triggers;
    }

    public function jsonSerialize(): array
    {
        return [
            'version' => $this->getVersion(),
            'tables' => $this->getTables(),
            'triggers' => $this->getTriggers()
        ];
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Api/SyncApi.php
File type: .php
<?php

namespace Convertcart\Analytics\Model\Api;

use Convertcart\Analytics\Model\SyncFactory;
use Convertcart\Analytics\Model\ResourceModel\Sync\Collection;

class SyncApi implements \Convertcart\Analytics\Api\SyncRepositoryInterface
{

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\SyncFactory
     */
    protected $_deletedProduct;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\SyncFactory $deletedProduct
    ) {
        $this->_logger = $_logger;
        $this->_deletedProduct = $deletedProduct;
    }

    /**
     * Deleted product
     *
     * @inheriDoc
     *
     * @param int $limit
     * @param int $id
     * @param string $type
     */
    public function getDeletedProduct($limit, $id, $type)
    {
        try {
            // to delete the previous synced data ($id is last sync id);
            $model = $this->_deletedProduct->create()->getCollection();

            // Filter by type
            $model->addFieldToFilter("type", ["eq" => $type]);
            if ($id) {
                // If an ID is provided, fetch only records greater than this ID
                $model->addFieldToFilter("id", ['gt' => $id]);
            }
            // Limit the number of records
            $model->setPageSize($limit);

            return $model->getData();
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Api/PluginInfo.php
File type: .php
<?php
namespace Convertcart\Analytics\Model\Api;

use Convertcart\Analytics\Api\PluginInfoInterface;
use Magento\Framework\App\ResourceConnection;
use Magento\Framework\Module\ModuleListInterface;
use Magento\Framework\DB\Adapter\AdapterInterface;
use Magento\Framework\DataObject;
use Convertcart\Analytics\Model\Data\PluginInfoFactory;
use Convertcart\Analytics\Logger\Logger;

class PluginInfo implements PluginInfoInterface
{
    /**
     * @var ResourceConnection
     */
    protected $resourceConnection;

    /**
     * @var ModuleListInterface
     */
    protected $moduleList;

    /**
     * @var AdapterInterface
     */
    protected $connection;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $logger;

    /**
     * @var PluginInfoFactory
     */
    protected $pluginInfoFactory;

    /**
     * Constructor.
     *
     * @param ResourceConnection $resourceConnection
     * @param ModuleListInterface $moduleList
     * @param Logger $logger
     * @param PluginInfoFactory $pluginInfoFactory
     */
    public function __construct(
        ResourceConnection $resourceConnection,
        ModuleListInterface $moduleList,
        Logger $logger,
        PluginInfoFactory $pluginInfoFactory
    ) {
        $this->resourceConnection = $resourceConnection;
        $this->moduleList = $moduleList;
        $this->connection = $resourceConnection->getConnection();
        $this->logger = $logger;
        $this->pluginInfoFactory = $pluginInfoFactory;
    }

    /**
     * Get plugin information.
     *
     * @return \Convertcart\Analytics\Model\Data\PluginInfo
     */
    public function getPluginInfo()
    {
        // Get plugin version
        $moduleCode = 'Convertcart_Analytics';
        $moduleInfo = $this->moduleList->getOne($moduleCode);
        $pluginVersion = isset($moduleInfo['setup_version']) ? $moduleInfo['setup_version'] : 'Unknown';

        // Check if required tables exist
        $requiredTables = ['convertcart_sync_activity'];
        $existingTables = $this->connection->listTables();

        // Create associative array for tables
        $tablesExist = [];
        foreach ($requiredTables as $table) {
            $tableName = $this->resourceConnection->getTableName($table);
            $tablesExist[$table] = in_array($tableName, $existingTables);
        }

        // Check if required triggers exist
        $requiredTriggers = [
            'update_cpe_after_insert_catalog_product_entity_decimal',
            'update_cpe_after_update_catalog_product_entity_decimal',
            'update_cpe_after_insert_catalog_inventory_stock_item',
            'update_cpe_after_update_catalog_inventory_stock_item'
        ];

        $query = "SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_SCHEMA = DATABASE()";
        $existingTriggers = $this->connection->fetchCol($query);

        // Create associative array for triggers
        $triggersExist = [];
        foreach ($requiredTriggers as $trigger) {
            $triggersExist[$trigger] = in_array($trigger, $existingTriggers);
        }

        // Use PluginInfoFactory to create a PluginInfo object
        /** @var \Convertcart\Analytics\Model\Data\PluginInfo $pluginInfo */
        $pluginInfo = $this->pluginInfoFactory->create();
        $pluginInfo->setVersion($pluginVersion);
        $pluginInfo->setTables($tablesExist);
        $pluginInfo->setTriggers($triggersExist);

        // Logging for debugging
        $this->logger->debug('Existing triggers: ' . print_r($existingTriggers, true));
        $this->logger->debug('Plugin Info Data: ' . json_encode($pluginInfo));

        return $pluginInfo;
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/ResourceModel/Sync.php
File type: .php
<?php


namespace Convertcart\Analytics\Model\ResourceModel;

use Magento\Framework\Model\ResourceModel\Db\AbstractDb;

class Sync extends AbstractDb
{
    public const MAIN_TABLE = 'convertcart_sync_activity';
    public const ID_FIELD_NAME = 'id';

    protected function _construct()
    {
        $this->_init(self::MAIN_TABLE, self::ID_FIELD_NAME);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/ResourceModel/PluginInfo.php
File type: .php
<?php
namespace Convertcart\Analytics\Model\ResourceModel;

use Magento\Framework\Model\ResourceModel\Db\AbstractDb;

class PluginInfo extends AbstractDb
{
    /**
     * @inheritDoc
     */
    protected function _construct()
    {
        // Define a dummy table and id field since we're not actually using the database
        $this->_init('dummy_table', 'entity_id');
    }
} 

--------------------------------------------------
File End
--------------------------------------------------


./Model/ResourceModel/Sync/Collection.php
File type: .php
<?php


namespace Convertcart\Analytics\Model\ResourceModel\Sync;

use Convertcart\Analytics\Model\Sync;
use Convertcart\Analytics\Model\ResourceModel\Sync as SyncResourceModel;
use Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection;

class Collection extends AbstractCollection
{
    public function _construct()
    {
        $this->_init(Sync::class, SyncResourceModel::class);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./view/frontend/templates/init.phtml
File type: .phtml
<?php
// @codingStandardsIgnoreFile
$clientKey = htmlspecialchars($clientKey, ENT_QUOTES, 'UTF-8');
?>
<!-- ConvertCart Initialization Started -->
<script type="text/javascript">
(function() {
    function loadScript(src) {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = src;
        script.async = true;
        script.onload = function() {
            console.log('ConvertCart script loaded:', src);
        };
        script.onerror = function() {
            console.error('Failed to load ConvertCart script:', src);
        };
        document.head.appendChild(script);
    }

    var scriptSrc = "//cdn.convertcart.com/<?php echo $clientKey; ?>.js";

    if (typeof require !== 'undefined') {
        require([scriptSrc], function() {
            console.log('ConvertCart loaded via RequireJS');
        }, function() {
            loadScript(scriptSrc);
        });
    } else {
        loadScript(scriptSrc);
    }
})();
</script>
<!-- ConvertCart Initialization Ended -->


--------------------------------------------------
File End
--------------------------------------------------


./view/frontend/templates/event.phtml
File type: .phtml
<?php
// @codingStandardsIgnoreFile
?>
<!-- ConvertCart Event-->
<script type='text/javascript' data-cfasync="false">
    window.ccLayer = window.ccLayer || [];
    ccLayer.push(<?php echo $eventData; ?>);
</script>
<!-- ConvertCart Event -->

--------------------------------------------------
File End
--------------------------------------------------


./Setup/UpgradeSchema.php
File type: .php
<?php

namespace Convertcart\Analytics\Setup;

use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\DB\Ddl\Table;

class UpgradeSchema implements \Magento\Framework\Setup\UpgradeSchemaInterface
{
    /**
     * Create table if not exists
     *
     * @param SchemaSetupInterface $setup
     * @param ModuleContextInterface $context
     */
    public function upgrade(SchemaSetupInterface $setup, ModuleContextInterface $context)
    {
        $setup->startSetup();
        $conn = $setup->getConnection();
        if ($setup->getConnection()->isTableExists('convertcart_sync_activity') != true) {
            $tableName = $setup->getTable('convertcart_sync_activity');
            if ($conn->isTableExists($tableName) != true) {

                $table = $conn->newTable($tableName)
                                ->addColumn(
                                    'id',
                                    Table::TYPE_INTEGER,
                                    null,
                                    ['unsigned'=>true,'nullable'=>false,'auto_increment' => true,'primary'=>true]
                                )
                                ->addColumn(
                                    'item_id',
                                    Table::TYPE_INTEGER,
                                    null,
                                    ['nullable'=>false]
                                )
                                ->addColumn(
                                    'type',
                                    Table::TYPE_TEXT,
                                    55,
                                    ['nullable'=>false]
                                )
                                ->addColumn(
                                    'created_at',
                                    Table::TYPE_TIMESTAMP,
                                    null,
                                    ['nullable' => false, 'default' => Table::TIMESTAMP_INIT]
                                )
                                ->setOption('charset', 'utf8');
                $conn->createTable($table);
            }
        }
        $setup->endSetup();
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Setup/Uninstall.php
File type: .php
<?php

namespace Convertcart\Analytics\Setup;

use Magento\Framework\Setup\UninstallInterface;
use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\DB\Ddl\Table;
use Magento\Framework\Exception\LocalizedException;

class Uninstall implements UninstallInterface
{
    /**
     * Drop table and triggers
     *
     * @param SchemaSetupInterface $setup
     * @param ModuleContextInterface $context
     * @throws LocalizedException
     */
    public function uninstall(SchemaSetupInterface $setup, ModuleContextInterface $context)
    {
        $conn = $setup->getConnection();
        $tableName = $setup->getTable('convertcart_sync_activity');

        // Drop the table if it exists
        if ($conn->isTableExists($tableName)) {
            $conn->dropTable($tableName);
        }

        // Array of trigger names to be dropped
        $triggerNames = [
            'update_cpe_after_insert_catalog_product_entity_decimal',
            'update_cpe_after_update_catalog_product_entity_decimal',
            'update_cpe_after_insert_catalog_inventory_stock_item',
            'update_cpe_after_update_catalog_inventory_stock_item'
        ];

        // Loop through each trigger
        foreach ($triggerNames as $triggerName) {
            // Check if the trigger exists
            $triggerExists = $conn->fetchOne(
                "SELECT TRIGGER_NAME FROM information_schema.TRIGGERS 
                 WHERE TRIGGER_NAME = :trigger_name AND TRIGGER_SCHEMA = DATABASE()",
                ['trigger_name' => $triggerName]
            );

            // If the trigger exists, drop it
            if ($triggerExists) {
                try {
                    $conn->query("DROP TRIGGER IF EXISTS $triggerName");
                } catch (\Exception $e) {
                    // Handle exception if trigger dropping fails
                    throw new LocalizedException(__('Error dropping trigger %1: %2', $triggerName, $e->getMessage()));
                }
            }
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Setup/InstallSchema.php
File type: .php
<?php

namespace Convertcart\Analytics\Setup;

use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\DB\Ddl\Table;


class InstallSchema implements \Magento\Framework\Setup\InstallSchemaInterface
{
    /**
     * Create table and triggers
     *
     * @param SchemaSetupInterface $setup
     * @param ModuleContextInterface $context
     */
    public function install(SchemaSetupInterface $setup, ModuleContextInterface $context)
    {
        $setup->startSetup();
        $conn = $setup->getConnection();
        $tableName = $setup->getTable('convertcart_sync_activity');

        if (!$conn->isTableExists($tableName)) {
            $table = $conn->newTable($tableName)
                ->addColumn(
                    'id',
                    Table::TYPE_INTEGER,
                    null,
                    ['unsigned' => true, 'nullable' => false, 'auto_increment' => true, 'primary' => true]
                )
                ->addColumn(
                    'item_id',
                    Table::TYPE_INTEGER,
                    null,
                    ['nullable' => false]
                )
                ->addColumn(
                    'type',
                    Table::TYPE_TEXT,
                    55,
                    ['nullable' => false]
                )
                ->addColumn(
                    'created_at',
                    Table::TYPE_TIMESTAMP,
                    null,
                    ['nullable' => false, 'default' => Table::TIMESTAMP_INIT]
                )
                ->setOption('charset', 'utf8');
            $conn->createTable($table);
        }

        $triggers = [
            'update_cpe_after_insert_catalog_product_entity_decimal' => "
                CREATE TRIGGER update_cpe_after_insert_catalog_product_entity_decimal
                AFTER INSERT ON " . $setup->getTable('catalog_product_entity_decimal') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.entity_id;",
            'update_cpe_after_update_catalog_product_entity_decimal' => "
                CREATE TRIGGER update_cpe_after_update_catalog_product_entity_decimal
                AFTER UPDATE ON " . $setup->getTable('catalog_product_entity_decimal') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.entity_id;",
            'update_cpe_after_insert_catalog_inventory_stock_item' => "
                CREATE TRIGGER update_cpe_after_insert_catalog_inventory_stock_item
                AFTER INSERT ON " . $setup->getTable('cataloginventory_stock_item') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.product_id;",
            'update_cpe_after_update_catalog_inventory_stock_item' => "
                CREATE TRIGGER update_cpe_after_update_catalog_inventory_stock_item
                AFTER UPDATE ON " . $setup->getTable('cataloginventory_stock_item') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.product_id;"
        ];

        // Loop through each trigger
        foreach ($triggers as $triggerName => $triggerSql) {
            // Check if the trigger already exists
            $triggerExists = $conn->fetchOne(
                "SELECT TRIGGER_NAME FROM information_schema.TRIGGERS 
                 WHERE TRIGGER_NAME = :trigger_name AND TRIGGER_SCHEMA = DATABASE()",
                ['trigger_name' => $triggerName]
            );

            // If the trigger does not exist, create it
            if (!$triggerExists) {
                try {
                    $conn->query($triggerSql);
                } catch (\Exception $e) {
                    // Handle exception if trigger creation fails
                    throw new \RuntimeException('Error creating trigger: ' . $e->getMessage());
                }
            }
        }

        $setup->endSetup(); // Finalize the setup process
    }
}

--------------------------------------------------
File End
--------------------------------------------------


./Setup/UpgradeData.php
File type: .php
<?php
namespace Vendor\Module\Setup;

use Magento\Framework\Setup\ModuleDataSetupInterface;
use Magento\Framework\Setup\UpgradeDataInterface;
use Magento\Framework\Setup\ModuleContextInterface;

/* 
    No data updates, 
    but the presence of this file ensures 
    Magento updates data_version of setup_module table
*/

class UpgradeData implements UpgradeDataInterface
{
    public function upgrade(ModuleDataSetupInterface $setup, ModuleContextInterface $context)
    {
        $setup->startSetup();
        $setup->endSetup();
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./etc/webapi.xml
File type: .xml
<?xml version="1.0"?>
<routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Webapi:etc/webapi.xsd">
	<route url="/V1/cc/sync-activity/:limit/:id/:type" method="GET">
		<service class="Convertcart\Analytics\Api\SyncRepositoryInterface" method="getDeletedProduct"/>
		<resources>
			<resource ref="Magento_Catalog::products"/>
		</resources>
	</route>
	<route url="/V1/cc/plugin-info" method="GET">
		<service class="Convertcart\Analytics\Api\PluginInfoInterface" method="getPluginInfo"/>
		<resources>
			<resource ref="anonymous"/>
		</resources>
	</route>
</routes>

--------------------------------------------------
File End
--------------------------------------------------


./etc/di.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../../lib/internal/Magento/Framework/ObjectManager/etc/config.xsd">
    <type name="Convertcart\Analytics\Logger\Handler">
        <arguments>
            <argument name="filesystem" xsi:type="object">Magento\Framework\Filesystem\Driver\File</argument>
        </arguments>
    </type>
    <type name="Convertcart\Analytics\Logger\Logger">
        <arguments>
            <argument name="name" xsi:type="string">myLoggerName</argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Convertcart\Analytics\Logger\Handler</item>
            </argument>
        </arguments>
    </type>
    <preference for="Convertcart\Analytics\Api\SyncRepositoryInterface" type="Convertcart\Analytics\Model\Api\SyncApi"/>
    <preference for="Convertcart\Analytics\Api\Data\SyncInterface" type="Convertcart\Analytics\Model\SyncManagement" />
    <preference for="Convertcart\Analytics\Api\PluginInfoInterface" type="Convertcart\Analytics\Model\Api\PluginInfo" />
    <preference for="Convertcart\Analytics\Api\Data\PluginInfoInterface" type="Convertcart\Analytics\Model\Data\PluginInfo" />
    <virtualType name="Convertcart\Analytics\Model\ResourceModel\PluginInfo\Collection" type="Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection">
        <arguments>
            <argument name="model" xsi:type="string">Convertcart\Analytics\Model\Data\PluginInfo</argument>
            <argument name="resourceModel" xsi:type="string">Convertcart\Analytics\Model\ResourceModel\PluginInfo</argument>
        </arguments>
    </virtualType>
</config>


--------------------------------------------------
File End
--------------------------------------------------


./etc/module.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
    <module name="Convertcart_Analytics" setup_version="1.0.8"/>
</config>

--------------------------------------------------
File End
--------------------------------------------------


./etc/adminhtml/events.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd">
    <event name="catalog_product_delete_after_done">
        <observer name="convertcart_deleted_product" instance="Convertcart\Analytics\Observer\ProcessProductAfterDeleteEventObserver"/>
    </event>
     <event name="catalog_category_delete_after_done">
        <observer name="convertcart_deleted_category" instance="Convertcart\Analytics\Observer\ProcessCategoryAfterDeleteEventObserver"/>
    </event>
</config>


--------------------------------------------------
File End
--------------------------------------------------


./etc/adminhtml/system.xml
File type: .xml
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Config:etc/system_file.xsd">
    <system>
        <tab id="convertcart_config" translate="label" sortOrder="1000">
            <label>Convertcart</label>
        </tab>
        <section id="convertcart" translate="label" sortOrder="100" showInDefault="1" showInWebsite="1" showInStore="1">
            <class>separator-top</class>
            <label>Convertcart Configuration</label>
            <tab>convertcart_config</tab>
            <resource>Convertcart_Analytics::config</resource>
            <group id="configuration" translate="label" sortOrder="10" showInDefault="1" showInWebsite="1" showInStore="1">
                <label>Convertcart Configuration</label>
                <comment></comment>
                <field id="domainid" translate="label" sortOrder="1" showInDefault="1" showInWebsite="1" showInStore="1">
                    <label>Domain Id</label>
                    <comment>Contact ConvertCart to get this key.</comment>
                </field>
            </group>
        </section>
    </system>
</config>

--------------------------------------------------
File End
--------------------------------------------------


./etc/frontend/events.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd">
    <event name="layout_render_before">
        <observer name="Convertcart_Analytics" instance="Convertcart\Analytics\Observer\AddScript"/>
    </event>
    <event name="controller_action_postdispatch_cms_index_index">
        <observer name="convertcart_analytics_homepage_viewed" instance="Convertcart\Analytics\Observer\HomepageViewed"/>
    </event>
    <event name="controller_action_predispatch_cms_page_view">
        <observer name="convertcart_analytics_contentpage_viewed" instance="Convertcart\Analytics\Observer\ContentpageViewed"/>
    </event>
    <event name="controller_action_postdispatch_catalog_product_view">
        <observer name="convertcart_analytics_product_viewed" instance="Convertcart\Analytics\Observer\Catalog\ProductViewed"/>
    </event>
    <event name="controller_action_postdispatch_catalog_category_view">
        <observer name="convertcart_analytics_category_viewed" instance="Convertcart\Analytics\Observer\Catalog\CategoryViewed"/>
    </event>
    <event name="search_query_load_after">
        <observer name="convertcart_analytics_products_searched" instance="Convertcart\Analytics\Observer\ProductsSearched"/>
    </event>
    <event name="controller_action_predispatch_checkout_cart_index">
        <observer name="convertcart_analytics_cart_viewed" instance="Convertcart\Analytics\Observer\Cart\CartViewed"/>
    </event>
    <event name="controller_action_predispatch_checkout_index_index">
        <observer name="convertcart_analytics_checkout_viewed" instance="Convertcart\Analytics\Observer\Cart\CheckoutViewed"/>
    </event>
    <event name="checkout_onepage_controller_success_action">
        <observer name="convertcart_analytics_order_completed" instance="Convertcart\Analytics\Observer\Cart\OrderCompleted"/>
    </event>
    <event name="customer_register_success">
        <observer name="convertcart_analytics_customer_registered" instance="Convertcart\Analytics\Observer\Customer\CustomerRegistered"/>
    </event>
    <event name="customer_login">
        <observer name="convertcart_analytics_logged_in" instance="Convertcart\Analytics\Observer\Customer\LoggedIn"/>
    </event>
    <event name="customer_logout">
        <observer name="convertcart_analytics_logged_out" instance="Convertcart\Analytics\Observer\Customer\LoggedOut"/>
    </event>
</config>


--------------------------------------------------
File End
--------------------------------------------------


--------------------------------------------------
File End
--------------------------------------------------


./README.md
File type: .md
# Convert Cart Magento 2 Plugin

![Magento 2](https://img.shields.io/badge/Magento-2-brightgreen.svg)
![License](https://img.shields.io/badge/license-Proprietary-red.svg)
[![Packagist](https://img.shields.io/packagist/v/convert-cart/analytics.svg)](https://packagist.org/packages/convert-cart/analytics)

## Table of Contents

- [Introduction](#introduction)
- [Features](#features)
- [Installation](#installation)
  - [Composer Installation](#composer-installation)
  - [Manual Installation](#manual-installation)
- [Configure Domain Id](#configure-domain-id)
- [Troubleshooting](#troubleshooting)
- [Contact](#contact)

## Introduction

Welcome to the Magento 2 Plugin by Convert Cart. This plugin integrates seamlessly with Magento 2 ecommerce websites, enabling the tracking of user behavior. Additionally, it synchronizes crucial data such as product catalogs, order histories, customer profiles, and category information to our servers on a regular basis. This synchronization powers our recommendation engine, providing personalized and data-driven insights to enhance your ecommerce operations.

## Features

- Script injection on the frontend for user behavior tracking.
- Token generation for synchronizing product/order/customer/category data to Convert Cart servers for recommendations.
- Product deletion tracking to avoid recommending deleted products to the visitors of the store.

## Installation

### Composer Installation

1. Run the following command in the root folder of your Magento installation when the domain is added in app.convertcart.com (for production):

    ```sh
    composer require convert-cart/analytics
    ```

    If you're intending to setting up a domain in app-beta.convertcart.com (for beta testing), please use tag name followed by the suffix `-beta` like `1.0.8-beta`. The command will be like,

    ```sh
    composer require convert-cart/analytics:1.0.8-beta
    ```

    If you wanted to know the exact changes that's needed to setup a beta server on a production tag, you can take a look into this [commit](https://github.com/convert-cart/magento2-plugin/commit/7fcd6766d00aa0c1f9c24365864a5738bc893252).

2. After installing via Composer, run the following commands from the Magento root directory:

    ```sh
    php bin/magento maintenance:enable
    php bin/magento setup:upgrade
    php bin/magento setup:di:compile
    php bin/magento setup:static-content:deploy -f
    php bin/magento maintenance:disable
    php bin/magento cache:flush
    ```

### Manual Installation

1. Download the latest version of the plugin from the [releases](https://github.com/convert-cart/magento2-plugin/releases) page.
2. Extract the downloaded archive.
3. Upload the contents to the `app/code/convert-cart/analytics` directory of your Magento installation.
4. Run the following commands from the Magento root directory:

    ```sh
    bin/magento module:enable Convertcart_Analytics
    bin/magento setup:upgrade
    bin/magento setup:di:compile
    bin/magento setup:static-content:deploy -f
    bin/magento cache:clean
    bin/magento cache:flush
    ```

## Configure Domain Id

Please reach out to your Customer Support Manager to Configure your domain with Convert Cart.

## Troubleshooting

If you encounter issues, try the following steps:

1. Ensure the plugin is enabled: `bin/magento module:status Convertcart_Analytics`
2. Clear Magento cache: `bin/magento cache:clean`
3. Check the logs in `var/log` for any error messages.

## Uninstall

Please use the following command to uninstall the plugin and delete all the tables and settings related to the plugin,

      bin/magento module:uninstall Convertcart_Analytics

### Setting up folder & file permissions,

If you encounter folder permission issues on folder such as cache, please use the following commands to set the appropriate permissions for public files and directories:
- Goto magento2 directory

      find . -type f -exec chmod 644 {} \;
      find . -type d -exec chmod 755 {} \;
      find var pub/static pub/media app/etc generated/ -type f -exec chmod g+w {} \;
      find var pub/static pub/media app/etc generated/ -type d -exec chmod g+ws {} \;
      chown -R <magento user>:<web server group> . #(usually by default magento user and we user used to be www-data, check it with your server administrator)
      chmod u+x bin/magento

- 644 sets files to read and write for the owner, and read-only for group and others.
- 755 sets directories to read, write, and execute for the owner, and read and execute for group and others.

## Contact

Please contact [sales@convertcart.com](mailto:sales@convertcart.com) if any issues occur during the integration process.

## For Development

After making any changes to the master branch, you can create new version tags (for beta and production) by running the following command:

      sh tagger.sh VERSION_NUMBER

Make sure to replace `VERSION_NUMBER` with the actual version number you want to create.

--------------------------------------------------
File End
--------------------------------------------------


./composer.json
File type: .json
{
    "name": "convert-cart/analytics",
    "description": "Magento 2 plugin to integrate convertcart",
    "type": "magento2-module",
    "version": "1.0.8",
    "license": [
      "OSL-3.0",
      "AFL-3.0"
    ],
    "require": {
      "php": "~5.5.0|~5.6.0|^7.0|^8.0"
    },
    "maintainers": [
      {
        "name": "Udhay kumar",
        "email": "udhaya@convertcart.com",
        "homepage": "https://www.convertcart.com/"
      }
    ],
    "authors": [
      {
        "name": "Aamir",
        "email": "aamir@convertcart.com",
        "homepage": "https://www.convertcart.com/",
        "role": "Developer"
      },
      {
        "name": "Naveen SK",
        "email": "naveena@convertcart.com",
        "homepage": "https://www.convertcart.com/",
        "role": "Developer"
      },
      {
        "name": "Udhay kumar",
        "email": "udhaya@convertcart.com",
        "homepage": "https://www.convertcart.com/",
        "role": "Developer"
      }
    ],
    "autoload": {
      "files": [ "registration.php" ],
      "psr-4": {
        "Convertcart\\Analytics\\": ""
      }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./registration.php
File type: .php
<?php
 
\Magento\Framework\Component\ComponentRegistrar::register(
    \Magento\Framework\Component\ComponentRegistrar::MODULE,
    'Convertcart_Analytics',
    __DIR__
);

--------------------------------------------------
File End
--------------------------------------------------


./Helper/Data.php
File type: .php
<?php
namespace Convertcart\Analytics\Helper;

use Magento\Framework\Module\ModuleListInterface;

class Data extends \Magento\Framework\App\Helper\AbstractHelper
{

    /**
     * @var \Magento\Framework\App\Config\ScopeConfigInterface
     */
    protected $scopeConfig;

    protected $_moduleList;

    public function __construct(
        \Magento\Framework\App\Helper\Context $context,
        \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
        ModuleListInterface $moduleList
    ) {
        $this->scopeConfig = $scopeConfig;
        $this->_moduleList = $moduleList;
        parent::__construct(
            $context
        );
    }

    public function getEventType($event)
    {
        $eventMap = [
            'homepageViewed'      =>  'homepageViewed',
            'contentPageViewed'   =>  'contentPageViewed',
            'categoryViewed'      =>  'categoryViewed',
            'productViewed'       =>  'productViewed',
            'productsSearched'    =>  'productsSearched',
            'registered'          =>  'registered',
            'loggedIn'            =>  'loggedIn',
            'loggedOut'           =>  'loggedOut',
            'cartViewed'          =>  'cartViewed',
            'checkoutViewed'      =>  'checkoutViewed',
            'cartUpdated'         =>  'cartUpdated',
            'productAdded'        =>  'productAdded',
            'productRemoved'      =>  'productRemoved',
            'orderCompleted'      =>  'orderCompleted',
            'couponApplied'       =>  'couponApplied',
            'couponDenied'        =>  'couponDenied',
            'couponRemoved'       =>  'couponRemoved',
        ];
        if (!empty($eventMap[$event])) {
            return $eventMap[$event];
        } else {
            return 'default';
        }
    }

    public function isEnabled()
    {
        if ($this->getClientKey()) {
            return 1;
        } else {
            return false;
        }
    }

    public function getClientKey()
    {
        $clientKey = $this->scopeConfig->getValue('convertcart/configuration/domainid', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
        if (empty($clientKey)) {
            return false;
        } else {
            return $clientKey;
        }
    }

    public function getModuleVersion()
    {
        $ccModule = $this->_moduleList
            ->getOne('Convertcart_Analytics');
        return !empty($ccModule['setup_version']) ? $ccModule['setup_version'] : null;
    }

    public function sanitizeParam($param)
    {
        if ($param === null) {
            return null;
        }
        return strip_tags($param);
    }
}

--------------------------------------------------
File End
--------------------------------------------------


./Logger/Logger.php
File type: .php
<?php
namespace Convertcart\Analytics\Logger;

class Logger extends \Monolog\Logger
{
}

--------------------------------------------------
File End
--------------------------------------------------


./Logger/Handler.php
File type: .php
<?php
namespace Convertcart\Analytics\Logger;

use Monolog\Logger;

class Handler extends \Magento\Framework\Logger\Handler\Base
{
    /**
     * Logging level
     * @var int
     */
    protected $loggerType = Logger::INFO;

    /**
     * File name
     * @var string
     */
    protected $fileName = '/var/log/cc_analytics.log';
}


--------------------------------------------------
File End
--------------------------------------------------


./Api/SyncRepositoryInterface.php
File type: .php
<?php

namespace Convertcart\Analytics\Api;

use Convertcart\Analytics\Api\Data\SyncInterface;

interface SyncRepositoryInterface
{
    /**
     * Post Api data.
     *
     * @api
     *
     * @param int $limit
     * @param int $id
     * @param string $type
     *
     * @return array
     */
    public function getDeletedProduct($limit, $id, $type);
}


--------------------------------------------------
File End
--------------------------------------------------


./Api/PluginInfoInterface.php
File type: .php
<?php
namespace Convertcart\Analytics\Api;

interface PluginInfoInterface
{
    /**
     * Get plugin information.
     *
     * @api
     * @return \Convertcart\Analytics\Model\Data\PluginInfo
     */
    public function getPluginInfo();
}

--------------------------------------------------
File End
--------------------------------------------------


./Api/Data/PluginInfoInterface.php
File type: .php
<?php
namespace Convertcart\Analytics\Api\Data;

interface PluginInfoInterface
{
    const VERSION = 'version';
    const TABLES = 'tables';
    const TRIGGERS = 'triggers';

    /**
     * Get version
     *
     * @return string
     */
    public function getVersion();

    /**
     * Set version
     *
     * @param string $version
     * @return $this
     */
    public function setVersion($version);

    /**
     * Get tables
     *
     * @return array<string,bool>
     */
    public function getTables();

    /**
     * Set tables
     *
     * @param array<string,bool> $tables
     * @return $this
     */
    public function setTables($tables);

    /**
     * Get triggers
     *
     * @return array<string,bool>
     */
    public function getTriggers();

    /**
     * Set triggers
     *
     * @param array<string,bool> $triggers
     * @return $this
     */
    public function setTriggers($triggers);
} 

--------------------------------------------------
File End
--------------------------------------------------


./Api/Data/SyncInterface.php
File type: .php
<?php
/**
 * Copyright © Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
namespace Convertcart\Analytics\Api\Data;

/**
 * Interface SyncInterface
 * @api
 * @since 100.0.2
 */
interface SyncInterface extends \Magento\Framework\Api\ExtensibleDataInterface
{
    /**#@+
     * Constants for keys of data array. Identical to the name of the getter in snake case
     */
    public const ID = 'id';
    public const ITEM_ID = 'item_id';
    public const TYPE   = 'type';
    public const CREATED_AT = 'created_at';
    /**
     * Get ID.
     *
     * @return int
     */
    public function getId();

    /**
     * Set ID.
     *
     * @param integer $id
     *
     * @return $this
     */
    public function setId($id);

    /**
     * Get type.
     *
     * @return string
     */
    public function getType();
 
    /**
     * Set type.
     *
     * @param string $type
     *
     * @return $this
     */
    public function setType($type);

    /**
     * Get itemid.
     *
     * @return string
     */
    public function getItemId();
 
    /**
     * Set itemId.
     *
     * @param string $itemId
     *
     * @return $this
     */
    public function setItemId($itemId);
  
    /**
     * Get createdAt.
     *
     * @return string
     */
    public function getCreatedAt();
 
    /**
     * Set createdAt.
     *
     * @param string $createdAt
     *
     * @return $this
     */
    public function setCreatedAt($createdAt);
}


--------------------------------------------------
File End
--------------------------------------------------


./.git/packed-refs
File type: 
# pack-refs with: peeled fully-peeled sorted 
02d7d9a1e1b86643340ffb47c4a857fed6a74936 refs/remotes/origin/master
351bc48dfd30391e7e0762b29b1e5e16f9b2f7a1 refs/remotes/origin/updatingInstallSchema
46c34e553def623eb402aa22367502c6f0b06d02 refs/tags/1.0.1
^7527d066b0206d22477fe061f963e450c445e110
a9e614c888a64785a40e0463faf6dcdd0ce7e2e7 refs/tags/1.0.10
^b720f7532d1dbc43200648fbc1c701a7bbf8c1f7
6cc6cf57dcef2c2342e8b15956ff1bf7fdfd1b61 refs/tags/1.0.2
43f57064f80097c4a628374e3e081b155108f138 refs/tags/1.0.3
^f0b6a7b6b146e7466a26909770e594387c038917
4ba0ed9d4fc6caecb718979347dfe21c6218d550 refs/tags/1.0.4
9167999c5779db8ddd555ed39d91c497e31b1486 refs/tags/1.0.5
91474c0f164f9bcd5ceba18586c8d1e8aa2de652 refs/tags/1.0.6
^e84b76e61a24a1f9b69a04002acff0d57fff0c50
fb0547337d1402fff14cf4e4ea15fe496d88d4c8 refs/tags/1.0.6-beta
^7fcd6766d00aa0c1f9c24365864a5738bc893252
b8b4ea65d6477789e3b24f9ff503c3909d8d170f refs/tags/1.0.7
^12a5b7501c73e64f08e9dd27b840905947e45d9f
1bca03c976f3fae3b54bdb5e23ebbabe953afc02 refs/tags/1.0.7-beta
10be62854bc3c6d86aa5ad0e60e7b2e7298385e5 refs/tags/1.0.8
^8936ad2bb51feb5f0fe97b9e7c64bff05eea2373
aaabc1779ef48e3152d1bf0a024ceffc61f455c7 refs/tags/1.0.8-beta
^544e919a0181bb44faec52db0e6601b12087fd8a
b73bd5243be1d194cbb0ec98eebaf1600be4dfad refs/tags/1.0.9
^0de6415eed56c9cb7cd9980cc3197264af4ebeb7
68c6c7605077280b6dfc36b802c24c85aa20fbeb refs/tags/1.0.9-beta
^2566be2eb7f9f43efe8657a21e10c9d57d175931


--------------------------------------------------
File End
--------------------------------------------------


./.git/FETCH_HEAD
File type: 
34f6dad690d74926791a8652a9bad62706dafaf5		branch 'master' of github.com:convert-cart/magento2-plugin
097e73f464b266c9b4c890db32296a308421e2a1	not-for-merge	branch 'adding_logs' of github.com:convert-cart/magento2-plugin
3781a4f7333c3f041153d0f16916487ac98a862a	not-for-merge	branch 'fixing_return' of github.com:convert-cart/magento2-plugin
c81d132c106ee6919488db167f56f182b302e69c	not-for-merge	branch 'fixing_return_schema' of github.com:convert-cart/magento2-plugin
fb2bb8426a12c58c6a36cb2d671a629d4c2cd49f	not-for-merge	branch 'logs_added' of github.com:convert-cart/magento2-plugin
0ef358be0181adc3be68f3044a9c541313cff9a8	not-for-merge	branch 'plugin_fix' of github.com:convert-cart/magento2-plugin
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c	not-for-merge	branch 'plugin_update' of github.com:convert-cart/magento2-plugin
8e70db2e254d5fbb06107ee09adb54406776c82a	not-for-merge	branch 'return_fix' of github.com:convert-cart/magento2-plugin
9d03d3cb16eed7650e39c85c1abf20ff48084e7d	not-for-merge	branch 'sample_fix' of github.com:convert-cart/magento2-plugin
56619506609c4036931b17c179f16e68fb038bdf	not-for-merge	branch 'test_return_feature' of github.com:convert-cart/magento2-plugin
351bc48dfd30391e7e0762b29b1e5e16f9b2f7a1	not-for-merge	branch 'updatingInstallSchema' of github.com:convert-cart/magento2-plugin
9a2d90a5247be294b0ae2cb212a476a9d880c8e1	not-for-merge	branch 'updating_di_file' of github.com:convert-cart/magento2-plugin
334bba386c8a9409df807a3d09e778fa5b27f87b	not-for-merge	branch 'updating_pluginInterface' of github.com:convert-cart/magento2-plugin
eb3853596eebebf8cba04f8e33ebbe71f952b90e	not-for-merge	branch 'updating_plugininfo' of github.com:convert-cart/magento2-plugin
b95a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c	not-for-merge	branch 'updating_return' of github.com:convert-cart/magento2-plugin


--------------------------------------------------
File End
--------------------------------------------------


./.git/ORIG_HEAD
File type: 
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c


--------------------------------------------------
File End
--------------------------------------------------


./.git/config
File type: 
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
[remote "origin"]
	url = git@github.com:convert-cart/magento2-plugin.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
	vscode-merge-base = origin/master
[branch "sample_fix"]
	remote = origin
	merge = refs/heads/sample_fix
	vscode-merge-base = origin/sample_fix


--------------------------------------------------
File End
--------------------------------------------------


./.git/description
File type: 
Unnamed repository; edit this file 'description' to name the repository.


--------------------------------------------------
File End
--------------------------------------------------


./.git/HEAD
File type: 
ref: refs/heads/sample_fix


--------------------------------------------------
File End
--------------------------------------------------


./.git/COMMIT_EDITMSG
File type: 
Plugin for fix


--------------------------------------------------
File End
--------------------------------------------------


./.git/info/exclude
File type: 
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/HEAD
File type: 
0000000000000000000000000000000000000000 02d7d9a1e1b86643340ffb47c4a857fed6a74936 Udhay Kumar <udhaya@convertcart.com> 1739788858 +0530	clone: from github.com:convert-cart/magento2-plugin.git
02d7d9a1e1b86643340ffb47c4a857fed6a74936 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739788948 +0530	pull origin master: Fast-forward
89d2e811122c7db013db4699ccef0c65743e2f0a 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739789062 +0530	checkout: moving from master to master
89d2e811122c7db013db4699ccef0c65743e2f0a 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739789065 +0530	checkout: moving from master to temp-tagging-branch
89d2e811122c7db013db4699ccef0c65743e2f0a 656f85961b8b57fcd5b5631787afd28c3408f3c9 Udhay Kumar <udhaya@convertcart.com> 1739789071 +0530	commit: Release beta version 1.0.11-beta
656f85961b8b57fcd5b5631787afd28c3408f3c9 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739789074 +0530	checkout: moving from temp-tagging-branch to master
89d2e811122c7db013db4699ccef0c65743e2f0a d8cad03c0fcea876a411fd805ad69d6409a6e51e Udhay Kumar <udhaya@convertcart.com> 1740481726 +0530	pull origin master: Fast-forward
d8cad03c0fcea876a411fd805ad69d6409a6e51e c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740481932 +0530	commit: Fix - data_version column of setup_module not getting updated
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482006 +0530	checkout: moving from master to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482009 +0530	checkout: moving from master to temp-tagging-branch
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c f8435c1f39bbfdcbd4cadcca7ca57f5442c7bbcd Udhay Kumar <udhaya@convertcart.com> 1740482020 +0530	commit: Release version 1.0.11
f8435c1f39bbfdcbd4cadcca7ca57f5442c7bbcd 7a8f773a67ac51ca93b819934c4f81fdb2f809cd Udhay Kumar <udhaya@convertcart.com> 1740482020 +0530	commit: Release beta version 1.0.11-beta
7a8f773a67ac51ca93b819934c4f81fdb2f809cd c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482020 +0530	checkout: moving from temp-tagging-branch to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482064 +0530	checkout: moving from master to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482067 +0530	checkout: moving from master to temp-tagging-branch
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 033e2604386d623f522cde5b9a4a49b6478f56cc Udhay Kumar <udhaya@convertcart.com> 1740482091 +0530	commit: Release version 1.0.11
033e2604386d623f522cde5b9a4a49b6478f56cc c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740482092 +0530	checkout: moving from temp-tagging-branch to master
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 34f6dad690d74926791a8652a9bad62706dafaf5 Udhay Kumar <udhaya@convertcart.com> 1741006066 +0530	pull origin master: Fast-forward
34f6dad690d74926791a8652a9bad62706dafaf5 9d03d3cb16eed7650e39c85c1abf20ff48084e7d Udhay Kumar <udhaya@convertcart.com> 1741006241 +0530	checkout: moving from master to sample_fix
9d03d3cb16eed7650e39c85c1abf20ff48084e7d 39099ca1214fbca213a03ad62137b69b9b5a4836 Udhay Kumar <udhaya@convertcart.com> 1741007870 +0530	commit: Fix for response structure issue
39099ca1214fbca213a03ad62137b69b9b5a4836 b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 Udhay Kumar <udhaya@convertcart.com> 1741008524 +0530	commit: Fix for response structure issue
b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 d85f1a3757e543aaa0a63016cbb80c4752e3620d Udhay Kumar <udhaya@convertcart.com> 1741009018 +0530	commit: Fix for response structure issue
d85f1a3757e543aaa0a63016cbb80c4752e3620d c465a0e9da5c8dd64ca48da102d78f0a0d1f74da Udhay Kumar <udhaya@convertcart.com> 1741009495 +0530	commit: Fix for response structure issue
c465a0e9da5c8dd64ca48da102d78f0a0d1f74da 4467a87c8a8ef020bec29fe7751e86600be76724 Udhay Kumar <udhaya@convertcart.com> 1741330396 +0530	commit: Fix for response structure issue
4467a87c8a8ef020bec29fe7751e86600be76724 a7fafba0520173b68d2345e8370102c9d3714a47 Udhay Kumar <udhaya@convertcart.com> 1741331225 +0530	commit: Fix for response structure issue
a7fafba0520173b68d2345e8370102c9d3714a47 83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 Udhay Kumar <udhaya@convertcart.com> 1741331887 +0530	commit: Fix for response structure issue
83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 9324e599072a83b3fa729f8ae50b52955e3aa347 Udhay Kumar <udhaya@convertcart.com> 1741332329 +0530	commit: Fix for response structure issue
9324e599072a83b3fa729f8ae50b52955e3aa347 03e41b41532ec39281c74723bc3efd20c1a4d5b4 Udhay Kumar <udhaya@convertcart.com> 1741335073 +0530	commit: Fix for response structure issue
03e41b41532ec39281c74723bc3efd20c1a4d5b4 878b26b4bc815fd8bb636369f2a72f0e3f6a2434 Udhay Kumar <udhaya@convertcart.com> 1741336071 +0530	commit: Fix for response structure issue
878b26b4bc815fd8bb636369f2a72f0e3f6a2434 97da47f7403bcf24f1c2192ae877836da76cb402 Udhay Kumar <udhaya@convertcart.com> 1741336758 +0530	commit: Plugin for fix


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/heads/master
File type: 
0000000000000000000000000000000000000000 02d7d9a1e1b86643340ffb47c4a857fed6a74936 Udhay Kumar <udhaya@convertcart.com> 1739788858 +0530	clone: from github.com:convert-cart/magento2-plugin.git
02d7d9a1e1b86643340ffb47c4a857fed6a74936 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739788948 +0530	pull origin master: Fast-forward
89d2e811122c7db013db4699ccef0c65743e2f0a d8cad03c0fcea876a411fd805ad69d6409a6e51e Udhay Kumar <udhaya@convertcart.com> 1740481726 +0530	pull origin master: Fast-forward
d8cad03c0fcea876a411fd805ad69d6409a6e51e c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740481932 +0530	commit: Fix - data_version column of setup_module not getting updated
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 34f6dad690d74926791a8652a9bad62706dafaf5 Udhay Kumar <udhaya@convertcart.com> 1741006066 +0530	pull origin master: Fast-forward


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/heads/sample_fix
File type: 
0000000000000000000000000000000000000000 9d03d3cb16eed7650e39c85c1abf20ff48084e7d Udhay Kumar <udhaya@convertcart.com> 1741006241 +0530	branch: Created from refs/remotes/origin/sample_fix
9d03d3cb16eed7650e39c85c1abf20ff48084e7d 39099ca1214fbca213a03ad62137b69b9b5a4836 Udhay Kumar <udhaya@convertcart.com> 1741007870 +0530	commit: Fix for response structure issue
39099ca1214fbca213a03ad62137b69b9b5a4836 b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 Udhay Kumar <udhaya@convertcart.com> 1741008524 +0530	commit: Fix for response structure issue
b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 d85f1a3757e543aaa0a63016cbb80c4752e3620d Udhay Kumar <udhaya@convertcart.com> 1741009018 +0530	commit: Fix for response structure issue
d85f1a3757e543aaa0a63016cbb80c4752e3620d c465a0e9da5c8dd64ca48da102d78f0a0d1f74da Udhay Kumar <udhaya@convertcart.com> 1741009495 +0530	commit: Fix for response structure issue
c465a0e9da5c8dd64ca48da102d78f0a0d1f74da 4467a87c8a8ef020bec29fe7751e86600be76724 Udhay Kumar <udhaya@convertcart.com> 1741330396 +0530	commit: Fix for response structure issue
4467a87c8a8ef020bec29fe7751e86600be76724 a7fafba0520173b68d2345e8370102c9d3714a47 Udhay Kumar <udhaya@convertcart.com> 1741331225 +0530	commit: Fix for response structure issue
a7fafba0520173b68d2345e8370102c9d3714a47 83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 Udhay Kumar <udhaya@convertcart.com> 1741331887 +0530	commit: Fix for response structure issue
83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 9324e599072a83b3fa729f8ae50b52955e3aa347 Udhay Kumar <udhaya@convertcart.com> 1741332329 +0530	commit: Fix for response structure issue
9324e599072a83b3fa729f8ae50b52955e3aa347 03e41b41532ec39281c74723bc3efd20c1a4d5b4 Udhay Kumar <udhaya@convertcart.com> 1741335073 +0530	commit: Fix for response structure issue
03e41b41532ec39281c74723bc3efd20c1a4d5b4 878b26b4bc815fd8bb636369f2a72f0e3f6a2434 Udhay Kumar <udhaya@convertcart.com> 1741336071 +0530	commit: Fix for response structure issue
878b26b4bc815fd8bb636369f2a72f0e3f6a2434 97da47f7403bcf24f1c2192ae877836da76cb402 Udhay Kumar <udhaya@convertcart.com> 1741336758 +0530	commit: Plugin for fix


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/master
File type: 
02d7d9a1e1b86643340ffb47c4a857fed6a74936 89d2e811122c7db013db4699ccef0c65743e2f0a Udhay Kumar <udhaya@convertcart.com> 1739788948 +0530	pull origin master: fast-forward
89d2e811122c7db013db4699ccef0c65743e2f0a d8cad03c0fcea876a411fd805ad69d6409a6e51e Udhay Kumar <udhaya@convertcart.com> 1740481726 +0530	pull origin master: fast-forward
d8cad03c0fcea876a411fd805ad69d6409a6e51e c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1740481938 +0530	update by push
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c 34f6dad690d74926791a8652a9bad62706dafaf5 Udhay Kumar <udhaya@convertcart.com> 1741006066 +0530	pull origin master: fast-forward


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/fixing_return_schema
File type: 
0000000000000000000000000000000000000000 c81d132c106ee6919488db167f56f182b302e69c Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/return_fix
File type: 
0000000000000000000000000000000000000000 8e70db2e254d5fbb06107ee09adb54406776c82a Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_pluginInterface
File type: 
0000000000000000000000000000000000000000 334bba386c8a9409df807a3d09e778fa5b27f87b Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/logs_added
File type: 
0000000000000000000000000000000000000000 fb2bb8426a12c58c6a36cb2d671a629d4c2cd49f Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_plugininfo
File type: 
0000000000000000000000000000000000000000 eb3853596eebebf8cba04f8e33ebbe71f952b90e Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/sample_fix
File type: 
0000000000000000000000000000000000000000 9d03d3cb16eed7650e39c85c1abf20ff48084e7d Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head
9d03d3cb16eed7650e39c85c1abf20ff48084e7d 39099ca1214fbca213a03ad62137b69b9b5a4836 Udhay Kumar <udhaya@convertcart.com> 1741007883 +0530	update by push
39099ca1214fbca213a03ad62137b69b9b5a4836 b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 Udhay Kumar <udhaya@convertcart.com> 1741008529 +0530	update by push
b6822b5e5df0ff6397f311e33e1b9df3fa1f28d9 d85f1a3757e543aaa0a63016cbb80c4752e3620d Udhay Kumar <udhaya@convertcart.com> 1741009023 +0530	update by push
d85f1a3757e543aaa0a63016cbb80c4752e3620d c465a0e9da5c8dd64ca48da102d78f0a0d1f74da Udhay Kumar <udhaya@convertcart.com> 1741009500 +0530	update by push
c465a0e9da5c8dd64ca48da102d78f0a0d1f74da 4467a87c8a8ef020bec29fe7751e86600be76724 Udhay Kumar <udhaya@convertcart.com> 1741330402 +0530	update by push
4467a87c8a8ef020bec29fe7751e86600be76724 a7fafba0520173b68d2345e8370102c9d3714a47 Udhay Kumar <udhaya@convertcart.com> 1741331230 +0530	update by push
a7fafba0520173b68d2345e8370102c9d3714a47 83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 Udhay Kumar <udhaya@convertcart.com> 1741331892 +0530	update by push
83b0a7bea40352a59c2bba91b3dd4da1ce990bd5 9324e599072a83b3fa729f8ae50b52955e3aa347 Udhay Kumar <udhaya@convertcart.com> 1741332335 +0530	update by push
9324e599072a83b3fa729f8ae50b52955e3aa347 03e41b41532ec39281c74723bc3efd20c1a4d5b4 Udhay Kumar <udhaya@convertcart.com> 1741335079 +0530	update by push
03e41b41532ec39281c74723bc3efd20c1a4d5b4 878b26b4bc815fd8bb636369f2a72f0e3f6a2434 Udhay Kumar <udhaya@convertcart.com> 1741336076 +0530	update by push
878b26b4bc815fd8bb636369f2a72f0e3f6a2434 97da47f7403bcf24f1c2192ae877836da76cb402 Udhay Kumar <udhaya@convertcart.com> 1741336764 +0530	update by push


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/adding_logs
File type: 
0000000000000000000000000000000000000000 097e73f464b266c9b4c890db32296a308421e2a1 Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/plugin_fix
File type: 
0000000000000000000000000000000000000000 0ef358be0181adc3be68f3044a9c541313cff9a8 Udhay Kumar <udhaya@convertcart.com> 1740482012 +0530	fetch --tags: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/plugin_update
File type: 
0000000000000000000000000000000000000000 c7451c6bc63ce9ecde9dfef061fefc7ce836b03c Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_return
File type: 
0000000000000000000000000000000000000000 b95a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/HEAD
File type: 
0000000000000000000000000000000000000000 02d7d9a1e1b86643340ffb47c4a857fed6a74936 Udhay Kumar <udhaya@convertcart.com> 1739788858 +0530	clone: from github.com:convert-cart/magento2-plugin.git


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/test_return_feature
File type: 
0000000000000000000000000000000000000000 56619506609c4036931b17c179f16e68fb038bdf Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/updating_di_file
File type: 
0000000000000000000000000000000000000000 9a2d90a5247be294b0ae2cb212a476a9d880c8e1 Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/logs/refs/remotes/origin/fixing_return
File type: 
0000000000000000000000000000000000000000 3781a4f7333c3f041153d0f16916487ac98a862a Udhay Kumar <udhaya@convertcart.com> 1741006235 +0530	fetch origin: storing head


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/heads/master
File type: 
34f6dad690d74926791a8652a9bad62706dafaf5


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/heads/sample_fix
File type: 
97da47f7403bcf24f1c2192ae877836da76cb402


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/tags/1.0.11
File type: .11
ffbc7080096fe1aaa338d710132c60dfb79b5d7c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/master
File type: 
34f6dad690d74926791a8652a9bad62706dafaf5


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/fixing_return_schema
File type: 
c81d132c106ee6919488db167f56f182b302e69c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/return_fix
File type: 
8e70db2e254d5fbb06107ee09adb54406776c82a


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_pluginInterface
File type: 
334bba386c8a9409df807a3d09e778fa5b27f87b


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/logs_added
File type: 
fb2bb8426a12c58c6a36cb2d671a629d4c2cd49f


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_plugininfo
File type: 
eb3853596eebebf8cba04f8e33ebbe71f952b90e


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/sample_fix
File type: 
97da47f7403bcf24f1c2192ae877836da76cb402


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/adding_logs
File type: 
097e73f464b266c9b4c890db32296a308421e2a1


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/plugin_fix
File type: 
0ef358be0181adc3be68f3044a9c541313cff9a8


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/plugin_update
File type: 
c7451c6bc63ce9ecde9dfef061fefc7ce836b03c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_return
File type: 
b95a1f81b7af8ebcf7ea9d19c5ba994a00fcad8c


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/HEAD
File type: 
ref: refs/remotes/origin/master


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/test_return_feature
File type: 
56619506609c4036931b17c179f16e68fb038bdf


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/updating_di_file
File type: 
9a2d90a5247be294b0ae2cb212a476a9d880c8e1


--------------------------------------------------
File End
--------------------------------------------------


./.git/refs/remotes/origin/fixing_return
File type: 
3781a4f7333c3f041153d0f16916487ac98a862a


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-merge-commit.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-rebase.sample
File type: .sample
#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/commit-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/fsmonitor-watchman.sample
File type: .sample
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-push.sample
File type: .sample
#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/prepare-commit-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/sendemail-validate.sample
File type: .sample
#!/bin/sh

# An example hook script to validate a patch (and/or patch series) before
# sending it via email.
#
# The hook should exit with non-zero status after issuing an appropriate
# message if it wants to prevent the email(s) from being sent.
#
# To enable this hook, rename this file to "sendemail-validate".
#
# By default, it will only check that the patch(es) can be applied on top of
# the default upstream branch without conflicts in a secondary worktree. After
# validation (successful or not) of the last patch of a series, the worktree
# will be deleted.
#
# The following config variables can be set to change the default remote and
# remote ref that are used to apply the patches against:
#
#   sendemail.validateRemote (default: origin)
#   sendemail.validateRemoteRef (default: HEAD)
#
# Replace the TODO placeholders with appropriate checks according to your
# needs.

validate_cover_letter () {
	file="$1"
	# TODO: Replace with appropriate checks (e.g. spell checking).
	true
}

validate_patch () {
	file="$1"
	# Ensure that the patch applies without conflicts.
	git am -3 "$file" || return
	# TODO: Replace with appropriate checks for this patch
	# (e.g. checkpatch.pl).
	true
}

validate_series () {
	# TODO: Replace with appropriate checks for the whole series
	# (e.g. quick build, coding style checks, etc.).
	true
}

# main -------------------------------------------------------------------------

if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
then
	remote=$(git config --default origin --get sendemail.validateRemote) &&
	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
	git config --replace-all sendemail.validateWorktree "$worktree"
else
	worktree=$(git config --get sendemail.validateWorktree)
fi || {
	echo "sendemail-validate: error: failed to prepare worktree" >&2
	exit 1
}

unset GIT_DIR GIT_WORK_TREE
cd "$worktree" &&

if grep -q "^diff --git " "$1"
then
	validate_patch "$1"
else
	validate_cover_letter "$1"
fi &&

if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
then
	git config --unset-all sendemail.validateWorktree &&
	trap 'git worktree remove -ff "$worktree"' EXIT &&
	validate_series
fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/push-to-checkout.sample
File type: .sample
#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/post-update.sample
File type: .sample
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-commit.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/applypatch-msg.sample
File type: .sample
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-receive.sample
File type: .sample
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/update.sample
File type: .sample
#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0


--------------------------------------------------
File End
--------------------------------------------------


./.git/hooks/pre-applypatch.sample
File type: .sample
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:


--------------------------------------------------
File End
--------------------------------------------------


./Block/Script.php
File type: .php
<?php
namespace Convertcart\Analytics\Block;

class Script extends \Magento\Framework\View\Element\Template
{
}

--------------------------------------------------
File End
--------------------------------------------------


./Observer/ProcessCategoryAfterDeleteEventObserver.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\Observer;
use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\App\ResourceConnection;
use Convertcart\Analytics\Model\SyncFactory;

class ProcessCategoryAfterDeleteEventObserver implements ObserverInterface
{

    /**
     * @var \Convertcart\Analytics\Model\SyncFactory
     */
    protected $_deletedCategory;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    public function __construct(
        \Convertcart\Analytics\Model\SyncFactory $deletedCategory,
        \Convertcart\Analytics\Logger\Logger $_logger
    ) {
        $this->_logger = $_logger;
        $this->_deletedCategory = $deletedCategory;
    }

    public function execute(Observer $observer)
    {
        try {
            $eventCategory = $observer->getEvent()->getCategory();
            $model = $this->_deletedCategory->create();
            $model->addData(["item_id" => $eventCategory->getId()]);
            $model->addData(["type" => "category"]);
            $saveData = $model->save();
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/ContentpageViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class ContentpageViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'contentPageViewed';
            $eventData = [];
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/HomepageViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class HomepageViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'homepageViewed';
            $eventData= [];
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/AddScript.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\View\LayoutInterface;

class AddScript implements ObserverInterface
{
    /**
     * @var \Magento\Framework\View\LayoutInterface
     */
    protected $_layout;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Convertcart\Analytics\Helper\Data
     */
    protected $_dataHelper;

    public function __construct(
        LayoutInterface $_layout,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Helper\Data $_dataHelper,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_dataHelper = $_dataHelper;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
        $this->_layout = $_layout;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $initScript = $this->_ccModel->getInitScript();
            if (empty($initScript)) {
                return;
            }

            $layout = $this->_layout;
            if (!is_object($layout)) {
                return;
            }

            $head = $layout->getBlock('head.additional');
            if (!is_object($head)) {
                return;
            }
            $head->append($initScript);
            $this->attachEvents($head);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }

    private function attachEvents($head)
    {
        if (!is_object($head)) {
            return;
        }
        $ccEvents = $this->_ccModel->fetchCcEvents();
        if (empty($ccEvents) or !is_array($ccEvents)) {
            return;
        }
        foreach ($ccEvents as $ccEvent) {
            $eventBlock = $this->_ccModel->getEventScript($ccEvent);
            $head->append($eventBlock);
        }
    }
}





--------------------------------------------------
File End
--------------------------------------------------


./Observer/ProductsSearched.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\App\Request\Http;

class ProductsSearched implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Convertcart\Analytics\Helper\Data
     */
    protected $_dataHelper;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel,
        \Convertcart\Analytics\Helper\Data $_dataHelper
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
        $this->_dataHelper = $_dataHelper;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'productsSearched';
            $eventData = [];
            $query = $observer->getDataObject();
            if (is_object($query)) {
                $eventData['query'] = $this->_dataHelper->sanitizeParam($query->getQueryText());
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}

--------------------------------------------------
File End
--------------------------------------------------


./Observer/ProcessProductAfterDeleteEventObserver.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer;

use Magento\Framework\Event\Observer;
use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\App\ResourceConnection;
use Convertcart\Analytics\Model\SyncFactory;

class ProcessProductAfterDeleteEventObserver implements ObserverInterface
{

    /**
     * @var \Convertcart\Analytics\Model\SyncFactory
     */
    protected $_deletedProduct;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    public function __construct(
        \Convertcart\Analytics\Model\SyncFactory $deletedProduct,
        \Convertcart\Analytics\Logger\Logger $_logger
    ) {
        $this->_logger = $_logger;
        $this->_deletedProduct = $deletedProduct;
    }

    public function execute(Observer $observer)
    {
        try {
            $eventProduct = $observer->getEvent()->getProduct();
            $model = $this->_deletedProduct->create();
            $model->addData(["item_id" => $eventProduct->getId()]);
            $model->addData(["type" => "product"]);
            $saveData = $model->save();
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Cart/OrderCompleted.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Cart;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\Registry;
use Magento\CatalogInventory\Api\StockRegistryInterface;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Framework\View\LayoutInterface;
use Magento\Sales\Model\OrderFactory;
use \Psr\Log\LoggerInterface;

class OrderCompleted implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Sales\Model\OrderFactory
     */
    protected $_salesOrderFactory;

    protected $_dataHelper;

    public function __construct(
        StoreManagerInterface $storeManager,
        OrderFactory $_salesOrderFactory,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_storeManager = $storeManager;
        $this->_salesOrderFactory = $_salesOrderFactory;
        $this->_ccModel = $_ccModel;
        $this->_logger = $_logger;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $orderIds = $observer->getData('order_ids');
            if (!is_array($orderIds) || empty($orderIds[0])) {
                return;
            }

            $eventData = [];
            $eventData['items'] = [];
            $store = $this->_storeManager->getStore();
            $currency = is_object($store) ? $store->getCurrentCurrencyCode() : null;
            $order = $this->_salesOrderFactory->create()->load($orderIds[0]);
            if (!is_object($order)) {
                return;
            }

            foreach ($order->getAllVisibleItems() as $item) {
                $orderItem = [];
                $orderItem['name'] = str_replace("'", "", $item->getName());
                $orderItem['price'] = $item->getPrice();
                $orderItem['currency'] = $currency;
                $orderItem['quantity'] = $item->getQtyOrdered();
                $orderItem['id'] = $item->getProductId();
                $orderItem['sku'] = $item->getSku();

                $product = $item->getProduct();
                if (is_object($product)) {
                    $orderItem['url'] = $product->getProductUrl();
                }
                $eventData['items'][] = $orderItem;
            }

            $eventData['orderId'] = $order->getIncrementId();
            $eventData['order_email'] = $order->getCustomerEmail();
            $eventData['currency'] = $currency;
            $eventData['is_guest'] = $order->getCustomerIsGuest();
            $eventData['coupon_code'] = $order->getCouponCode();
            $eventData['shipping_method'] = $order->getShippingDescription();
            $eventData['payment_method'] = $order->getPayment()->getMethod();
            $eventData['status'] = $order->getStatus();
            $eventData['currency'] = $currency;
            $eventData['total'] = $order->getGrandTotal();

            // $ccData['event_data']['shipping_amount'] = $cc->getValue($order->getShippingAmount());
            // $ccData['event_data']['tax_amount'] = $cc->getValue($order->getTaxAmount());
            // $ccData['event_data']['discount_amount'] = $cc->getValue($order->getDiscountAmount());
            // $ccView['event_data']['subtotal'] = $cc->getValue($order->getSubtotal());

            // $ccData['event_data']['base_total'] = $cc->getValue($order->getBaseGrandTotal());
            // $ccData['event_data']['total_due'] = $cc->getValue($order->getTotalDue());
            // $ccData['event_data']['base_total_due'] = $cc->getValue($order->getBaseTotalDue());

            $eventName = 'orderCompleted';
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->log(null, $e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Cart/CartViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Cart;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Checkout\Model\Session;

class CartViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Checkout\Model\Session
     */
    protected $_checkoutSession;

    public function __construct(
        StoreManagerInterface $_storeManager,
        Session $_checkoutSession,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_checkoutSession = $_checkoutSession;
        $this->_storeManager = $_storeManager;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName  = 'cartViewed';
            $eventData = [];
            if (!empty($this->_checkoutSession) && is_object($this->_checkoutSession)) {
                $store = $this->_storeManager->getStore();
                $currency = is_object($store) ? $store->getCurrentCurrencyCode() : null;
                $eventData = $this->_ccModel->getCartEventData($this->_checkoutSession->getQuote(), $currency);
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Cart/CheckoutViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Cart;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Checkout\Model\Session;

class CheckoutViewed implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Checkout\Model\Session
     */
    protected $_checkoutSession;

    public function __construct(
        StoreManagerInterface $_storeManager,
        Session $_checkoutSession,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_checkoutSession = $_checkoutSession;
        $this->_storeManager = $_storeManager;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName  = 'checkoutViewed';
            $eventData = [];
            if (!empty($this->_checkoutSession) && is_object($this->_checkoutSession)) {
                $store = $this->_storeManager->getStore();
                $currency = is_object($store) ? $store->getCurrentCurrencyCode() : null;
                $eventData = $this->_ccModel->getCartEventData($this->_checkoutSession->getQuote(), $currency);
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Customer/LoggedOut.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Customer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class LoggedOut implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $customer = $observer->getCustomer();
            $eventName = 'loggedOut';
            $eventData = $this->_ccModel->getCustomerData($customer);
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Customer/LoggedIn.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Customer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class LoggedIn implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $customer = $observer->getCustomer();
            $eventName = 'loggedIn';
            $eventData = $this->_ccModel->getCustomerData($customer);
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Customer/CustomerRegistered.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Customer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;

class CustomerRegistered implements ObserverInterface
{
    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $customer = $observer->getCustomer();
            $eventName = 'registered';
            $eventData = $this->_ccModel->getCustomerData($customer);
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Catalog/CategoryViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Catalog;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\Registry;

class CategoryViewed implements ObserverInterface
{
    /**
     * @var \Magento\Framework\Registry
     */
    protected $_registry;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        Registry $_registry,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_registry = $_registry;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'categoryViewed';
            $eventData = [];
            $category = $this->_registry->registry('current_category');
            if (is_object($category)) {
                $eventData['name'] = $category->getName();
                $eventData['id'] = $category->getId();
                $eventData['url'] = $category->getUrl();
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Observer/Catalog/ProductViewed.php
File type: .php
<?php
namespace Convertcart\Analytics\Observer\Catalog;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;
use Magento\Framework\Registry;
use Magento\CatalogInventory\Api\StockRegistryInterface;
use Magento\Store\Model\StoreManagerInterface;
use Magento\ConfigurableProduct\Model\Product\Type\ConfigurableFactory;

class ProductViewed implements ObserverInterface
{
    /**
     * @var \Magento\Framework\Registry
     */
    protected $_registry;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_stockItemRepository;

    /**
     * @var \Magento\ConfigurableProduct\Model\Product\Type\ConfigurableFactory
     */
    protected $_configurableProductProductTypeConfigurableFactory;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\Cc
     */
    protected $_ccModel;

    public function __construct(
        Registry $_registry,
        StockRegistryInterface $_stockItemRepository,
        StoreManagerInterface $_storeManager,
        ConfigurableFactory $_configurableProductProductTypeConfigurableFactory,
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\Cc $_ccModel
    ) {
        $this->_registry = $_registry;
        $this->_stockItemRepository = $_stockItemRepository;
        $this->_storeManager = $_storeManager;
        $this->_configurableProductProductTypeConfigurableFactory = $_configurableProductProductTypeConfigurableFactory;
        $this->_logger = $_logger;
        $this->_ccModel = $_ccModel;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        try {
            $eventName = 'productViewed';
            $eventData = [];
            $product = $this->_registry->registry('current_product');
            if (is_object($product)) {
                $eventData = [
                    'id' => $product->getId(),
                    'url' => $product->getProductUrl(),
                    'name' => $product->getName(),
                    'price' => $product->getPrice(),
                    'final_price' => $product->getFinalPrice(),
                    'sku' => $product->getSku(),
                    'type' => $product->getTypeId()
                ];

                $store = $this->_storeManager->getStore();
                $eventData['currency'] = is_object($store) ? $store->getCurrentCurrencyCode() : null;
                if (!empty($product->getImage())) {
                    $eventData['image'] = $store->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
                    $eventData['image'].= 'catalog/product'.$product->getImage();
                } else {
                    $eventData['image'] = null;
                }
                $stock = $this->_stockItemRepository->getStockItem($product->getId());
                $eventData['is_in_stock'] = is_object($stock) ? $stock->getIsInStock() : null;
                if ($eventData['type'] == "configurable") {
                    $eventData['product_type'] = "parent";
                    $childProducts = $this->_configurableProductProductTypeConfigurableFactory->create()
                                        ->getChildrenIds($product->getId());
                    $eventData['child_ids'] = $childProducts[0];
                } else {
                    $eventData['product_type'] = "simple";
                }
            }
            $this->_ccModel->storeCcEvents($eventName, $eventData);
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/SyncManagement.php
File type: .php
<?php

namespace Convertcart\Analytics\Model;

use Convertcart\Analytics\Api\Data\SyncInterface;

class SyncManagement implements SyncInterface, \Magento\Framework\DataObject\IdentityInterface
{

    public const CACHE_TAG = 'Convertcart_Analytics';

    protected function _construct()
    {
        /* _init($resourceModel)  */
        $this->_init(\Convertcart\Analytics\Model\ResourceModel\Sync::class);
    }

    public function getIdentities()
    {
        return [self::CACHE_TAG . '_' . $this->getId()];
    }

    /**
     * Get ID.
     *
     * @return int
     */
    public function getId()
    {
        return $this->getData(self::ID);
    }

    /**
     * Set ID.
     *
     * @param int $id
     *
     * @return SyncInterface
     */
    public function setId($id)
    {
        return $this->setData(self::ID, $id);
    }

    /**
     * Get TYPE.
     *
     * @return string
     */
    public function getType()
    {
        return $this->getData(self::TYPE);
    }

    /**
     * Set type.
     *
     * @param string $type
     *
     * @return SyncInterface
     */
    public function setType($type)
    {
        return $this->setData(self::TYPE, $type);
    }

    /**
     * Get itemId.
     *
     * @return string|null
     */
    public function getItemId()
    {
        return $this->getData(self::ITEM_ID);
    }

    /**
     * Set itemId.
     *
     * @param string $itemId
     *
     * @return SyncInterface
     */
    public function setItemId($itemId)
    {
        return $this->setData(self::ITEM_ID, $itemId);
    }

    /**
     * Get createdAt.
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->getData(self::CREATED_AT);
    }

    /**
     * Set createdAt.
     *
     * @param string $createdAt
     *
     * @return SyncInterface
     */
    public function setCreatedAt($createdAt)
    {
        return $this->setData(self::CREATED_AT, $createdAt);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Sync.php
File type: .php
<?php


namespace Convertcart\Analytics\Model;

use Magento\Framework\Model\AbstractModel;

class Sync extends AbstractModel
{
    protected function _construct()
    {
        $this->_init(ResourceModel\Sync::class);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Cc.php
File type: .php
<?php
namespace Convertcart\Analytics\Model;

use Magento\Framework\Session\SessionManagerInterface;
use Magento\Framework\View\LayoutInterface;
use Magento\Store\Model\StoreManagerInterface;

class Cc extends \Magento\Framework\Session\SessionManager
{
    /**
     * @var \Magento\Framework\View\LayoutInterface
     */
    protected $_layout;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $_storeManager;

    /**
     * @var \Convertcart\Analytics\Helper\Data
     */
    protected $_dataHelper;

    /**
     * @var \Magento\Framework\Session\SessionManagerInterface
     */
    protected $_fwSession;

    public function __construct(
        LayoutInterface $_layout,
        StoreManagerInterface $_storeManager,
        SessionManagerInterface $_fwSession,
        \Convertcart\Analytics\Helper\Data $_dataHelper
    ) {
        $this->_layout = $_layout;
        $this->_storeManager = $_storeManager;
        $this->_fwSession = $_fwSession;
        $this->_dataHelper = $_dataHelper;
    }

    public function getInitScript()
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }

        $clientKey = $this->_dataHelper->getClientKey();
        if (empty($clientKey)) {
            return;
        }
        $script = $this->_layout->createBlock('Convertcart\Analytics\Block\Script')
                ->setTemplate('Convertcart_Analytics::init.phtml')
                ->assign([
                    'clientKey' => $clientKey
                ]);
        return $script;
    }

    public function getEventScript($eventData = [])
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }
        $script = $this->_layout->createBlock('Convertcart\Analytics\Block\Script')
        ->setTemplate('Convertcart_Analytics::event.phtml')
        ->assign([
            'eventData' => json_encode($eventData)
        ]);
        return $script;
    }

    public function storeCcEvents($eventName, $eventData = [])
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }
        $ccEvents = $this->_fwSession->getCcEvents();
        $eventData['ccEvent'] = $this->_dataHelper->getEventType($eventName);
        $eventLimit = 3;
        if (empty($ccEvents)) {
            $ccEvents = [];
            $ccEvents[] = $this->addMetaData($eventData);
        } elseif (count($ccEvents) >= $eventLimit) {
            $eventIndex = $eventLimit - 1;
            $ccEvents[$eventIndex] = $this->addMetaData($eventData);
        } else {
            $ccEvents[] = $this->addMetaData($eventData);
        }

        $this->_fwSession->setCcEvents($ccEvents);
    }

    public function fetchCcEvents()
    {
        if ($this->_dataHelper->isEnabled() == false) {
            return;
        }

        $ccEvents = $this->_fwSession->getCcEvents();
        $this->_fwSession->setCcEvents();
        if (empty($ccEvents)) {
            return [];
        } else {
            return $ccEvents;
        }
    }

    public function addMetaData($eventData = [])
    {
        $metaData = [];
        $metaData['plugin_version'] = $this->_dataHelper->getModuleVersion();
        $eventData['meta_data'] = $metaData;
        return $eventData;
    }

    public function getCartEventData($quote, $currency)
    {
        if (!is_object($quote)) {
            return;
        }
        $cartItems = $quote->getAllVisibleItems();
        $eventData = [];
        $eventData['currency'] = $currency;
        $eventData['items'] = [];
        foreach ($cartItems as $item) {
            $cartItem = [];
            $cartItem['name'] = str_replace("'", "", $item->getName());
            $cartItem['price'] = $item->getPrice();
            $cartItem['currency'] = $currency;
            $cartItem['quantity'] = $item->getQty();
            $cartItem['id'] = $item->getProductId();
            $cartItem['sku'] = $item->getSku();
            $cartItem['customOptions'] = $this->getCartItemOptions($item);

            $product = $item->getProduct();
            if (is_object($product)) {
                $cartItem['url'] = $product->getProductUrl();
                if (!empty($product->getSmallImage())) {
                    $store = $this->_storeManager->getStore();
                    $cartItem['image'] = $store->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
                    $cartItem['image'].= 'catalog/product'.$product->getSmallImage();
                }
            }
            $eventData['items'][] = $cartItem;
        }
        $eventData['currency'] = $currency;
        $eventData['coupon_code'] = $quote->getCouponCode();
        $eventData['subtotal'] = $quote->getSubtotal();
        $eventData['total'] = $quote->getGrandTotal();
        $eventData['base_total'] = $quote->getBaseGrandTotal();

        return $eventData;
    }

    public function getCartItemOptions($item)
    {
        if (!is_object($item)) {
            return null;
        }

        $product = $item->getProduct();
        if (!is_object($product)) {
            return null;
        }

        $productInstance = $product->getTypeInstance(true);
        if (!is_object($productInstance)) {
            return null;
        }

        $productOptions = $productInstance->getOrderOptions($product);
        $options = !empty($productOptions['options']) ? $productOptions['options'] : null;
        if (empty($options)) {
            return null;
        }

        $customOptions = [];
        foreach ($options as $option) {
            $customOption = [];
            $customOption['label'] = !empty($option['label']) ? $option['label'] : null;
            $customOption['value'] = !empty($option['value']) ? $option['value'] : null;
            $customOption['option_id'] = !empty($option['option_id']) ? $option['option_id'] : null;
            $customOption['option_type'] = !empty($option['option_type']) ? $option['option_type'] : null;
            $customOptions[] = $customOption;
        }

        return $customOptions;
    }

    public function getCustomerData($customer)
    {
        if (!is_object($customer)) {
            return;
        }
        $customerData = [];
        $customerData['email'] = $customer->getEmail();
        $customerData['first_name'] = $customer->getFirstname();
        $customerData['last_name'] = $customer->getLastname();
        $customerData['id'] = $customer->getId();

        return $customerData;
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Data/PluginInfo.php
File type: .php
<?php
namespace Convertcart\Analytics\Model\Data;

use Magento\Framework\DataObject;

class PluginInfo extends DataObject
{
    private $version;
    private $tables;
    private $triggers;

    public function getVersion(): string
    {
        return $this->version;
    }

    public function setVersion(string $version): void
    {
        $this->version = $version;
    }

    public function getTables(): array
    {
        return $this->tables;
    }

    public function setTables(array $tables): void
    {
        $this->tables = $tables;
    }

    public function getTriggers(): array
    {
        return $this->triggers;
    }

    public function setTriggers(array $triggers): void
    {
        $this->triggers = $triggers;
    }

    public function jsonSerialize(): array
    {
        return [
            'version' => $this->getVersion(),
            'tables' => $this->getTables(),
            'triggers' => $this->getTriggers()
        ];
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Api/SyncApi.php
File type: .php
<?php

namespace Convertcart\Analytics\Model\Api;

use Convertcart\Analytics\Model\SyncFactory;
use Convertcart\Analytics\Model\ResourceModel\Sync\Collection;

class SyncApi implements \Convertcart\Analytics\Api\SyncRepositoryInterface
{

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $_logger;

    /**
     * @var \Convertcart\Analytics\Model\SyncFactory
     */
    protected $_deletedProduct;

    public function __construct(
        \Convertcart\Analytics\Logger\Logger $_logger,
        \Convertcart\Analytics\Model\SyncFactory $deletedProduct
    ) {
        $this->_logger = $_logger;
        $this->_deletedProduct = $deletedProduct;
    }

    /**
     * Deleted product
     *
     * @inheriDoc
     *
     * @param int $limit
     * @param int $id
     * @param string $type
     */
    public function getDeletedProduct($limit, $id, $type)
    {
        try {
            // to delete the previous synced data ($id is last sync id);
            $model = $this->_deletedProduct->create()->getCollection();

            // Filter by type
            $model->addFieldToFilter("type", ["eq" => $type]);
            if ($id) {
                // If an ID is provided, fetch only records greater than this ID
                $model->addFieldToFilter("id", ['gt' => $id]);
            }
            // Limit the number of records
            $model->setPageSize($limit);

            return $model->getData();
        } catch (\Exception $e) {
            $this->_logger->error($e->getMessage());
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/Api/PluginInfo.php
File type: .php
<?php
namespace Convertcart\Analytics\Model\Api;

use Convertcart\Analytics\Api\PluginInfoInterface;
use Magento\Framework\App\ResourceConnection;
use Magento\Framework\Module\ModuleListInterface;
use Magento\Framework\DB\Adapter\AdapterInterface;
use Magento\Framework\DataObject;
use Convertcart\Analytics\Model\Data\PluginInfoFactory;
use Convertcart\Analytics\Logger\Logger;

class PluginInfo implements PluginInfoInterface
{
    /**
     * @var ResourceConnection
     */
    protected $resourceConnection;

    /**
     * @var ModuleListInterface
     */
    protected $moduleList;

    /**
     * @var AdapterInterface
     */
    protected $connection;

    /**
     * @var \Convertcart\Analytics\Logger\Logger
     */
    protected $logger;

    /**
     * @var PluginInfoFactory
     */
    protected $pluginInfoFactory;

    /**
     * Constructor.
     *
     * @param ResourceConnection $resourceConnection
     * @param ModuleListInterface $moduleList
     * @param Logger $logger
     * @param PluginInfoFactory $pluginInfoFactory
     */
    public function __construct(
        ResourceConnection $resourceConnection,
        ModuleListInterface $moduleList,
        Logger $logger,
        PluginInfoFactory $pluginInfoFactory
    ) {
        $this->resourceConnection = $resourceConnection;
        $this->moduleList = $moduleList;
        $this->connection = $resourceConnection->getConnection();
        $this->logger = $logger;
        $this->pluginInfoFactory = $pluginInfoFactory;
    }

    /**
     * Get plugin information.
     *
     * @return \Convertcart\Analytics\Model\Data\PluginInfo
     */
    public function getPluginInfo()
    {
        // Get plugin version
        $moduleCode = 'Convertcart_Analytics';
        $moduleInfo = $this->moduleList->getOne($moduleCode);
        $pluginVersion = isset($moduleInfo['setup_version']) ? $moduleInfo['setup_version'] : 'Unknown';

        // Check if required tables exist
        $requiredTables = ['convertcart_sync_activity'];
        $existingTables = $this->connection->listTables();

        // Create associative array for tables
        $tablesExist = [];
        foreach ($requiredTables as $table) {
            $tableName = $this->resourceConnection->getTableName($table);
            $tablesExist[$table] = in_array($tableName, $existingTables);
        }

        // Check if required triggers exist
        $requiredTriggers = [
            'update_cpe_after_insert_catalog_product_entity_decimal',
            'update_cpe_after_update_catalog_product_entity_decimal',
            'update_cpe_after_insert_catalog_inventory_stock_item',
            'update_cpe_after_update_catalog_inventory_stock_item'
        ];

        $query = "SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_SCHEMA = DATABASE()";
        $existingTriggers = $this->connection->fetchCol($query);

        // Create associative array for triggers
        $triggersExist = [];
        foreach ($requiredTriggers as $trigger) {
            $triggersExist[$trigger] = in_array($trigger, $existingTriggers);
        }

        // Use PluginInfoFactory to create a PluginInfo object
        /** @var \Convertcart\Analytics\Model\Data\PluginInfo $pluginInfo */
        $pluginInfo = $this->pluginInfoFactory->create();
        $pluginInfo->setVersion($pluginVersion);
        $pluginInfo->setTables($tablesExist);
        $pluginInfo->setTriggers($triggersExist);

        // Logging for debugging
        $this->logger->debug('Existing triggers: ' . print_r($existingTriggers, true));
        $this->logger->debug('Plugin Info Data: ' . json_encode($pluginInfo));

        return $pluginInfo;
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/ResourceModel/Sync.php
File type: .php
<?php


namespace Convertcart\Analytics\Model\ResourceModel;

use Magento\Framework\Model\ResourceModel\Db\AbstractDb;

class Sync extends AbstractDb
{
    public const MAIN_TABLE = 'convertcart_sync_activity';
    public const ID_FIELD_NAME = 'id';

    protected function _construct()
    {
        $this->_init(self::MAIN_TABLE, self::ID_FIELD_NAME);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Model/ResourceModel/PluginInfo.php
File type: .php
<?php
namespace Convertcart\Analytics\Model\ResourceModel;

use Magento\Framework\Model\ResourceModel\Db\AbstractDb;

class PluginInfo extends AbstractDb
{
    /**
     * @inheritDoc
     */
    protected function _construct()
    {
        // Define a dummy table and id field since we're not actually using the database
        $this->_init('dummy_table', 'entity_id');
    }
} 

--------------------------------------------------
File End
--------------------------------------------------


./Model/ResourceModel/Sync/Collection.php
File type: .php
<?php


namespace Convertcart\Analytics\Model\ResourceModel\Sync;

use Convertcart\Analytics\Model\Sync;
use Convertcart\Analytics\Model\ResourceModel\Sync as SyncResourceModel;
use Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection;

class Collection extends AbstractCollection
{
    public function _construct()
    {
        $this->_init(Sync::class, SyncResourceModel::class);
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./view/frontend/templates/init.phtml
File type: .phtml
<?php
// @codingStandardsIgnoreFile
$clientKey = htmlspecialchars($clientKey, ENT_QUOTES, 'UTF-8');
?>
<!-- ConvertCart Initialization Started -->
<script type="text/javascript">
(function() {
    function loadScript(src) {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = src;
        script.async = true;
        script.onload = function() {
            console.log('ConvertCart script loaded:', src);
        };
        script.onerror = function() {
            console.error('Failed to load ConvertCart script:', src);
        };
        document.head.appendChild(script);
    }

    var scriptSrc = "//cdn.convertcart.com/<?php echo $clientKey; ?>.js";

    if (typeof require !== 'undefined') {
        require([scriptSrc], function() {
            console.log('ConvertCart loaded via RequireJS');
        }, function() {
            loadScript(scriptSrc);
        });
    } else {
        loadScript(scriptSrc);
    }
})();
</script>
<!-- ConvertCart Initialization Ended -->


--------------------------------------------------
File End
--------------------------------------------------


./view/frontend/templates/event.phtml
File type: .phtml
<?php
// @codingStandardsIgnoreFile
?>
<!-- ConvertCart Event-->
<script type='text/javascript' data-cfasync="false">
    window.ccLayer = window.ccLayer || [];
    ccLayer.push(<?php echo $eventData; ?>);
</script>
<!-- ConvertCart Event -->

--------------------------------------------------
File End
--------------------------------------------------


./Setup/UpgradeSchema.php
File type: .php
<?php

namespace Convertcart\Analytics\Setup;

use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\DB\Ddl\Table;

class UpgradeSchema implements \Magento\Framework\Setup\UpgradeSchemaInterface
{
    /**
     * Create table if not exists
     *
     * @param SchemaSetupInterface $setup
     * @param ModuleContextInterface $context
     */
    public function upgrade(SchemaSetupInterface $setup, ModuleContextInterface $context)
    {
        $setup->startSetup();
        $conn = $setup->getConnection();
        if ($setup->getConnection()->isTableExists('convertcart_sync_activity') != true) {
            $tableName = $setup->getTable('convertcart_sync_activity');
            if ($conn->isTableExists($tableName) != true) {

                $table = $conn->newTable($tableName)
                                ->addColumn(
                                    'id',
                                    Table::TYPE_INTEGER,
                                    null,
                                    ['unsigned'=>true,'nullable'=>false,'auto_increment' => true,'primary'=>true]
                                )
                                ->addColumn(
                                    'item_id',
                                    Table::TYPE_INTEGER,
                                    null,
                                    ['nullable'=>false]
                                )
                                ->addColumn(
                                    'type',
                                    Table::TYPE_TEXT,
                                    55,
                                    ['nullable'=>false]
                                )
                                ->addColumn(
                                    'created_at',
                                    Table::TYPE_TIMESTAMP,
                                    null,
                                    ['nullable' => false, 'default' => Table::TIMESTAMP_INIT]
                                )
                                ->setOption('charset', 'utf8');
                $conn->createTable($table);
            }
        }
        $setup->endSetup();
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Setup/Uninstall.php
File type: .php
<?php

namespace Convertcart\Analytics\Setup;

use Magento\Framework\Setup\UninstallInterface;
use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\DB\Ddl\Table;
use Magento\Framework\Exception\LocalizedException;

class Uninstall implements UninstallInterface
{
    /**
     * Drop table and triggers
     *
     * @param SchemaSetupInterface $setup
     * @param ModuleContextInterface $context
     * @throws LocalizedException
     */
    public function uninstall(SchemaSetupInterface $setup, ModuleContextInterface $context)
    {
        $conn = $setup->getConnection();
        $tableName = $setup->getTable('convertcart_sync_activity');

        // Drop the table if it exists
        if ($conn->isTableExists($tableName)) {
            $conn->dropTable($tableName);
        }

        // Array of trigger names to be dropped
        $triggerNames = [
            'update_cpe_after_insert_catalog_product_entity_decimal',
            'update_cpe_after_update_catalog_product_entity_decimal',
            'update_cpe_after_insert_catalog_inventory_stock_item',
            'update_cpe_after_update_catalog_inventory_stock_item'
        ];

        // Loop through each trigger
        foreach ($triggerNames as $triggerName) {
            // Check if the trigger exists
            $triggerExists = $conn->fetchOne(
                "SELECT TRIGGER_NAME FROM information_schema.TRIGGERS 
                 WHERE TRIGGER_NAME = :trigger_name AND TRIGGER_SCHEMA = DATABASE()",
                ['trigger_name' => $triggerName]
            );

            // If the trigger exists, drop it
            if ($triggerExists) {
                try {
                    $conn->query("DROP TRIGGER IF EXISTS $triggerName");
                } catch (\Exception $e) {
                    // Handle exception if trigger dropping fails
                    throw new LocalizedException(__('Error dropping trigger %1: %2', $triggerName, $e->getMessage()));
                }
            }
        }
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./Setup/InstallSchema.php
File type: .php
<?php

namespace Convertcart\Analytics\Setup;

use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\DB\Ddl\Table;


class InstallSchema implements \Magento\Framework\Setup\InstallSchemaInterface
{
    /**
     * Create table and triggers
     *
     * @param SchemaSetupInterface $setup
     * @param ModuleContextInterface $context
     */
    public function install(SchemaSetupInterface $setup, ModuleContextInterface $context)
    {
        $setup->startSetup();
        $conn = $setup->getConnection();
        $tableName = $setup->getTable('convertcart_sync_activity');

        if (!$conn->isTableExists($tableName)) {
            $table = $conn->newTable($tableName)
                ->addColumn(
                    'id',
                    Table::TYPE_INTEGER,
                    null,
                    ['unsigned' => true, 'nullable' => false, 'auto_increment' => true, 'primary' => true]
                )
                ->addColumn(
                    'item_id',
                    Table::TYPE_INTEGER,
                    null,
                    ['nullable' => false]
                )
                ->addColumn(
                    'type',
                    Table::TYPE_TEXT,
                    55,
                    ['nullable' => false]
                )
                ->addColumn(
                    'created_at',
                    Table::TYPE_TIMESTAMP,
                    null,
                    ['nullable' => false, 'default' => Table::TIMESTAMP_INIT]
                )
                ->setOption('charset', 'utf8');
            $conn->createTable($table);
        }

        $triggers = [
            'update_cpe_after_insert_catalog_product_entity_decimal' => "
                CREATE TRIGGER update_cpe_after_insert_catalog_product_entity_decimal
                AFTER INSERT ON " . $setup->getTable('catalog_product_entity_decimal') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.entity_id;",
            'update_cpe_after_update_catalog_product_entity_decimal' => "
                CREATE TRIGGER update_cpe_after_update_catalog_product_entity_decimal
                AFTER UPDATE ON " . $setup->getTable('catalog_product_entity_decimal') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.entity_id;",
            'update_cpe_after_insert_catalog_inventory_stock_item' => "
                CREATE TRIGGER update_cpe_after_insert_catalog_inventory_stock_item
                AFTER INSERT ON " . $setup->getTable('cataloginventory_stock_item') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.product_id;",
            'update_cpe_after_update_catalog_inventory_stock_item' => "
                CREATE TRIGGER update_cpe_after_update_catalog_inventory_stock_item
                AFTER UPDATE ON " . $setup->getTable('cataloginventory_stock_item') . "
                FOR EACH ROW
                    UPDATE " . $setup->getTable('catalog_product_entity') . "
                    SET updated_at = NOW()
                    WHERE entity_id = NEW.product_id;"
        ];

        // Loop through each trigger
        foreach ($triggers as $triggerName => $triggerSql) {
            // Check if the trigger already exists
            $triggerExists = $conn->fetchOne(
                "SELECT TRIGGER_NAME FROM information_schema.TRIGGERS 
                 WHERE TRIGGER_NAME = :trigger_name AND TRIGGER_SCHEMA = DATABASE()",
                ['trigger_name' => $triggerName]
            );

            // If the trigger does not exist, create it
            if (!$triggerExists) {
                try {
                    $conn->query($triggerSql);
                } catch (\Exception $e) {
                    // Handle exception if trigger creation fails
                    throw new \RuntimeException('Error creating trigger: ' . $e->getMessage());
                }
            }
        }

        $setup->endSetup(); // Finalize the setup process
    }
}

--------------------------------------------------
File End
--------------------------------------------------


./Setup/UpgradeData.php
File type: .php
<?php
namespace Vendor\Module\Setup;

use Magento\Framework\Setup\ModuleDataSetupInterface;
use Magento\Framework\Setup\UpgradeDataInterface;
use Magento\Framework\Setup\ModuleContextInterface;

/* 
    No data updates, 
    but the presence of this file ensures 
    Magento updates data_version of setup_module table
*/

class UpgradeData implements UpgradeDataInterface
{
    public function upgrade(ModuleDataSetupInterface $setup, ModuleContextInterface $context)
    {
        $setup->startSetup();
        $setup->endSetup();
    }
}


--------------------------------------------------
File End
--------------------------------------------------


./etc/webapi.xml
File type: .xml
<?xml version="1.0"?>
<routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Webapi:etc/webapi.xsd">
	<route url="/V1/cc/sync-activity/:limit/:id/:type" method="GET">
		<service class="Convertcart\Analytics\Api\SyncRepositoryInterface" method="getDeletedProduct"/>
		<resources>
			<resource ref="Magento_Catalog::products"/>
		</resources>
	</route>
	<route url="/V1/cc/plugin-info" method="GET">
		<service class="Convertcart\Analytics\Api\PluginInfoInterface" method="getPluginInfo"/>
		<resources>
			<resource ref="anonymous"/>
		</resources>
	</route>
</routes>

--------------------------------------------------
File End
--------------------------------------------------


./etc/di.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../../lib/internal/Magento/Framework/ObjectManager/etc/config.xsd">
    <type name="Convertcart\Analytics\Logger\Handler">
        <arguments>
            <argument name="filesystem" xsi:type="object">Magento\Framework\Filesystem\Driver\File</argument>
        </arguments>
    </type>
    <type name="Convertcart\Analytics\Logger\Logger">
        <arguments>
            <argument name="name" xsi:type="string">myLoggerName</argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Convertcart\Analytics\Logger\Handler</item>
            </argument>
        </arguments>
    </type>
    <preference for="Convertcart\Analytics\Api\SyncRepositoryInterface" type="Convertcart\Analytics\Model\Api\SyncApi"/>
    <preference for="Convertcart\Analytics\Api\Data\SyncInterface" type="Convertcart\Analytics\Model\SyncManagement" />
    <preference for="Convertcart\Analytics\Api\PluginInfoInterface" type="Convertcart\Analytics\Model\Api\PluginInfo" />
    <preference for="Convertcart\Analytics\Api\Data\PluginInfoInterface" type="Convertcart\Analytics\Model\Data\PluginInfo" />
    <virtualType name="Convertcart\Analytics\Model\ResourceModel\PluginInfo\Collection" type="Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection">
        <arguments>
            <argument name="model" xsi:type="string">Convertcart\Analytics\Model\Data\PluginInfo</argument>
            <argument name="resourceModel" xsi:type="string">Convertcart\Analytics\Model\ResourceModel\PluginInfo</argument>
        </arguments>
    </virtualType>
</config>


--------------------------------------------------
File End
--------------------------------------------------


./etc/module.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
    <module name="Convertcart_Analytics" setup_version="1.0.8"/>
</config>

--------------------------------------------------
File End
--------------------------------------------------


./etc/adminhtml/events.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd">
    <event name="catalog_product_delete_after_done">
        <observer name="convertcart_deleted_product" instance="Convertcart\Analytics\Observer\ProcessProductAfterDeleteEventObserver"/>
    </event>
     <event name="catalog_category_delete_after_done">
        <observer name="convertcart_deleted_category" instance="Convertcart\Analytics\Observer\ProcessCategoryAfterDeleteEventObserver"/>
    </event>
</config>


--------------------------------------------------
File End
--------------------------------------------------


./etc/adminhtml/system.xml
File type: .xml
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Config:etc/system_file.xsd">
    <system>
        <tab id="convertcart_config" translate="label" sortOrder="1000">
            <label>Convertcart</label>
        </tab>
        <section id="convertcart" translate="label" sortOrder="100" showInDefault="1" showInWebsite="1" showInStore="1">
            <class>separator-top</class>
            <label>Convertcart Configuration</label>
            <tab>convertcart_config</tab>
            <resource>Convertcart_Analytics::config</resource>
            <group id="configuration" translate="label" sortOrder="10" showInDefault="1" showInWebsite="1" showInStore="1">
                <label>Convertcart Configuration</label>
                <comment></comment>
                <field id="domainid" translate="label" sortOrder="1" showInDefault="1" showInWebsite="1" showInStore="1">
                    <label>Domain Id</label>
                    <comment>Contact ConvertCart to get this key.</comment>
                </field>
            </group>
        </section>
    </system>
</config>

--------------------------------------------------
File End
--------------------------------------------------


./etc/frontend/events.xml
File type: .xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd">
    <event name="layout_render_before">
        <observer name="Convertcart_Analytics" instance="Convertcart\Analytics\Observer\AddScript"/>
    </event>
    <event name="controller_action_postdispatch_cms_index_index">
        <observer name="convertcart_analytics_homepage_viewed" instance="Convertcart\Analytics\Observer\HomepageViewed"/>
    </event>
    <event name="controller_action_predispatch_cms_page_view">
        <observer name="convertcart_analytics_contentpage_viewed" instance="Convertcart\Analytics\Observer\ContentpageViewed"/>
    </event>
    <event name="controller_action_postdispatch_catalog_product_view">
        <observer name="convertcart_analytics_product_viewed" instance="Convertcart\Analytics\Observer\Catalog\ProductViewed"/>
    </event>
    <event name="controller_action_postdispatch_catalog_category_view">
        <observer name="convertcart_analytics_category_viewed" instance="Convertcart\Analytics\Observer\Catalog\CategoryViewed"/>
    </event>
    <event name="search_query_load_after">
        <observer name="convertcart_analytics_products_searched" instance="Convertcart\Analytics\Observer\ProductsSearched"/>
    </event>
    <event name="controller_action_predispatch_checkout_cart_index">
        <observer name="convertcart_analytics_cart_viewed" instance="Convertcart\Analytics\Observer\Cart\CartViewed"/>
    </event>
    <event name="controller_action_predispatch_checkout_index_index">
        <observer name="convertcart_analytics_checkout_viewed" instance="Convertcart\Analytics\Observer\Cart\CheckoutViewed"/>
    </event>
    <event name="checkout_onepage_controller_success_action">
        <observer name="convertcart_analytics_order_completed" instance="Convertcart\Analytics\Observer\Cart\OrderCompleted"/>
    </event>
    <event name="customer_register_success">
        <observer name="convertcart_analytics_customer_registered" instance="Convertcart\Analytics\Observer\Customer\CustomerRegistered"/>
    </event>
    <event name="customer_login">
        <observer name="convertcart_analytics_logged_in" instance="Convertcart\Analytics\Observer\Customer\LoggedIn"/>
    </event>
    <event name="customer_logout">
        <observer name="convertcart_analytics_logged_out" instance="Convertcart\Analytics\Observer\Customer\LoggedOut"/>
    </event>
</config>


--------------------------------------------------
File End
--------------------------------------------------
